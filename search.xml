<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringBoot学习记录</title>
      <link href="/2025/06/02/SpringBoot%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2025/06/02/SpringBoot%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1-接口测试工具postman"><a href="#1-接口测试工具postman" class="headerlink" title="1.接口测试工具postman"></a>1.接口测试工具postman</h1><p>get：在Params中输入参数</p><p>post：在Body中选择x-www-form-…，再输入请求信息</p><p>json：在Body中选择raw，并在后面的下拉列表中选择json。</p><blockquote><p>json中数据格式为key：value，其中key必须加“ ”，否则报错。</p></blockquote><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202504301150939.png" alt="image-20250429212904896"></p><h1 id="2-请求和响应"><a href="#2-请求和响应" class="headerlink" title="2.请求和响应"></a>2.请求和响应</h1><blockquote><p>目录结构如下：</p><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202504301702643.png" alt="image-20250430170209601"></p></blockquote><h2 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h2><p>1.demo.js</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.backend.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.format.annotation.DateTimeFormat;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求处理类</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">demo</span> &#123;</span><br><span class="line">    <span class="comment">//@RequestMapping指定方法的请求路径</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在原始web程序中获取请求参数，通过HttpServletRequest手动获取</span></span><br><span class="line"><span class="comment">//    @RequestMapping(&quot;/simpleParam&quot;)</span></span><br><span class="line"><span class="comment">//    public String simpleParam(HttpServletRequest request)&#123;</span></span><br><span class="line"><span class="comment">//        //接收前端的请求</span></span><br><span class="line"><span class="comment">//        String name = request.getParameter(&quot;name&quot;);</span></span><br><span class="line"><span class="comment">//        String agestr =  request.getParameter(&quot;age&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        //将字符串类型转换为数字</span></span><br><span class="line"><span class="comment">//        int age = Integer.parseInt(agestr);</span></span><br><span class="line"><span class="comment">//        System.out.println(name+&quot;:&quot;+age);</span></span><br><span class="line"><span class="comment">//        return &quot;ok&quot;;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//在springboot中只需要参数名和形参变量名相同，定义形参即可接受参数</span></span><br><span class="line"><span class="comment">//    @RequestMapping(&quot;/simpleParam&quot;)</span></span><br><span class="line"><span class="comment">//    public String simpleParam(String name, Integer age)&#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(name+&quot;:&quot;+age);</span></span><br><span class="line"><span class="comment">//        return &quot;ok&quot;;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果形参实参对应不上，需要使用@RequestParam(name=&quot;&quot; / value=&quot;&quot;)进行映射</span></span><br><span class="line">    <span class="comment">//并且如果加了@RequestParam，这个参数必须传递，除非改为@RequestParam(name=&quot;&quot; ，required=flase)</span></span><br><span class="line"><span class="comment">//    @RequestMapping(&quot;/simpleParam&quot;)</span></span><br><span class="line"><span class="comment">//    public String simpleParam(@RequestParam(name = &quot;name&quot;) String username, Integer age)&#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(username+&quot;:&quot;+age);</span></span><br><span class="line"><span class="comment">//        return &quot;ok&quot;;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//简单实体参数,定义User简单参数实体类，传递name，age两个简单参数</span></span><br><span class="line"><span class="comment">//    @RequestMapping(&quot;/simplePojo&quot;)</span></span><br><span class="line"><span class="comment">//    public String simplePojo(User user)&#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(user);</span></span><br><span class="line"><span class="comment">//        return &quot;simplePojo&quot;;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//复杂参数实体类，定义User，Address两个实体类</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/complexPojo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">complexPojo</span><span class="params">(User user)</span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;complexPojo&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组参数,请求参数名和形参中数组变量名相同，可以直接使用数组封装</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/arrayParam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">arrayParam</span><span class="params">(String[] hobby)</span> &#123;</span><br><span class="line">        System.out.println(Arrays.toString(hobby));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ListParam&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//集合参数，请求参数名和形参中集合变量名相同，通过@RequestParam绑定参数关系</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/ListParam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">ListParam</span><span class="params">(<span class="meta">@RequestParam</span> List&lt;String&gt; hobby)</span> &#123;</span><br><span class="line">        System.out.println(hobby);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ListParam&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//日期参数,使用@DateTimeFormat注解完成日期参数格式转换</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/dataParam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">dataParam</span><span class="params">(<span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span>LocalDateTime updataTime)</span>&#123;</span><br><span class="line">        System.out.println(updataTime);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;dataParam&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//JSON参数，数据键名和形参对象属性名相同，定义POJO类型形参即可接受参数，需要使用@RequestBody标识</span></span><br><span class="line">    <span class="comment">//@RequestBody将json请求封装到实体对象中</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/jsonParam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">jsonParam</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;jsonParam&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//路径参数，通过请求URL直接传递参数，使用&#123;...&#125;来表示该参数路径，需要使用@PathVariable获取路径参数</span></span><br><span class="line">    <span class="comment">//这里的路径参数名是id，用户直接输入网址http://localhost:8080/path/10,则10就是这里获取的路径参数，得到id=10</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/path/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">pathParam</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span>&#123;</span><br><span class="line">        System.out.println(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//多个路径参数</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/path/&#123;id&#125;/&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">pathParam</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, <span class="meta">@PathVariable</span> String name)</span>&#123;</span><br><span class="line">        System.out.println(id+<span class="string">&quot;:&quot;</span>+name);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;path&quot;</span>;<span class="comment">//给用户端返回字符串path</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.&#x2F;pojo&#x2F;user</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.amqp.RabbitConnectionDetails;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实体类，封装前端请求的参数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="comment">//复杂参数部分开始,定义addreaa属性，并生成get，set方法</span></span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//复杂参数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Address <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(Address address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public String toString()&#123;</span></span><br><span class="line"><span class="comment">//        return &quot;User&#123;&quot; +</span></span><br><span class="line"><span class="comment">//                &quot;name=&quot;+name+&#x27;\&#x27;&#x27;+</span></span><br><span class="line"><span class="comment">//                &quot;,age=&quot;+age+</span></span><br><span class="line"><span class="comment">//                &#x27;)&#x27;;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, address=&quot;</span> + address +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.&#x2F;pojo&#x2F;address</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Address</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String province;</span><br><span class="line">    <span class="keyword">private</span> String city;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义好变量之后，直接右键点击生成，选择Getter and Setter和toString自动生成方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Address&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;province=&#x27;&quot;</span> + province + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, city=&#x27;&quot;</span> + city + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProvince</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> province;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProvince</span><span class="params">(String province)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.province = province;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> city;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCity</span><span class="params">(String city)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.city = city;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h2><p>1.responseController.js</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.backend.controller;</span><br><span class="line"><span class="comment">//测试响应数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> pojo.Address;</span><br><span class="line"><span class="keyword">import</span> pojo.Result;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">responseController</span> &#123;</span><br><span class="line"><span class="comment">//    @RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="comment">//    public String hello()&#123;</span></span><br><span class="line"><span class="comment">//        return &quot;hello&quot;;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    //构建Address对象并返回，Address对象类型在/pojo/Address中定义</span></span><br><span class="line"><span class="comment">//    @RequestMapping(&quot;/getAddr&quot;)</span></span><br><span class="line"><span class="comment">//    public Address getAddr()&#123;</span></span><br><span class="line"><span class="comment">//        Address addr = new Address();</span></span><br><span class="line"><span class="comment">//        addr.setCity(&quot;&lt;UNK&gt;&quot;);</span></span><br><span class="line"><span class="comment">//        addr.setProvince(&quot;深圳&quot;);</span></span><br><span class="line"><span class="comment">//        return addr;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    //集合</span></span><br><span class="line"><span class="comment">//    @RequestMapping(&quot;/listAddr&quot;)</span></span><br><span class="line"><span class="comment">//    public List&lt;Address&gt; listAddr()&#123;</span></span><br><span class="line"><span class="comment">//        List&lt;Address&gt; list = new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Address addr = new Address();</span></span><br><span class="line"><span class="comment">//        addr.setCity(&quot;&lt;UNK&gt;&quot;);</span></span><br><span class="line"><span class="comment">//        addr.setProvince(&quot;深圳&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Address addr1 = new Address();</span></span><br><span class="line"><span class="comment">//        addr.setCity(&quot;陕西&quot;);</span></span><br><span class="line"><span class="comment">//        addr.setProvince(&quot;西安&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        list.add(addr);</span></span><br><span class="line"><span class="comment">//        list.add(addr1);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        return list;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">//设置统一响应结果以便于项目管理</span></span><br><span class="line">    <span class="comment">//在/pojo/result这个java文件中设置统一响应结果</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//return new Result(1,&quot;success&quot;,&quot;hello&quot;);</span></span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="string">&quot;hello&quot;</span>); <span class="comment">//上下两种return是一样的</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构建Address对象并返回，Address对象类型在/pojo/Address中定义</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getAddr&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">getAddr</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Address</span> <span class="variable">addr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Address</span>();</span><br><span class="line">        addr.setCity(<span class="string">&quot;&lt;UNK&gt;&quot;</span>);</span><br><span class="line">        addr.setProvince(<span class="string">&quot;深圳&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> Result.success(addr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//集合</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/listAddr&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">listAddr</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;Address&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="type">Address</span> <span class="variable">addr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Address</span>();</span><br><span class="line">        addr.setCity(<span class="string">&quot;&lt;UNK&gt;&quot;</span>);</span><br><span class="line">        addr.setProvince(<span class="string">&quot;深圳&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Address</span> <span class="variable">addr1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Address</span>();</span><br><span class="line">        addr.setCity(<span class="string">&quot;陕西&quot;</span>);</span><br><span class="line">        addr.setProvince(<span class="string">&quot;西安&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list.add(addr);</span><br><span class="line">        list.add(addr1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Result.success(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.&#x2F;pojo&#x2F;Result</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统一响应结果封装类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code;<span class="comment">//1表示返回成功，0失败</span></span><br><span class="line">    <span class="keyword">private</span> String msg;<span class="comment">//提示信息</span></span><br><span class="line">    <span class="keyword">private</span> Object data;<span class="comment">//数据data</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(Integer code, String msg, Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> &#123;<span class="keyword">return</span> code;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> &#123;<span class="built_in">this</span>.code = code;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;<span class="keyword">return</span> msg;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;<span class="built_in">this</span>.msg = msg;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getData</span><span class="params">()</span> &#123;<span class="keyword">return</span> data;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(Object data)</span> &#123;<span class="built_in">this</span>.data = data;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用静态方法快速构建Result对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">(Object data)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>( <span class="number">1</span>, <span class="string">&quot;success&quot;</span>, data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>( <span class="number">1</span>, <span class="string">&quot;success&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">error</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>( <span class="number">0</span>, msg, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Result&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;code=&quot;</span> + code +</span><br><span class="line">                <span class="string">&quot;, msg=&#x27;&quot;</span> + msg + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, data=&quot;</span> + data +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="3-三层架构"><a href="#3-三层架构" class="headerlink" title="3.三层架构"></a>3.三层架构</h1><blockquote><p>controller：控制层，接受前端发送的请求，对请求进行处理，并响应数据</p><p>service：业务逻辑层，处理具体的业务逻辑。</p><p>dao（mapper）：数据访问层，负责数据访问操作，包括数据的增删改查。</p></blockquote><p>前端请求先到达controller，接受请求后，调用service层的方法，service层调用dao层获取数据。dao层解析数据后，将数据返回service进行逻辑处理，最后将处理结构返回给controller，由controller层返回给前端。</p><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202504301718912.png" alt="image-20250430171829269"></p><h1 id="4-分层解耦"><a href="#4-分层解耦" class="headerlink" title="4.分层解耦"></a>4.分层解耦</h1><blockquote><p>内聚:软件中各个功能模块内部的功能联系。<br>耦合:衡量软件中各个层&#x2F;模块之间的依赖、关联的程度。</p><p>原则：高内聚，低耦合</p></blockquote><p>不再需要new empDao()，直接使用@component和@Autowired实现解耦。哪个service文件中标注了@component，控制层变量取到的就是哪个类。</p><p>@component，将当前类交给IOC容器管理，成为IOC容器中的bean</p><p>@Autowired，运行时，IOC容器会提供该类型的bean对象，并赋值给该变量。（依赖注入）</p><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202504301846691.png" alt="image-20250430184633443"></p><p>比如在service层会将业务拆成<strong>接口+实现类</strong>进行解耦，接口定义业务逻辑的抽象方法，不关心具体实现。实现类提供具体的业务逻辑代码。</p><h2 id="IOC详解"><a href="#IOC详解" class="headerlink" title="IOC详解"></a>IOC详解</h2><p>Bean声明（将某个对象交给IOC容器管理需要在类上加上的注释）</p><table><thead><tr><th>注解</th><th>说明</th><th>位置</th></tr></thead><tbody><tr><td>@Component</td><td>声明bean的基础注解</td><td>不属于以下三类时用</td></tr><tr><td>@Controller</td><td>@Component的衍生注解</td><td>标注在Controller控制器类上</td></tr><tr><td>@Service</td><td>@Component的衍生注解</td><td>标注在Service业务类上</td></tr><tr><td>@Repository</td><td>@Component的衍生注解</td><td>标注在数据访问类上(由于与mybatis整合，用的少)</td></tr></tbody></table><p>注：@RestController注解包含了@Controller和@ReposeBody</p><h2 id="DI详解"><a href="#DI详解" class="headerlink" title="DI详解"></a>DI详解</h2><p>@Autowired:默认按照类型自动装配<br>1.如果同类型的bean存在多个，需要再增加一个注解:<br>@Primary 或 @Autowired + @Qualifier(“bean的名称”) 或 @Resource(name&#x3D;”bean的名称”)</p><p>2.@Resource 与 @Autowired区别<br>@Autowired 是spring框架提供的注解，而@Resource是IDK提供的注解。<br>@Autowired 默认是按照类型注入，而@Resource默认是按照名称注入。</p>]]></content>
      
      
      <categories>
          
          <category> 后端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习记录</title>
      <link href="/2025/06/02/vue%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2025/06/02/vue%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>updating</p>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库学习-updating</title>
      <link href="/2025/05/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/"/>
      <url>/2025/05/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>navicat+idea</p></blockquote><h1 id="1-MySQL下载"><a href="#1-MySQL下载" class="headerlink" title="1.MySQL下载"></a>1.MySQL下载</h1><h1 id="2-数据库服务启动和连接"><a href="#2-数据库服务启动和连接" class="headerlink" title="2.数据库服务启动和连接"></a>2.数据库服务启动和连接</h1><p>win+r并输入cmd，同时按住ctrl和shift并点确定，用管理员模式打开cmd。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net start mysql <span class="comment">//启动数据库服务</span></span><br><span class="line">mysql -u root -p <span class="comment">//连接到数据库</span></span><br></pre></td></tr></table></figure><p>不用管理员模式会显示“发生系统错误5.拒绝访问”。</p><h1 id="3-navicat连接到本地数据库并建表"><a href="#3-navicat连接到本地数据库并建表" class="headerlink" title="3.navicat连接到本地数据库并建表"></a>3.navicat连接到本地数据库并建表</h1><blockquote><p>连接前先启动数据库服务</p></blockquote><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202505072028878.png" alt="image-20250507202813645"></p><p>点击进入连接信息界面后依次填入信息，最后点击下方<strong>“测试连接”</strong>。测试无误后点击<strong>确认</strong>即可连接到本地数据库。</p><p>右键建库建表。使用<strong>“生成数据”</strong>生成模拟数据。</p><h1 id="4-idea中连接数据库"><a href="#4-idea中连接数据库" class="headerlink" title="4.idea中连接数据库"></a>4.idea中连接数据库</h1><p>点击图中右侧图标后，选择<strong>“新建数据源”</strong>，输入<strong>用户、密码、数据库</strong>这些信息后<strong>“测试连接”</strong>，最后点击确认即可。</p><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202505072045991.png" alt="image-20250507204520896"></p><p>创建后窗口会自动弹出console窗口，后续各种表和数据操作的sql语句在这里编写和保存。可以右键选择将其重命名，这样便于后续操作。</p><h1 id="5-Mybatis"><a href="#5-Mybatis" class="headerlink" title="5.Mybatis"></a>5.Mybatis</h1><h2 id="1-配置Mybatis并测试"><a href="#1-配置Mybatis并测试" class="headerlink" title="1.配置Mybatis并测试"></a>1.配置Mybatis并测试</h2><p>1.创建springboot项目时勾选Mybatis相关依赖：<strong>MySQL Driver</strong>和<strong>MyBaties Framework</strong>。</p><p>2.在&#x2F;src&#x2F;resources&#x2F;application.properties文件中配置Mybatis（数据库连接信息）。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置数据库的连接信息 - 四要素</span></span><br><span class="line"><span class="comment">#驱动类名称</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment">#数据库连接的url,这里的url可以打开idea右侧数据库，点击数据源图标查看</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/stu_information</span></span><br><span class="line"><span class="comment">#连接数据库的用户名</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="comment">#连接数据库的密码</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">。。。</span></span><br><span class="line"><span class="comment">#配置mybaties的日志，指定输出到控制台。本条信息的关键字为mybatislog，输入这个会弹出提示框</span></span><br><span class="line"><span class="attr">mybatis.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><p>3.在&#x2F;src&#x2F;main&#x2F;java&#x2F;com.example.demo主包下创建创建接口：<strong>mapper.UserMapper</strong> (这种创建方式是创建一个mapper文件夹，并在该文件夹下创建UserMapper接口)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="meta">@Mapper</span> <span class="comment">//在运行时，会自动生成该接口的实现类对象（代理对象），并将该对象交给IOC容器管理，成为容器中的bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">//添加注解表示当前执行查询操作，在注解的value中写sql语句，查询全部用户信息</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from usermsg&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">list</span><span class="params">()</span>; <span class="comment">//定义接口方法，将查询到的集合封装到泛型为User对象的List中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的User来自&#x2F;src&#x2F;main&#x2F;java&#x2F;com.example.demo&#x2F;pojo&#x2F;User中定义的User实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer userId;</span><br><span class="line">    <span class="keyword">private</span> String userPsw;</span><br><span class="line">    <span class="keyword">private</span> String userAuth;</span><br><span class="line"><span class="comment">//右键“生成”-“构造函数”-“无选择”</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//右键“生成”-“构造函数”-按住ctrl全选参数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer userId, String userPsw, String userAuth)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userId = userId;</span><br><span class="line">        <span class="built_in">this</span>.userPsw = userPsw;</span><br><span class="line">        <span class="built_in">this</span>.userAuth = userAuth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getUserId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserId</span><span class="params">(Integer userId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userId = userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserPsw</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userPsw;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserPsw</span><span class="params">(String userPsw)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userPsw = userPsw;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserAuth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userAuth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserAuth</span><span class="params">(String userAuth)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userAuth = userAuth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;userId=&quot;</span> + userId +</span><br><span class="line">                <span class="string">&quot;, userPsw=&#x27;&quot;</span> + userPsw + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, userAuth=&#x27;&quot;</span> + userAuth + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.在&#x2F;src&#x2F;main&#x2F;test&#x2F;java&#x2F;com.example.demo&#x2F;DemoApplicationTests中进行单元测试，然后点击运行该文件。</p><blockquote><p>UserMapper是一个接口，并不能直接new一个接口对象。但是在接口文件中定义UserMapper时用了Mapper注解，将该对象变成了IOC容器中的bean，所以在单元测试中如果想用这个bean对象，就可以通过依赖注入方式使用，也就是Autowired</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span> <span class="comment">//springboot整合单元测试的注解</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DemoApplicationTests</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testListUser</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.list();</span><br><span class="line">        <span class="comment">//使用stream流将user中的信息遍历输出</span></span><br><span class="line">        userList.stream().forEach( user -&gt; &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-配置sql提示"><a href="#2-配置sql提示" class="headerlink" title="2.配置sql提示"></a>2.配置sql提示</h2><p>选中&#x2F;src&#x2F;main&#x2F;java&#x2F;com.example.demo&#x2F;mapper.UserMapper文件中sql语句，右键选择<strong>“显示上下文操作”</strong>–<strong>“语言注入设置”</strong>–<strong>“ID”</strong>中设置为MySql。</p><p>在idea中连接数据库（查看step4）后，还会自动提示表名。</p><h2 id="3-增删改查"><a href="#3-增删改查" class="headerlink" title="3.增删改查"></a>3.增删改查</h2><p>在&#x2F;src&#x2F;main&#x2F;java&#x2F;com.example.demo&#x2F;pojo中创建Emp实体类，存放数据库中student表中的数据段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Emp</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer stu_id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Short sex;</span><br><span class="line">    <span class="keyword">private</span> String origin_pro;</span><br><span class="line">    <span class="keyword">private</span> String native_pro;</span><br><span class="line">    <span class="keyword">private</span> LocalDate birth;</span><br><span class="line">    <span class="keyword">private</span> String major;</span><br><span class="line">    <span class="keyword">private</span> String department;</span><br><span class="line">    <span class="keyword">private</span> Float grade;</span><br><span class="line">    <span class="keyword">private</span> Integer tel;</span><br><span class="line">    <span class="keyword">private</span> String profile; <span class="comment">//图像url</span></span><br><span class="line">    <span class="keyword">private</span> String portrait;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在&#x2F;src&#x2F;main&#x2F;java&#x2F;com.example.demo&#x2F;mapper中创建EmpMapper接口，写接口方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmpMapper</span> &#123;</span><br><span class="line">    <span class="comment">//根据stu_id删除数据</span></span><br><span class="line">    <span class="comment">//使用#&#123;&#125;做占位符</span></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from student where stu_id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="comment">//public void delete(Integer id);</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>; <span class="comment">//返回删除的数据条数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增学生信息</span></span><br><span class="line">    <span class="comment">//主键返回：数据添加成功后，还需要获取插入数据库数据的主键。使用option注释</span></span><br><span class="line">    <span class="comment">//在EmpMapper文件中加上option注释获取主键值，并自动赋值给到Emp对象的stuId属性</span></span><br><span class="line">    <span class="meta">@Options(useGeneratedKeys = true , keyProperty = &quot;stuId&quot;)</span></span><br><span class="line">    <span class="comment">//有多个参数的时候，用实体类进行封装，比如这里的Emp类，然后在sql语句的value中使用实体类中的属性名，不用数据库表的字段名</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into student(stu_id, name, sex, origin_pro, native_pro, birth, major, department, grade, tel, profile, portrait) &quot; +</span></span><br><span class="line"><span class="meta">                    &quot;values (#&#123;stuId&#125;,#&#123;name&#125;,#&#123;sex&#125;,#&#123;originPro&#125;,#&#123;nativePro&#125;,#&#123;birth&#125;,#&#123;major&#125;,#&#123;department&#125;,#&#123;grade&#125;,#&#123;tel&#125;,#&#123;profile&#125;,#&#123;portrait&#125;)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(Emp emp)</span>; <span class="comment">//上面value中的字段名和这一行的方法中Emp这个实体类的属性名保持一致</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询学生信息</span></span><br><span class="line">    <span class="comment">//select的&#123;&#125;中的参数名和list方法中的形参名要保持一致</span></span><br><span class="line">    <span class="comment">//采用模糊搜索的话，要用%占位，使用concat进行字符串拼接</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from student where name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;) and sex = #&#123;sex&#125; &quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">list</span><span class="params">(String name, String sex)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在&#x2F;src&#x2F;main&#x2F;test&#x2F;java&#x2F;com.example.demo&#x2F;DemoApplicationTests写测试方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DemoApplicationTests</span> &#123;</span><br><span class="line">    <span class="comment">//删除员工信息测试</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmpMapper empMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> &#123;</span><br><span class="line">        empMapper.delete(<span class="number">2012020050</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//构造学生对象</span></span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>();</span><br><span class="line">        emp.setStuId(<span class="number">2012020050</span>);</span><br><span class="line">        emp.setBirth(LocalDate.of(<span class="number">2002</span>, <span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">        emp.setDepartment(<span class="string">&quot;计算机&quot;</span>);</span><br><span class="line">        emp.setMajor(<span class="string">&quot;软工&quot;</span>);</span><br><span class="line">        emp.setGrade(<span class="number">380F</span>);</span><br><span class="line">        emp.setNativePro(<span class="string">&quot;上海&quot;</span>);</span><br><span class="line">        emp.setOriginPro(<span class="string">&quot;上海&quot;</span>);</span><br><span class="line">        emp.setSex(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">        emp.setName(<span class="string">&quot;美丽&quot;</span>);</span><br><span class="line">        emp.setTel(<span class="number">1473976772</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行新增员工信息操作</span></span><br><span class="line">        empMapper.insert(emp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询学生</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testList</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Emp&gt; emps = empMapper.list(<span class="string">&quot;张&quot;</span>,<span class="string">&quot;女&quot;</span>);</span><br><span class="line">        System.out.println(emps);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-xml映射文件"><a href="#4-xml映射文件" class="headerlink" title="4.xml映射文件"></a>4.xml映射文件</h2><blockquote><p>在xml文件中写sql语句，接口文件中写接口方法。</p></blockquote><p>在MyBatis中，既可以通过<code>注解</code>的方式配置SQL语句，也可以通过<code>XML映射文件</code>的方式配置SQL语句。对于<strong>简单的</strong>SQL语句建议直接通过注解的方式配置SQL语句。但是当实现需求需要<strong>复杂的</strong>SQL语句时，使用注解往往无法很好的完成需求。此时就需要使用<code>XML映射文件</code>配置SQL语句。</p><h3 id="1-使用规则"><a href="#1-使用规则" class="headerlink" title="1.使用规则"></a>1.使用规则</h3><blockquote><p><strong>XML映射文件的名称必须和对应的Mapper接口完全、严格一致</strong>，并且XML映射文件必须和Mapper接口放置在<code>相同的包</code>下 <strong>（必须同包同名）。</strong></p></blockquote><p>在resources文件夹中右键新建一个目录，新建时目录用&#x2F;来分隔：com&#x2F;example&#x2F;demo&#x2F;mapper。建好后在这个文件夹下新建一个文件，和接口文件同名，格式为xml，即EmpMapper.xml。xml中的约束直接去mybatis中文网的[入门](<a href="https://mybatis.p2hp.com/getting-started.html">mybatis – MyBatis 3 | 入门</a>)文档复制就行。</p><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202505082219917.png" alt="image-20250508221953766"></p><blockquote><p><strong>XML映射文件中的<code>namespace属性</code>必须和对应的<code>Mapper接口</code>的全限定名完全一致</strong>，这样才能正确的进行映射。</p></blockquote><p>在接口文件中选中接口名，右键选择<strong>“复制粘贴特殊”</strong>–<strong>“复制引用”</strong>，然后回到xml文件中复制即可。</p><blockquote><p><strong>XML映射文件中的SQL语句的id必须和Mapper接口中的方法名完全一致，返回类型也必须完全一致</strong>。</p></blockquote><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202505091539595.png" alt="image-20250509153934407"></p><hr><p>上图中戴眼罩的鸟是插件<strong>mybitsx</strong>：这个插件可以快速定位到相应的sql语句和接口方法</p><h3 id="2-动态sql"><a href="#2-动态sql" class="headerlink" title="2.动态sql"></a>2.动态sql</h3><p>随着用户的输入或外部条件的变化而变化的SOL语句。</p><blockquote><p><if>:用于判断条件是否成立。使用test属性进行条件判断，如果条件为true，则拼接SQL。</p><p><where>:where 元素只会在子元素有内容的情况下才插入where子句。而且会自动去除子句的开头的AND 或OR。</p></blockquote><p>EmpMapper.xml文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">&quot;com.example.demo.mapper.EmpMapper&quot;</span>&gt;</span><br><span class="line">    &lt;!--如果是select语句，需要使用resultType设置返回值类型，其值为接口方法返回值的全类名。--&gt;</span><br><span class="line">&lt;!--    &lt;select id=<span class="string">&quot;insertList&quot;</span> resultType=<span class="string">&quot;com.example.demo.pojo.Emp&quot;</span>&gt;--&gt;</span><br><span class="line">&lt;!--        select * from student where name like <span class="title function_">concat</span><span class="params">(<span class="string">&#x27;%&#x27;</span>,#&#123;name&#125;,<span class="string">&#x27;%&#x27;</span>)</span> <span class="type">and</span> <span class="variable">sex</span> <span class="operator">=</span> #&#123;sex&#125;--&gt;</span><br><span class="line">&lt;!--    &lt;/select&gt;--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=<span class="string">&quot;insertList&quot;</span> resultType=<span class="string">&quot;com.example.demo.pojo.Emp&quot;</span>&gt;</span><br><span class="line">        select *</span><br><span class="line">        from student</span><br><span class="line">        &lt;where&gt;</span><br><span class="line">            &lt;<span class="keyword">if</span> test=<span class="string">&quot;name != null&quot;</span>&gt;</span><br><span class="line">                name like <span class="title function_">concat</span><span class="params">(<span class="string">&#x27;%&#x27;</span>,#&#123;name&#125;,<span class="string">&#x27;%&#x27;</span>)</span></span><br><span class="line">            &lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">if</span> test=<span class="string">&quot;sex != null&quot;</span>&gt;</span><br><span class="line">                <span class="type">and</span> <span class="variable">sex</span> <span class="operator">=</span> #&#123;sex&#125;</span><br><span class="line">            &lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">        &lt;/where&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><p>测试文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span> <span class="comment">//springboot整合单元测试的注解</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DemoApplicationTests</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//List&lt;Emp&gt; emps = empMapper.insertList(&quot;张&quot;,&quot;女&quot;);</span></span><br><span class="line">        List&lt;Emp&gt; emps = empMapper.insertList(<span class="string">&quot;于&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">        System.out.println(emps);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><table><thead><tr><th>foreach</th><th>批量处理</th></tr></thead><tbody><tr><td>collection</td><td>遍历的集合</td></tr><tr><td>item</td><td>遍历出来的元素</td></tr><tr><td>separator</td><td>分隔符</td></tr><tr><td>open</td><td>遍历开始前拼接的sql片段</td></tr><tr><td>close</td><td>遍历结束后拼接的sql片段</td></tr></tbody></table></blockquote><p>EmpMapper接口文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//批量删除，xml文件中未编写相应信息时，deleteById方法会标红，此时直接按住alt键，两次回车，就能直接在xml文件中生成相应信息。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteById</span><span class="params">(List&lt;Integer&gt; ids)</span>;</span><br></pre></td></tr></table></figure><p>xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByIds&quot;</span>&gt;</span></span><br><span class="line">        delete from student where stu_id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">item</span>=<span class="string">&quot;id&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">open</span>=<span class="string">&quot;(&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//empMapper.delete(2012020050);</span></span><br><span class="line">        List&lt;Integer&gt; ids = Arrays.asList(<span class="number">2012020012</span>,<span class="number">2012020013</span>,<span class="number">2012020016</span>);</span><br><span class="line">        empMapper.deleteByIds(ids);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><sql>定义可重用的SQL片段</p><p><include>通过属性refid指定包含的sql片段</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;select id=&quot;insertList&quot; resultType=&quot;com.example.demo.pojo.Emp&quot;&gt;</span></span><br><span class="line"><span class="comment">        select *</span></span><br><span class="line"><span class="comment">        from student</span></span><br><span class="line"><span class="comment">        &lt;where&gt;</span></span><br><span class="line"><span class="comment">            &lt;if test=&quot;name != null&quot;&gt;</span></span><br><span class="line"><span class="comment">                name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)</span></span><br><span class="line"><span class="comment">            &lt;/if&gt;</span></span><br><span class="line"><span class="comment">            &lt;if test=&quot;sex != null&quot;&gt;</span></span><br><span class="line"><span class="comment">                and sex = #&#123;sex&#125;</span></span><br><span class="line"><span class="comment">            &lt;/if&gt;</span></span><br><span class="line"><span class="comment">        &lt;/where&gt;</span></span><br><span class="line"><span class="comment">    &lt;/select&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;commonselect&quot;</span>&gt;</span></span><br><span class="line">        select * from student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;insertList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.demo.pojo.Emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;commonselect&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;name != null&quot;</span>&gt;</span></span><br><span class="line">                name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex != null&quot;</span>&gt;</span></span><br><span class="line">                and sex = #&#123;sex&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学籍管理系统前端</title>
      <link href="/2025/04/26/%E5%AD%A6%E7%B1%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%89%8D%E7%AB%AF/"/>
      <url>/2025/04/26/%E5%AD%A6%E7%B1%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%89%8D%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="1-使用框架和界面概览"><a href="#1-使用框架和界面概览" class="headerlink" title="1.使用框架和界面概览"></a>1.使用框架和界面概览</h1><p>vue3+vant组件实现web移动端开发</p><h1 id="2-项目创建和目录"><a href="#2-项目创建和目录" class="headerlink" title="2.项目创建和目录"></a>2.项目创建和目录</h1><p>项目创建：（命令行）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create 项目名称</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202505141442223.png" alt="image-20250514144203591"></p><p>然后等待创建即可。</p><blockquote><p>初始项目中src&#x2F;App.vue中多余代码都可以删，留个框架即可。</p><p>components&#x2F;HelloWorld.vue也删，没用</p></blockquote><p>项目启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd 项目所在目录</span><br><span class="line">npm init //如果是移植别的项目，先init下载需要的依赖</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><p>本项目目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">pages</span><br><span class="line">├─ .browserslistrc</span><br><span class="line">├─ .eslintrc.js</span><br><span class="line">├─ babel.config.js</span><br><span class="line">├─ demo.vue</span><br><span class="line">├─ jsconfig.json</span><br><span class="line">├─ package-lock.json</span><br><span class="line">├─ package.json</span><br><span class="line">├─ public</span><br><span class="line">│  ├─ favicon.ico</span><br><span class="line">│  └─ index.html</span><br><span class="line">├─ README.md</span><br><span class="line">├─ src</span><br><span class="line">│  ├─ api</span><br><span class="line">│  │  └─ user.js //接口文件</span><br><span class="line">│  ├─ App.vue //根组件</span><br><span class="line">│  ├─ assets //存静态资源</span><br><span class="line">│  │  ├─ background.jpg</span><br><span class="line">│  │  └─ logo.png</span><br><span class="line">│  ├─ components //放vue小组件，但是本项目没用</span><br><span class="line">│  │  └─ HelloWorld.vue</span><br><span class="line">│  ├─ main.js //入口文件，用于创建Vue实例并挂载到DOM上，配置路由和状态管理。</span><br><span class="line">│  ├─ router</span><br><span class="line">│  │  └─ index.js //路由文件</span><br><span class="line">│  ├─ store</span><br><span class="line">│  ├─ styles //界面相关的css，需要在main.js中统一引入</span><br><span class="line">│  │  ├─ index.css</span><br><span class="line">│  │  ├─ search.css</span><br><span class="line">│  │  └─ stucard.css</span><br><span class="line">│  ├─ utils</span><br><span class="line">│  │  └─ request.js</span><br><span class="line">│  └─ views //页面组件</span><br><span class="line">│     ├─ edit //修改页面</span><br><span class="line">│     │  ├─ EditButton.vue //修改新增等按钮组</span><br><span class="line">│     │  ├─ EditView.vue //修改页面，设置插槽，插入EditButton，StuCard</span><br><span class="line">│     │  └─ StuCard.vue //学生信息卡组件</span><br><span class="line">│     ├─ home //主页</span><br><span class="line">│     │  ├─ ChartForm.vue //表格和图标组件</span><br><span class="line">│     │  ├─ HomeView.vue</span><br><span class="line">│     │  └─ SearchPart.vue //检索组件</span><br><span class="line">│     ├─ layout</span><br><span class="line">│     │  └─ FooterView.vue //底部导航栏</span><br><span class="line">│     ├─ login</span><br><span class="line">│     │  └─ LoginView.vue //登录界面</span><br><span class="line">│     └─ user</span><br><span class="line">│        └─ PersonalView.vue //用户个人信息界面</span><br><span class="line">└─ vue.config.js</span><br></pre></td></tr></table></figure><h1 id="3-注册引入框架、自定义的css"><a href="#3-注册引入框架、自定义的css" class="headerlink" title="3.注册引入框架、自定义的css"></a>3.注册引入框架、自定义的css</h1><p>src&#x2F;main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;vant/lib/index.css&#x27;</span>;</span><br><span class="line"><span class="comment">//import &#123; Form, Field, CellGroup &#125; from &#x27;vant&#x27;;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vant</span> <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>; <span class="comment">//整体引入</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/search.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/stucard.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(router).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.use(Form);</span></span><br><span class="line"><span class="comment">// app.use(Field);</span></span><br><span class="line"><span class="comment">// app.use(CellGroup);</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">Vant</span>); <span class="comment">//全部注册</span></span><br></pre></td></tr></table></figure><h1 id="4-路由设置"><a href="#4-路由设置" class="headerlink" title="4.路由设置"></a>4.路由设置</h1><p>src&#x2F;router&#x2F;index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LoginView</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/login/LoginView.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HomeView</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/home/HomeView.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">LoginView</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;layout&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span> (<span class="string">&quot;../views/layout/FooterView.vue&quot;</span>),</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;<span class="comment">//默认子路由</span></span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;&quot;</span>, </span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">HomeView</span></span><br><span class="line">        <span class="comment">//component: () =&gt; import (&quot;../views/home/HomeView.vue&quot;), //懒加载</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/add&quot;</span>, </span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;add&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span> (<span class="string">&quot;../views/edit/EditView.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/userInfo&quot;</span>, </span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;userInfo&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span> (<span class="string">&quot;../views/user/PersonalView.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(),</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h1 id="5-登录"><a href="#5-登录" class="headerlink" title="5.登录"></a>5.登录</h1><h2 id="逻辑说明"><a href="#逻辑说明" class="headerlink" title="逻辑说明"></a>逻辑说明</h2><blockquote><p>用户输入 → 响应式绑定 → 表单校验 → API 请求 → 反馈结果</p></blockquote><p>在van-field中：1.<code>v-model</code>双向绑定用户输入的数据（学工号和密码）2.<code>:rules</code>绑定对用户输入数据的校验规则userFormRules，这样用户一输入信息就进行校验</p><p>在van-button上绑定点击事件onSubmit，点击将用户输入信息传给后端，再根据后端返回结果进行操作。</p><p>在js中：</p><ol><li>使用<code>reactive</code>：创建响应式对象 <code>user</code>，存储用户输入的用户名和密码。</li><li>在return中使用<code>toRefs</code>,解构 <code>user</code> 并保持响应性,这样模板中能直接使用 <code>username</code>和<code>password</code> （也就是van-field中可以直接写v-model&#x3D;”userID”，不用写成v-model&#x3D;”user.userID”）</li><li>userFormRules：对获取的用户填写的数据进行校验。<code>required</code>：非空校验。<code>pattern</code>：正则校验。</li><li>onSubmit：调用后台接口，完成登录。将调用接口方法封装到api&#x2F;user.js文件的login方法。这里就可以直接使用await login(user)调用接口方法了。根据后端传回来的状态码决定是否登录跳转。如果登录成功就跳转到首页：router.push(‘&#x2F;home’);</li></ol><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><p>src&#x2F;login&#x2F;LoginView.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dad&quot;&gt;</span><br><span class="line">    &lt;van-image</span><br><span class="line">        width=&quot;60%&quot;</span><br><span class="line">        :src=&quot;require(&#x27;../../assets/logo.png&#x27;)&quot; &gt;</span><br><span class="line">    &lt;/van-image&gt;</span><br><span class="line">    &lt;div class=&quot;login-title&quot;&gt;</span><br><span class="line">        学籍管理系统</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;van-form &gt;</span><br><span class="line">        &lt;van-cell-group inset&gt;</span><br><span class="line">            &lt;van-field</span><br><span class="line">                v-model=&quot;userID&quot;</span><br><span class="line">                name=&quot;userID&quot;</span><br><span class="line">                placeholder=&quot;请填写学工号&quot;</span><br><span class="line">                left-icon = &quot;manager&quot;</span><br><span class="line">                :rules = &quot;userFormRules.userID&quot;</span><br><span class="line">            &gt;&lt;/van-field&gt;</span><br><span class="line">            &lt;van-field</span><br><span class="line">                v-model=&quot;password&quot;</span><br><span class="line">                type=&quot;password&quot;</span><br><span class="line">                name=&quot;password&quot;</span><br><span class="line">                placeholder=&quot;请输入密码&quot;</span><br><span class="line">                left-icon = &quot;lock&quot;</span><br><span class="line">                :rules = &quot;userFormRules.password&quot;</span><br><span class="line">            &gt;&lt;/van-field&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- “记住我” 单选框和 “忘记密码” 链接 --&gt;</span><br><span class="line">            &lt;div class=&quot;remember-forget&quot;&gt;</span><br><span class="line">                &lt;van-checkbox icon-size=&quot;1.1rem&quot; v-model=&quot;rememberMe&quot;&gt;记住我&lt;/van-checkbox&gt;</span><br><span class="line">                &lt;a href=&quot;#&quot; @click.prevent=&quot;onForgetPassword&quot;&gt;忘记密码&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/van-cell-group&gt;</span><br><span class="line">        &lt;div style=&quot;margin: 16px;&quot;&gt;</span><br><span class="line">            &lt;van-button block type=&quot;primary&quot; native-type=&quot;submit&quot; @click=&quot;onSubmit&quot;&gt;</span><br><span class="line">                登录</span><br><span class="line">            &lt;/van-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/van-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; reactive , toRefs ,ref&#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; login &#125; from &quot;../../api/user.js&quot;;</span><br><span class="line">import &#123; Toast &#125; from &quot;vant&quot;;</span><br><span class="line">import router from &#x27;@/router/index.js&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    setup() &#123;</span><br><span class="line">        //构建响应式对象，绑定用户输入信息</span><br><span class="line">        const user=reactive(&#123;</span><br><span class="line">            userID: &quot;&quot;,</span><br><span class="line">            password: &quot;&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        //定义表单校验规则,在组件中添加:rules=&quot;&quot;</span><br><span class="line">        const userFormRules = &#123;</span><br><span class="line">            userID: [&#123; required: true, message: &#x27;学工号不能为空&#x27; &#125;],</span><br><span class="line">            password: [</span><br><span class="line">                &#123; required: true, message: &#x27;密码不能为空&#x27; &#125;,</span><br><span class="line">                //&#123; pattern: /^[a-zA-Z]\w&#123;5,17&#125;$/, message: &#x27;密码格式错误&#x27; &#125;</span><br><span class="line">            ],</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        //调用后台接口，完成登录</span><br><span class="line">        const onSubmit = async () =&gt; &#123;</span><br><span class="line">            Toast.loading(&#123;</span><br><span class="line">                message: &quot;登陆中...&quot;,</span><br><span class="line">                forbidClick: true,</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">            const res = await login(user);</span><br><span class="line">            if(res.data.code === 0)&#123;</span><br><span class="line">                Toast.success(&#x27;登陆成功&#x27;);</span><br><span class="line">                router.push(&#x27;/home&#x27;);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                Toast.fail(&#x27;学工号或密码错误&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        // 记住我状态</span><br><span class="line">        const rememberMe = ref(false);</span><br><span class="line"></span><br><span class="line">        const onForgetPassword = () =&gt; &#123;</span><br><span class="line">            // 忘记密码的逻辑</span><br><span class="line">            Toast.info(&#x27;忘记密码功能待实现&#x27;);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        return &#123;//...将数组、对象解包成单独元素，此时不再是响应式，使用toRefs使其变为响应式</span><br><span class="line">        ...toRefs(user),</span><br><span class="line">        userFormRules,</span><br><span class="line">        onSubmit,</span><br><span class="line">        rememberMe,</span><br><span class="line">        onForgetPassword</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.login-title&#123;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">    margin-top: 30%;</span><br><span class="line">    margin-bottom: 5px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    font-family: &#x27;STKaiti&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">.dad&#123;</span><br><span class="line">    background-image: url(../../assets/background.jpg);</span><br><span class="line">    height: 100vh;</span><br><span class="line">    background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line">.dad .van-image&#123;</span><br><span class="line">    padding-top: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.van-form&#123;</span><br><span class="line">    background-color: rgb(255, 252, 252);</span><br><span class="line">    align-items: center; </span><br><span class="line">    margin: 2px 20px auto 20px;   </span><br><span class="line">    padding: 15px 0 3px 0;</span><br><span class="line">    box-shadow: 0 0 5px 0 rgb(206, 203, 203);</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.van-form .van-field&#123;</span><br><span class="line">    background-color: rgb(255, 252, 252);</span><br><span class="line">    padding: 0px;</span><br><span class="line">    margin: 10px 2px 10px 2px;</span><br><span class="line">    font-size: 15px;</span><br><span class="line">    line-height: 35px;</span><br><span class="line">&#125;</span><br><span class="line">.van-form .van-button&#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.remember-forget &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  align-items: center;</span><br><span class="line">  padding: 0 .3rem;</span><br><span class="line">  margin-top: .4rem;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="封装接口方法"><a href="#封装接口方法" class="headerlink" title="封装接口方法"></a>封装接口方法</h3><blockquote><table><thead><tr><th align="left">情况</th><th align="left">后端是否需配置 <code>baseURL</code>？</th><th align="left">前端 <code>baseURL</code> 示例</th></tr></thead><tbody><tr><td align="left">后端接口直接挂在根路径（如 <code>/users</code>）</td><td align="left">❌ 不需要</td><td align="left">直接设 <code>baseURL</code> 为 <code>http://localhost:8080</code></td></tr><tr><td align="left">后端接口有统一前缀（如 <code>/api/users</code>）</td><td align="left">✅ 需要</td><td align="left"><code>http://localhost:8080/api</code></td></tr><tr><td align="left">生产环境（如 <code>https://api.example.com</code>）</td><td align="left">✅ 需要（通过 Nginx&#x2F;网关）</td><td align="left"><code>https://api.example.com</code></td></tr></tbody></table><p>后端默认监听 <code>localhost:8080</code></p></blockquote><p>src&#x2F;utils&#x2F;request.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定制请求的实例</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> requst = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="comment">//API请求的默认前缀，告诉 HTTP 客户端（如 Axios、Fetch）：把所有 API 请求发送到baseURL/...</span></span><br><span class="line">    <span class="attr">baseURL</span>: <span class="string">&quot;http://localhost:8080/&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> requst;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>src&#x2F;api&#x2F;user.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入request.js请求工具</span></span><br><span class="line"><span class="keyword">import</span> requst <span class="keyword">from</span> <span class="string">&quot;@/utils/request&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//提供调用登录接口的函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">login</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//后端以x-www-form-urlencoded格式接收数据，所以这里需要借助URLSearchParams完成传递</span></span><br><span class="line">    <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>()</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> data) &#123;</span><br><span class="line">        params.<span class="title function_">append</span>(key, data[key])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">requst</span>(&#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/user/login&quot;</span>, <span class="comment">//服务端接口地址</span></span><br><span class="line">        <span class="attr">data</span>: params, <span class="comment">//用户输入信息</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="跨域解决"><a href="#跨域解决" class="headerlink" title="跨域解决"></a>跨域解决</h3><blockquote><p>后端加@CrossOrigin，但是用get请求的时候还是会存在跨域问题。这里前端配置一下</p></blockquote><p>在vue.config.js中配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@vue/cli-service&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">devServer</span>: &#123; <span class="comment">//跨域相关</span></span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080/&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span> </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在sec&#x2F;utils&#x2F;request.js中修改baseURL</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="comment">// API 请求的默认前缀</span></span><br><span class="line">    <span class="comment">//baseURL: &quot;http://localhost:8080/&quot;,</span></span><br><span class="line">    <span class="attr">baseURL</span>: <span class="string">&quot;/api&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="登陆优化-处理用户token"><a href="#登陆优化-处理用户token" class="headerlink" title="登陆优化-处理用户token"></a><del>登陆优化-处理用户token</del></h2><p>将用户token数据存储到vuex和本地中。只存到vuex的话，浏览器一刷新数据就会丢失。处理后，在其他界面需要使用用户信息、权限的时候就可以直接从vuex中获取（其中数据默认都是响应式）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex@next --save</span><br></pre></td></tr></table></figure><blockquote><p>src&#x2F;store&#x2F;index.js设置容器存储和更新用户token</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">TOKEN_KEY</span> = <span class="string">&quot;USERMSG&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">    <span class="comment">//用户信息放在state中的user参数中,并且从localStorage中取出用户数据后将数据改成对象格式</span></span><br><span class="line">    <span class="attr">state</span>:&#123;</span><br><span class="line">        <span class="attr">user</span>: <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">getItem</span>(<span class="variable constant_">TOKEN_KEY</span>)),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>:&#123;</span><br><span class="line">        <span class="comment">//用户数据更新</span></span><br><span class="line">        <span class="title function_">setUser</span>(<span class="params">state, date</span>)&#123;</span><br><span class="line">            state.<span class="property">user</span> = date;</span><br><span class="line">            <span class="comment">//将数据存入本地，避免浏览器一刷新就丢失数据。同时将数据转为string</span></span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">setItem</span>(<span class="variable constant_">TOKEN_KEY</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(state.<span class="property">user</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure></blockquote><p>上面这种写法每次在存储或从本地拿token会很麻烦，所以先将这几种从本地存、拿数据的方法方法进行封装。</p><p>新建src&#x2F;utils&#x2F;storage.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从localstorage中获取|存储|删除数据</span></span><br><span class="line"><span class="comment">//存储</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">setItem</span> = (<span class="params">key , value</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> value === <span class="string">&#x27;object&#x27;</span>)&#123;</span><br><span class="line">        value = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">setItem</span>(key,value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getItem</span> = (<span class="params">key</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">getItem</span>(key);</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">removeItem</span> = (<span class="params">key</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">removeItem</span>(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在src&#x2F;store&#x2F;index.js设置容器存储和更新用户token，向本地数据操作的时候直接调用utils&#x2F;storage.js中封装的方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getItem, setItem &#125; <span class="keyword">from</span> <span class="string">&quot;@/utils/storage&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">TOKEN_KEY</span> = <span class="string">&quot;USERMSG&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">    <span class="comment">//将用户信息存入state中的user参数中,并且从localStorage中取出用户数据后将数据改成对象格式</span></span><br><span class="line">    <span class="attr">state</span>:&#123;</span><br><span class="line">        <span class="attr">user</span>: <span class="title function_">getItem</span>(<span class="variable constant_">TOKEN_KEY</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>:&#123;</span><br><span class="line">        <span class="comment">//用户数据更新</span></span><br><span class="line">        <span class="title function_">setUser</span>(<span class="params">state, date</span>)&#123;</span><br><span class="line">            state.<span class="property">user</span> = date;</span><br><span class="line">            <span class="comment">//将数据存入本地，避免浏览器一刷新就丢失数据。同时将数据转为string</span></span><br><span class="line">            <span class="title function_">setItem</span>(<span class="variable constant_">TOKEN_KEY</span>,state.<span class="property">user</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将store在main.js中注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span>;</span><br><span class="line">...</span><br><span class="line">app.<span class="title function_">use</span>(store);</span><br></pre></td></tr></table></figure><p>修改LoginView中的js部分代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">useStore</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span>(res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//调用useStore的commit将登陆成功的用户token存入vuex和本地</span></span><br><span class="line">                store.<span class="title function_">commit</span>(<span class="string">&#x27;setUser&#x27;</span>,user);</span><br><span class="line">                <span class="title class_">Toast</span>.<span class="title function_">success</span>(<span class="string">&#x27;登陆成功&#x27;</span>);</span><br><span class="line">                router.<span class="title function_">push</span>(<span class="string">&#x27;/home&#x27;</span>);</span><br><span class="line">             ...</span><br></pre></td></tr></table></figure><p>打开控制台，点“应用程序”–“本地存储”,可以看到token内容</p><h1 id="6-底部导航栏"><a href="#6-底部导航栏" class="headerlink" title="6.底部导航栏"></a>6.底部导航栏</h1><blockquote><p>配合路由设置，通过底部导航栏找到用户信息，主页，修改这三个主界面</p></blockquote><h2 id="逻辑说明-1"><a href="#逻辑说明-1" class="headerlink" title="逻辑说明"></a>逻辑说明</h2><ol><li>能用到导航栏时肯定已经登录了，路由已经跳到了&#x2F;home，用<code>&lt;router-view&gt;</code> 渲染对应的页面组件。</li><li>在van-tabbar中用v-model双向绑定active，也就是当前选中标签的索引值，然后导航栏对应项高亮。默认初始是主页，所以js中active &#x3D; ref(0)。</li><li>用户点击导航栏，通过 <code>to=&quot;/path&quot;</code> 跳转到对应路由，同时路由变化触发 <code>watch</code>，再次调用 <code>updateActiveTab()</code> 更新 <code>active</code>，改变导航栏高亮项。</li><li>用户直接通过浏览器地址栏修改 URL 时，route.path改变，也会触发 <code>watch</code>，调用updateActiveTab方法，实现页面切换同步。</li><li>updateActiveTab方法中通过判断path.startsWith(‘’)内容设置active值。</li></ol><h2 id="代码部分-1"><a href="#代码部分-1" class="headerlink" title="代码部分"></a>代码部分</h2><p>src&#x2F;views&#x2F;layout&#x2F;FooterView.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;van-tabbar v-model=&quot;active&quot;&gt;</span><br><span class="line">        &lt;van-tabbar-item icon=&quot;search&quot; to=&quot;/home&quot;&gt;检索&lt;/van-tabbar-item&gt;</span><br><span class="line">        &lt;van-tabbar-item icon=&quot;edit&quot; to=&quot;/edit&quot;&gt;信息修改&lt;/van-tabbar-item&gt;</span><br><span class="line">        &lt;van-tabbar-item icon=&quot;chart-trending-o&quot; to=&quot;/chart&quot;&gt;数据图表&lt;/van-tabbar-item&gt;</span><br><span class="line">        &lt;van-tabbar-item icon=&quot;user-o&quot; to=&quot;/userInfo&quot;&gt;我的&lt;/van-tabbar-item&gt;</span><br><span class="line">    &lt;/van-tabbar&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">// export default &#123;</span><br><span class="line">//     setup() &#123;</span><br><span class="line">//         const active = ref(0);</span><br><span class="line">//         return &#123; active &#125;;</span><br><span class="line">//     &#125;,</span><br><span class="line">// &#125;</span><br><span class="line">import &#123; ref, watch &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; useRoute &#125; from &#x27;vue-router&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    const route = useRoute()</span><br><span class="line">    const active = ref(0)</span><br><span class="line">    // 根据当前路由自动设置 active 索引</span><br><span class="line">    const updateActiveTab = () =&gt; &#123;</span><br><span class="line">      const path = route.path</span><br><span class="line">      if (path.startsWith(&#x27;/home&#x27;)) &#123;</span><br><span class="line">        active.value = 0</span><br><span class="line">      &#125; else if (path.startsWith(&#x27;/edit&#x27;)) &#123;</span><br><span class="line">        active.value = 1</span><br><span class="line">      &#125; else if (path.startsWith(&#x27;/chart&#x27;)) &#123;</span><br><span class="line">        active.value = 2</span><br><span class="line">      &#125;else if (path.startsWith(&#x27;/personal&#x27;)) &#123;</span><br><span class="line">        active.value = 3</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    // 初始化时设置一次</span><br><span class="line">    updateActiveTab()</span><br><span class="line">    // 监听路由变化</span><br><span class="line">    watch(() =&gt; route.path, updateActiveTab)</span><br><span class="line"></span><br><span class="line">    return &#123; active &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="路由设置"><a href="#路由设置" class="headerlink" title="路由设置"></a>路由设置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">HomeView</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/home/HomeView.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在routes中添加</span></span><br><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;layout&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span> (<span class="string">&quot;../views/layout/FooterView.vue&quot;</span>),</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;<span class="comment">//默认子路由，也就是在导航栏输入.../home默认是打开HomeView这个文件</span></span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;&quot;</span>, </span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">HomeView</span></span><br><span class="line">        <span class="comment">//component: () =&gt; import (&quot;../views/home/HomeView.vue&quot;),//懒加载</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/add&quot;</span>, </span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;add&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span> (<span class="string">&quot;../views/edit/EditView.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/userInfo&quot;</span>, </span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;userInfo&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span> (<span class="string">&quot;../views/user/PersonalView.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h1 id="7-用户信息-显示、退出登录"><a href="#7-用户信息-显示、退出登录" class="headerlink" title="7.用户信息-显示、退出登录"></a>7.用户信息-显示、退出登录</h1><h2 id="逻辑说明-2"><a href="#逻辑说明-2" class="headerlink" title="逻辑说明"></a>逻辑说明</h2><h2 id="界面代码（未实现对接）"><a href="#界面代码（未实现对接）" class="headerlink" title="界面代码（未实现对接）"></a>界面代码（未实现对接）</h2><p>src&#x2F;views&#x2F;user&#x2F;PersonalView.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;myparent&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;myheader&quot;&gt;</span><br><span class="line">      &lt;van-image</span><br><span class="line">        round</span><br><span class="line">        fit=&quot;cover&quot;</span><br><span class="line">        width=&quot;10rem&quot;</span><br><span class="line">        height=&quot;10rem&quot;</span><br><span class="line">        src=&quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;mylower&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;editmy&quot;&gt;</span><br><span class="line">        &lt;van-cell title=&quot;姓名&quot; value=&quot;名字&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;学工号&quot; value=&quot;201202&quot; center/&gt;</span><br><span class="line">        </span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;thehelp&quot;&gt;</span><br><span class="line">        &lt;van-cell title=&quot;密码&quot; is-link value=&quot;点击修改&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;权限&quot; is-link value=&quot;查看和申请&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;常见问题&quot; is-link value=&quot;联系我们&quot; center/&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;outlogin&quot;&gt;</span><br><span class="line">        &lt;van-cell  title=&quot;切换账号&quot; @click=&quot;changeUser&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;退出&quot; @click=&quot;show = true&quot; center/&gt;</span><br><span class="line">        &lt;van-action-sheet</span><br><span class="line">          v-model:show=&quot;show&quot;</span><br><span class="line">          :actions=&quot;actions&quot;</span><br><span class="line">          cancel-text=&quot;取消&quot;</span><br><span class="line">          close-on-click-action</span><br><span class="line">          @cancel=&quot;onCancel&quot;</span><br><span class="line">          @select=&quot;onSelect&quot;</span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;     </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Dialog, Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;;</span><br><span class="line">import &#123; useStore &#125; from &#x27;vuex&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    const show = ref(false);</span><br><span class="line">    const actions = [</span><br><span class="line">      &#123; name: &#x27;退出登录&#x27; , action: &#x27;logout&#x27;&#125;,</span><br><span class="line">      &#123; name: &#x27;关闭软件&#x27; , action: &#x27;close&#x27;&#125;,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    const router = useRouter();</span><br><span class="line">    const store = useStore();</span><br><span class="line">    const onSelect = (item) =&gt; &#123;</span><br><span class="line">      if(item.action === &#x27;logout&#x27;)&#123;</span><br><span class="line">        //弹出确认框</span><br><span class="line">        Dialog.confirm(&#123;</span><br><span class="line">          title: &quot;确认退出登录么&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          //点击确认</span><br><span class="line">          router.push(&#x27;/&#x27;);</span><br><span class="line">          Toast(&#x27;已退出登录&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;</span><br><span class="line">          //取消退出登录</span><br><span class="line">          Toast(&#x27;取消&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;else if(item.action === &#x27;close&#x27;)&#123;</span><br><span class="line">        Toast(&#x27;关闭软件&#x27;);</span><br><span class="line">      &#125;      </span><br><span class="line">    &#125;;</span><br><span class="line">      </span><br><span class="line">      //点击“取消”按钮，底部弹出框关闭，show值为false</span><br><span class="line">    const onCancel = () =&gt; &#123;</span><br><span class="line">      show.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      show,</span><br><span class="line">      actions,</span><br><span class="line">      onSelect,</span><br><span class="line">      onCancel,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="css部分"><a href="#css部分" class="headerlink" title="css部分"></a>css部分</h3><blockquote><p>不要忘了在main.js中引入本文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/index.css&#x27;</span></span><br></pre></td></tr></table></figure></blockquote><p>styles&#x2F;index.css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*用户信息界面*/</span></span><br><span class="line"><span class="selector-class">.myparent</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">    <span class="attribute">align-items</span>: center; <span class="comment">/* 水平居中整个内容 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.myheader</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;../assets/background.jpg&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: contain;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: flex-end;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">8%</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.myparent</span> <span class="selector-class">.myheader</span> <span class="selector-class">.van-image</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgb</span>(<span class="number">126</span>, <span class="number">123</span>, <span class="number">123</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mylower</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">228</span>, <span class="number">226</span>, <span class="number">226</span>);</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">0.6rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mylower</span> <span class="selector-class">.van-cell</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">3rem</span>; </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.2rem</span> <span class="number">0.5rem</span> <span class="number">0.3rem</span> <span class="number">0.5rem</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mylower</span> <span class="selector-class">.thehelp</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">0.6rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mylower</span> <span class="selector-class">.outlogin</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">0.6rem</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="前后端对接"><a href="#前后端对接" class="headerlink" title="前后端对接"></a>前后端对接</h2><h3 id="pinia保存用户token（修改登录"><a href="#pinia保存用户token（修改登录" class="headerlink" title="pinia保存用户token（修改登录"></a>pinia保存用户token（修改登录</h3><blockquote><p>使用Pinia状态管理库存储token，否则会出现401无权限报错</p></blockquote><p>1.安装Pinia：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><p>2.在main.js中注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line">app.<span class="title function_">use</span>(pinia)</span><br></pre></td></tr></table></figure><p>3.在src&#x2F;stores目录下定义token.js，实现Store的定义</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    defineStore参数描述：</span></span><br><span class="line"><span class="comment">        第一个参数：给状态起名，具有唯一性</span></span><br><span class="line"><span class="comment">        第二个参数：函数，可以把定义该状态中拥有的内容</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    defineStore返回值描述：</span></span><br><span class="line"><span class="comment">        返回的是一个函数，将来可以调用该函数，得到第二个参数中返回的内容</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTokenStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;token&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//1.定义描述token</span></span><br><span class="line">    <span class="keyword">const</span> token = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.定义修改token的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setToken</span> = (<span class="params">newToken</span>)=&gt;&#123;</span><br><span class="line">        token.<span class="property">value</span> = newToken</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.定义移除token的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">removeToken</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">        token.<span class="property">value</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        token,setToken,removeToken</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>4.使用store</p><p>在登录LoginView.vue中导入@&#x2F;stores&#x2F;token.js, 并且当用户登录成功后，将token保存pinia中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123;useTokenStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/token&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">       ...</span><br><span class="line">        <span class="comment">//调用后台接口，完成登录</span></span><br><span class="line">        <span class="keyword">const</span> tokenStore = <span class="title function_">useTokenStore</span>();</span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span>(res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//把得到的token存储到pinia中</span></span><br><span class="line">                tokenStore.<span class="title function_">setToken</span>(res.<span class="property">data</span>.<span class="property">data</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//console.log(&quot;存储的token值&quot;+tokenStore.token);</span></span><br><span class="line">                <span class="title class_">Toast</span>.<span class="title function_">success</span>(<span class="string">&#x27;登陆成功&#x27;</span>);</span><br><span class="line">                router.<span class="title function_">push</span>(<span class="string">&#x27;/home&#x27;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="title class_">Toast</span>.<span class="title function_">fail</span>(<span class="string">&#x27;学工号或密码错误&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><h3 id="展示用户信息并存入pinia"><a href="#展示用户信息并存入pinia" class="headerlink" title="展示用户信息并存入pinia"></a>展示用户信息并存入pinia</h3><p>设置src&#x2F;store&#x2F;user.js，定义更新、清空用户数据方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span> <span class="comment">//导入pinia</span></span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserInfoStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;userInfo&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//1.定义用户信息</span></span><br><span class="line">    <span class="keyword">const</span> info = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line">    <span class="comment">//2.修改用户信息的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setInfo</span> = (<span class="params">newInfo</span>)=&gt;&#123;</span><br><span class="line">        info.<span class="property">value</span> = newInfo</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.清空用户信息的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">removeInfo</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">        info.<span class="property">value</span>=&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;info,setInfo,removeInfo&#125;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">persist</span>:<span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>获取用户信息接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getUserInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//获取token状态</span></span><br><span class="line">    <span class="keyword">const</span> tokenStore = <span class="title function_">useTokenStore</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过请求头Authorization携带token</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">         <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">         <span class="attr">url</span>: <span class="string">&#x27;/user/userInfo&#x27;</span>,</span><br><span class="line">         <span class="comment">//在pinia中定义的响应式数据，都不需要.value</span></span><br><span class="line">         <span class="attr">headers</span>: &#123; <span class="string">&#x27;Authorization&#x27;</span>: tokenStore.<span class="property">token</span> &#125;</span><br><span class="line">     &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>修改PersonalView.vue,获取用户信息，存入pinia</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;myparent&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;myheader&quot;&gt;</span><br><span class="line">      &lt;van-image</span><br><span class="line">        round</span><br><span class="line">        fit=&quot;cover&quot;</span><br><span class="line">        width=&quot;10rem&quot;</span><br><span class="line">        height=&quot;10rem&quot;</span><br><span class="line">        :src=&quot;userInfoStore.info.userPic? userInfoStore.info.userPic:</span><br><span class="line">         &#x27;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&#x27;&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;mylower&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;editmy&quot;&gt;</span><br><span class="line">        &lt;van-cell title=&quot;姓名&quot; :value=&quot;userInfoStore.info.userName&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;学工号&quot; :value=&quot;userInfoStore.info.userID&quot; center/&gt;</span><br><span class="line">        </span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;thehelp&quot;&gt;</span><br><span class="line">        &lt;van-cell title=&quot;密码&quot; is-link value=&quot;点击修改&quot; to=&quot;/PswEdit&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;学院&quot; is-link :value=&quot;userInfoStore.info.userDepartment&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;权限&quot; is-link :value=&quot;userAuth&quot; center/&gt;</span><br><span class="line">        ...</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">...</span><br><span class="line">import &#123; getUserInfo &#125; from &#x27;@/api/user&#x27;;</span><br><span class="line">import &#123;useUserInfoStore&#125; from &#x27;@/store/user&#x27;</span><br><span class="line">import &#123;useTokenStore&#125; from &#x27;@/store/token&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">      </span><br><span class="line">    const userAuth = ref(null);</span><br><span class="line">    //获取用户信息并存到pinia中</span><br><span class="line">    const userInfoStore = useUserInfoStore();</span><br><span class="line">    const fetchUserInfo = async () =&gt; &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        const res = await getUserInfo();</span><br><span class="line">        //console.log(JSON.stringify(res.data)+&quot;服务器返回数据&quot;)</span><br><span class="line">        if (res.data.code === 0) &#123;</span><br><span class="line">          userInfoStore.setInfo(res.data.data);</span><br><span class="line"></span><br><span class="line">          if(userInfoStore.info.userAuth === 1)&#123;</span><br><span class="line">            userAuth.value = &quot;可查看全校学生&quot;;</span><br><span class="line">          &#125;else&#123;</span><br><span class="line">            userAuth.value = &quot;可查看本院学生&quot;;</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          Toast.fail(&#x27;获取用户信息失败&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        Toast.fail(error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">      fetchUserInfo();</span><br><span class="line">    &#125;);</span><br><span class="line">...</span><br><span class="line">return &#123;</span><br><span class="line">      show,</span><br><span class="line">      actions,</span><br><span class="line">      onSelect,</span><br><span class="line">      onCancel,</span><br><span class="line">      userAuth,</span><br><span class="line">      userInfoStore</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="退出登录和切换账号"><a href="#退出登录和切换账号" class="headerlink" title="退出登录和切换账号"></a>退出登录和切换账号</h3><blockquote><p>切换账号和退出登录的逻辑差不多，都是路由跳转+删除pinia中的用户信息和token。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useTokenStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/token&#x27;</span></span><br><span class="line">...</span><br><span class="line">    <span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span><br><span class="line">    <span class="keyword">const</span> tokenStore = <span class="title function_">useTokenStore</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">changeUser</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="comment">//弹出确认框，切换账号</span></span><br><span class="line">        <span class="title class_">Dialog</span>.<span class="title function_">confirm</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;确认切换账户么&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">//点击确认</span></span><br><span class="line">          <span class="comment">//清除pinia中存储的token和个人信息</span></span><br><span class="line">          tokenStore.<span class="title function_">removeToken</span>();</span><br><span class="line">          userInfoStore.<span class="title function_">removeInfo</span>();</span><br><span class="line"></span><br><span class="line">          router.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">          <span class="title class_">Toast</span>(<span class="string">&#x27;已退出当前账号&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">//取消切换账号</span></span><br><span class="line">          <span class="title class_">Toast</span>(<span class="string">&#x27;取消&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">onSelect</span> = (<span class="params">item</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span>(item.<span class="property">action</span> === <span class="string">&#x27;logout&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//弹出确认框</span></span><br><span class="line">        <span class="title class_">Dialog</span>.<span class="title function_">confirm</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;确认退出登录么&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">//点击确认</span></span><br><span class="line">          <span class="comment">//清除pinia中存储的token和个人信息</span></span><br><span class="line">          tokenStore.<span class="title function_">removeToken</span>();</span><br><span class="line">          userInfoStore.<span class="title function_">removeInfo</span>();</span><br><span class="line"></span><br><span class="line">          router.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">          <span class="title class_">Toast</span>(<span class="string">&#x27;已退出登录&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">//取消退出登录</span></span><br><span class="line">          <span class="title class_">Toast</span>(<span class="string">&#x27;取消&#x27;</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(item.<span class="property">action</span> === <span class="string">&#x27;close&#x27;</span>)&#123;</span><br><span class="line">        <span class="title class_">Toast</span>(<span class="string">&#x27;关闭软件&#x27;</span>);</span><br><span class="line">      &#125;      </span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><h3 id="pinia持久化插件"><a href="#pinia持久化插件" class="headerlink" title="pinia持久化插件"></a>pinia持久化插件</h3><blockquote><p>由于pinia是内存存储，刷新页面的时候pinia中的数据会丢失，可以借助于persist插件解决这个问题，persist插件支持将pinia中的数据持久化到sessionStorage和localStorage中</p></blockquote><p>1.安装persist插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia-persistedstate-plugin</span><br></pre></td></tr></table></figure><p>2.pinia中使用persist插件。修改main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="comment">//导入持久化插件</span></span><br><span class="line"><span class="keyword">import</span> &#123;createPersistedState&#125; <span class="keyword">from</span><span class="string">&#x27;pinia-persistedstate-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line"><span class="keyword">const</span> persist = <span class="title function_">createPersistedState</span>()</span><br><span class="line"><span class="comment">//pinia使用持久化插件</span></span><br><span class="line">pinia.<span class="title function_">use</span>(persist)</span><br><span class="line"><span class="comment">//使用pinia</span></span><br><span class="line">app.<span class="title function_">use</span>(pinia)</span><br></pre></td></tr></table></figure><p>3.在src&#x2F;stores&#x2F;token.js中创建定义状态是配置持久化，添加persit参数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义store</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    defineStore参数描述：</span></span><br><span class="line"><span class="comment">        第一个参数：给状态起名，具有唯一性</span></span><br><span class="line"><span class="comment">        第二个参数：函数，可以把定义该状态中拥有的内容</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    defineStore返回值描述：</span></span><br><span class="line"><span class="comment">        返回的是一个函数，将来可以调用该函数，得到第二个参数中返回的内容</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTokenStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;token&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//1.定义描述token</span></span><br><span class="line">    <span class="keyword">const</span> token = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.定义修改token的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setToken</span> = (<span class="params">newToken</span>)=&gt;&#123;</span><br><span class="line">        token.<span class="property">value</span> = newToken</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.定义移除token的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">removeToken</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">        token.<span class="property">value</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        token,setToken,removeToken</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">persist</span>:<span class="literal">true</span> <span class="comment">//持久化存储</span></span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="请求拦截器设置"><a href="#请求拦截器设置" class="headerlink" title="请求拦截器设置"></a>请求拦截器设置</h3><blockquote><p>当进入主页后，将来要与后台交互，都需要携带token，如果每次请求都写这样的代码，将会比较繁琐，此时可以将携带token的代码通过请求拦截器统一处理</p></blockquote><p>src&#x2F;utils&#x2F;reques.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入token状态</span></span><br><span class="line"><span class="keyword">import</span> &#123; useTokenStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/token.js&#x27;</span>;</span><br><span class="line"><span class="comment">//添加请求拦截器</span></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function">(<span class="params">config</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//在发送请求之前做什么</span></span><br><span class="line">        <span class="keyword">let</span> tokenStore = <span class="title function_">useTokenStore</span>()</span><br><span class="line">        <span class="comment">//如果token中有值，在携带</span></span><br><span class="line">        <span class="keyword">if</span>(tokenStore.<span class="property">token</span>)&#123;</span><br><span class="line">            config.<span class="property">headers</span>.<span class="property">Authorization</span>=tokenStore.<span class="property">token</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//如果请求错误做什么</span></span><br><span class="line">        <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>配置拦截器后，接口文件中就不用单独设置Authorization了。修改&#x2F;api&#x2F;user.js。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getUserInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//获取token状态</span></span><br><span class="line">    <span class="comment">//const tokenStore = useTokenStore();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过请求头Authorization携带token</span></span><br><span class="line">    <span class="comment">// return request(&#123;</span></span><br><span class="line">    <span class="comment">//     method: &#x27;GET&#x27;,</span></span><br><span class="line">    <span class="comment">//     url: &#x27;/user/userInfo&#x27;,</span></span><br><span class="line">    <span class="comment">//     //在pinia中定义的响应式数据，都不需要.value</span></span><br><span class="line">    <span class="comment">//     headers: &#123; &#x27;Authorization&#x27;: tokenStore.token &#125;</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/user/userInfo&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="显示个人信息和退出登录完整代码"><a href="#显示个人信息和退出登录完整代码" class="headerlink" title="显示个人信息和退出登录完整代码"></a>显示个人信息和退出登录完整代码</h3><blockquote><p>涉及src&#x2F;user&#x2F;PersonalView.vue（界面）、src&#x2F;api&#x2F;user.js（接口）、src&#x2F;utils&#x2F;reques.js(拦截器)、src&#x2F;stores&#x2F;token.js（设置pinia持久化）。。。</p></blockquote><p>src&#x2F;user&#x2F;PersonalView.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;myparent&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;myheader&quot;&gt;</span><br><span class="line">      &lt;van-image</span><br><span class="line">        round</span><br><span class="line">        fit=&quot;cover&quot;</span><br><span class="line">        width=&quot;10rem&quot;</span><br><span class="line">        height=&quot;10rem&quot;</span><br><span class="line">        :src=&quot;userInfoStore.info.userPic? userInfoStore.info.userPic:</span><br><span class="line">         &#x27;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&#x27;&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;mylower&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;editmy&quot;&gt;</span><br><span class="line">        &lt;van-cell title=&quot;姓名&quot; :value=&quot;userInfoStore.info.userName&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;学工号&quot; :value=&quot;userInfoStore.info.userID&quot; center/&gt;</span><br><span class="line">        </span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;thehelp&quot;&gt;</span><br><span class="line">        &lt;van-cell title=&quot;密码&quot; is-link value=&quot;点击修改&quot; to=&quot;/PwdEdit&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;学院&quot; is-link :value=&quot;userInfoStore.info.userDepartment&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;权限&quot; is-link :value=&quot;userAuth&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;常见问题&quot; is-link value=&quot;联系我们&quot; center/&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;outlogin&quot;&gt;</span><br><span class="line">        &lt;van-cell  title=&quot;切换账号&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;退出&quot; @click=&quot;show = true&quot; center/&gt;</span><br><span class="line">        &lt;van-action-sheet</span><br><span class="line">          v-model:show=&quot;show&quot;</span><br><span class="line">          :actions=&quot;actions&quot;</span><br><span class="line">          cancel-text=&quot;取消&quot;</span><br><span class="line">          close-on-click-action</span><br><span class="line">          @cancel=&quot;onCancel&quot;</span><br><span class="line">          @select=&quot;onSelect&quot;</span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;     </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref ,onMounted&#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Dialog, Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;;</span><br><span class="line"></span><br><span class="line">import &#123; getUserInfo &#125; from &#x27;@/api/user&#x27;;</span><br><span class="line">import &#123;useUserInfoStore&#125; from &#x27;@/store/user&#x27;</span><br><span class="line">import &#123;useTokenStore&#125; from &#x27;@/store/token&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line"></span><br><span class="line">    //获取用户信息(未存到pinia)</span><br><span class="line">    // const userInfo = ref(&#123;&#125;);</span><br><span class="line">    // const fetchUserInfo = async () =&gt; &#123;</span><br><span class="line">    //   try &#123;</span><br><span class="line">    //     const res = await getUserInfo();</span><br><span class="line">    //     console.log(JSON.stringify(res.data)+&quot;服务器返回数据&quot;)</span><br><span class="line">    //     if (res.data.code === 0) &#123;</span><br><span class="line">    //       userInfo.value = res.data.data;</span><br><span class="line">    //       if(userInfo.value.userAuth === 1)&#123;</span><br><span class="line">    //         userInfo.value.userAuth = &quot;可查看全校学生&quot;</span><br><span class="line">    //       &#125;else&#123;</span><br><span class="line">    //         userInfo.value.userAuth = &quot;可查看本院学生&quot;</span><br><span class="line">    //       &#125;</span><br><span class="line">          </span><br><span class="line">    //     &#125; else &#123;</span><br><span class="line">    //       Toast.fail(&#x27;获取用户信息失败&#x27;);</span><br><span class="line">    //     &#125;</span><br><span class="line">    //   &#125; catch (error) &#123;</span><br><span class="line">    //     Toast.fail(error);</span><br><span class="line">    //   &#125;</span><br><span class="line">    // &#125;;</span><br><span class="line"></span><br><span class="line">    const userAuth = ref(null);</span><br><span class="line">    //获取用户信息并存到pinia中</span><br><span class="line">    const userInfoStore = useUserInfoStore();</span><br><span class="line">    const fetchUserInfo = async () =&gt; &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        const res = await getUserInfo();</span><br><span class="line">        //console.log(JSON.stringify(res.data)+&quot;服务器返回数据&quot;)</span><br><span class="line">        if (res.data.code === 0) &#123;</span><br><span class="line">          userInfoStore.setInfo(res.data.data);</span><br><span class="line"></span><br><span class="line">          if(userInfoStore.info.userAuth === 1)&#123;</span><br><span class="line">            userAuth.value = &quot;可查看全校学生&quot;;</span><br><span class="line">          &#125;else&#123;</span><br><span class="line">            userAuth.value = &quot;可查看本院学生&quot;;</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          Toast.fail(&#x27;获取用户信息失败&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        Toast.fail(error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">      fetchUserInfo();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    const show = ref(false);</span><br><span class="line">    const actions = [</span><br><span class="line">      &#123; name: &#x27;退出登录&#x27; , action: &#x27;logout&#x27;&#125;,</span><br><span class="line">      &#123; name: &#x27;关闭软件&#x27; , action: &#x27;close&#x27;&#125;,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    const router = useRouter();</span><br><span class="line">    const tokenStore = useTokenStore();</span><br><span class="line">    const onSelect = (item) =&gt; &#123;</span><br><span class="line">      if(item.action === &#x27;logout&#x27;)&#123;</span><br><span class="line">        //弹出确认框</span><br><span class="line">        Dialog.confirm(&#123;</span><br><span class="line">          title: &quot;确认退出登录么&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          //点击确认</span><br><span class="line">          //清除pinia中存储的token和个人信息</span><br><span class="line">          tokenStore.removeToken();</span><br><span class="line">          userInfoStore.removeInfo();</span><br><span class="line"></span><br><span class="line">          router.push(&#x27;/&#x27;);</span><br><span class="line">          Toast(&#x27;已退出登录&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;</span><br><span class="line">          //取消退出登录</span><br><span class="line">          Toast(&#x27;取消&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;else if(item.action === &#x27;close&#x27;)&#123;</span><br><span class="line">        Toast(&#x27;关闭软件&#x27;);</span><br><span class="line">      &#125;      </span><br><span class="line">    &#125;;</span><br><span class="line">      </span><br><span class="line">      //点击“取消”按钮，底部弹出框关闭，show值为false</span><br><span class="line">    const onCancel = () =&gt; &#123;</span><br><span class="line">      show.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      show,</span><br><span class="line">      actions,</span><br><span class="line">      onSelect,</span><br><span class="line">      onCancel,</span><br><span class="line">      userAuth,</span><br><span class="line">      userInfoStore</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>接口方法src&#x2F;api&#x2F;user.js：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getUserInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//获取token状态</span></span><br><span class="line">    <span class="comment">//const tokenStore = useTokenStore();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过请求头Authorization携带token</span></span><br><span class="line">    <span class="comment">// return request(&#123;</span></span><br><span class="line">    <span class="comment">//     method: &#x27;GET&#x27;,</span></span><br><span class="line">    <span class="comment">//     url: &#x27;/user/userInfo&#x27;,</span></span><br><span class="line">    <span class="comment">//     //在pinia中定义的响应式数据，都不需要.value</span></span><br><span class="line">    <span class="comment">//     headers: &#123; &#x27;Authorization&#x27;: tokenStore.token &#125;</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/user/userInfo&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="8-用户信息-修改"><a href="#8-用户信息-修改" class="headerlink" title="8.用户信息-修改"></a>8.用户信息-修改</h1><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><p>接口文件src&#x2F;api&#x2F;user.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">updatePassword</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/user/updataPwd&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;patch&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: params</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>界面和对接src&#x2F;views&#x2F;user&#x2F;PwdEdit.vue</p><blockquote><p>点击“找回密码”弹出dialog提示框</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;password-container&quot;&gt;</span><br><span class="line">    &lt;van-nav-bar</span><br><span class="line">      title=&quot;设置密码&quot;</span><br><span class="line">      left-arrow</span><br><span class="line">      @click-left=&quot;$router.back()&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;div class=&quot;password-content&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;wechat-id&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;label&quot;&gt;学工号&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;value&quot;&gt;&#123;&#123;userInfo.userID&#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;van-form &gt;</span><br><span class="line">        &lt;van-cell-group inset&gt;</span><br><span class="line">          &lt;van-field</span><br><span class="line">            v-model=&quot;form.oldPassword&quot;</span><br><span class="line">            type=&quot;password&quot;</span><br><span class="line">            label=&quot;原密码&quot;</span><br><span class="line">            placeholder=&quot;填写原密码&quot;</span><br><span class="line">            :rules=&quot;[&#123; required: true, message: &#x27;请输入原密码&#x27; &#125;]&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">          </span><br><span class="line">          &lt;van-field</span><br><span class="line">            v-model=&quot;form.newPassword&quot;</span><br><span class="line">            type=&quot;password&quot;</span><br><span class="line">            label=&quot;新密码&quot;</span><br><span class="line">            placeholder=&quot;填写新密码&quot;</span><br><span class="line">            :rules=&quot;passwordRules&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">          </span><br><span class="line">          &lt;van-field</span><br><span class="line">            v-model=&quot;form.confirmPassword&quot;</span><br><span class="line">            type=&quot;password&quot;</span><br><span class="line">            label=&quot;确认密码&quot;</span><br><span class="line">            placeholder=&quot;再次填写确认&quot;</span><br><span class="line">            :rules=&quot;confirmPasswordRules&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/van-cell-group&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div class=&quot;password-tips&quot;&gt;</span><br><span class="line">          密码必须是8-16位的英文字母、数字、字符组合（不能是纯数字）</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div class=&quot;forget-password&quot;&gt;</span><br><span class="line">          &lt;span @click=&quot;handleForgetPassword&quot;&gt;忘记原密码？&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div class=&quot;submit-btn&quot;&gt;</span><br><span class="line">          &lt;van-button</span><br><span class="line">            round</span><br><span class="line">            block</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            native-type=&quot;submit&quot;</span><br><span class="line">            :loading=&quot;loading&quot;</span><br><span class="line">            @click=&quot;handleSubmit&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            确认修改</span><br><span class="line">          &lt;/van-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/van-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Toast, Dialog &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; useUserInfoStore &#125; from &#x27;@/store/user&#x27;;</span><br><span class="line">import &#123; updatePassword &#125; from &#x27;@/api/user&#x27;;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line"></span><br><span class="line">    const router = useRouter();</span><br><span class="line">    const userInfoStore = useUserInfoStore();</span><br><span class="line">    const userInfo = ref(&#123;...userInfoStore.info&#125;)</span><br><span class="line"></span><br><span class="line">    const form = ref(&#123;</span><br><span class="line">      oldPassword: &#x27;&#x27;,</span><br><span class="line">      newPassword: &#x27;&#x27;,</span><br><span class="line">      confirmPassword: &#x27;&#x27;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    const loading = ref(false);</span><br><span class="line"></span><br><span class="line">    // 密码验证规则</span><br><span class="line">    const validatePassword = (val) =&gt; &#123;</span><br><span class="line">      if (!val) return &#x27;请输入新密码&#x27;;</span><br><span class="line">      if (val.length &lt; 8 || val.length &gt; 16) return &#x27;密码长度需8-16位&#x27;;</span><br><span class="line">      if (/^\d+$/.test(val)) return &#x27;密码不能是纯数字&#x27;;</span><br><span class="line">      if (!/^[A-Za-z0-9!@#$%^&amp;*()_+]+$/.test(val)) return &#x27;密码需包含字母、数字或特殊字符&#x27;;</span><br><span class="line">      return true;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    const passwordRules = [</span><br><span class="line">      &#123; validator: validatePassword, message: &#x27;密码不符合要求&#x27; &#125;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    // 确认密码验证规则</span><br><span class="line">    const confirmPasswordRules = [</span><br><span class="line">      &#123; validator: (val) =&gt; val === form.value.newPassword, message: &#x27;两次输入密码不一致&#x27; &#125;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    // 提交表单</span><br><span class="line">    const handleSubmit = async () =&gt; &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        loading.value = true; //加载标志</span><br><span class="line">        </span><br><span class="line">        const params = &#123;</span><br><span class="line">          old_pwd: form.value.oldPassword,</span><br><span class="line">          new_pwd: form.value.newPassword,</span><br><span class="line">          re_pwd: form.value.confirmPassword</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        const res = await updatePassword(params);</span><br><span class="line">        //console.log(JSON.stringify(res));</span><br><span class="line">        if (res.data.code === 0) &#123;</span><br><span class="line">          </span><br><span class="line">          Toast(&#123;</span><br><span class="line">            message: &#x27;密码修改成功,请重新登录&#x27;,</span><br><span class="line">            duration: 1000,</span><br><span class="line">            onClose: () =&gt; &#123;</span><br><span class="line">              // 密码修改成功后，1s后转到登录页重新登录</span><br><span class="line">              router.push(&#x27;/&#x27;);</span><br><span class="line">              //如果这里存的是普通信息，需要将新信息存入pinia</span><br><span class="line">              //同时应为userInfo是响应式数据，一直都是最新的数据，不用对它进行处理，直接存就行</span><br><span class="line">              //userInfoStore.setInfo(userInfo.value)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">          </span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Toast(res.data.message? res.data.message : &#x27;密码修改失败&#x27;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; catch (error) &#123;</span><br><span class="line">          console.error(&#x27;修改密码失败:&#x27;, error);</span><br><span class="line">          Toast(&#x27;请求失败，请稍后重试&#x27;);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">          loading.value = false;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">    // 忘记密码处理</span><br><span class="line">    const handleForgetPassword = () =&gt; &#123;</span><br><span class="line">      Dialog(&#123;</span><br><span class="line">        title: &#x27;忘记密码&#x27;,</span><br><span class="line">        message: &#x27;请通过安全中心找回密码&#x27;,</span><br><span class="line">        confirmButtonText: &#x27;前往安全中心&#x27;,</span><br><span class="line">        cancelButtonText: &#x27;取消&#x27;</span><br><span class="line">      &#125;).then(() =&gt; &#123;</span><br><span class="line">        // 跳转到找回密码页面</span><br><span class="line">        router.push(&#x27;/forgot-password&#x27;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return&#123;</span><br><span class="line">      userInfo,</span><br><span class="line">      passwordRules,</span><br><span class="line">      confirmPasswordRules,</span><br><span class="line">      handleSubmit,</span><br><span class="line">      handleForgetPassword,</span><br><span class="line">      form</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">/* 基础rem设置，假设设计稿为375px宽，1rem=16px */</span><br><span class="line">html &#123;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.password-container &#123;</span><br><span class="line">  background-color: #f7f7f7;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  </span><br><span class="line">  .password-content &#123;</span><br><span class="line">    padding: 1rem;</span><br><span class="line">    </span><br><span class="line">    .wechat-id &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: space-between;</span><br><span class="line">      align-items: center;</span><br><span class="line">      padding: 0.75rem 1rem;</span><br><span class="line">      background-color: #fff;</span><br><span class="line">      border-radius: 0.5rem;</span><br><span class="line">      margin-bottom: 1rem;</span><br><span class="line">      </span><br><span class="line">      .label &#123;</span><br><span class="line">        font-size: 0.875rem;</span><br><span class="line">        color: #333;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      .value &#123;</span><br><span class="line">        font-size: 0.875rem;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    .password-tips &#123;</span><br><span class="line">      font-size: 0.75rem;</span><br><span class="line">      color: #999;</span><br><span class="line">      padding: 0.5rem 1rem;</span><br><span class="line">      margin-top: -0.5rem;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    .forget-password &#123;</span><br><span class="line">      text-align: right;</span><br><span class="line">      padding: 0 1rem;</span><br><span class="line">      margin-top: 0.5rem;</span><br><span class="line">      </span><br><span class="line">      span &#123;</span><br><span class="line">        font-size: 0.75rem;</span><br><span class="line">        color: #1989fa;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    .submit-btn &#123;</span><br><span class="line">      margin: 1.5rem 1rem 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="显示头像大图、修改头像（文件资源库）"><a href="#显示头像大图、修改头像（文件资源库）" class="headerlink" title="显示头像大图、修改头像（文件资源库）*"></a>显示头像大图、修改头像（文件资源库）*</h2><h3 id=""><a href="#" class="headerlink" title="&lt;待修改上传文件服务器&gt;"></a>&lt;待修改上传文件服务器&gt;</h3><p>修改PersonalView.vue</p><blockquote><p>input组件：上传图像。</p><ul><li>隐藏显示（<code>display: none</code>）</li><li>限制只接受图片文件（<code>accept=&quot;image/*&quot;</code>）</li><li>通过<code>ref</code>获取DOM引用<ul><li>这里ref&#x3D;fileInput。而ref又绑定了input这个dom元素，所以在script中可以使用fileInput.value去控制input组件。</li></ul></li><li>监听<code>change</code>事件处理文件选择</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;myparent&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;myheader&quot;&gt;</span><br><span class="line">      &lt;van-image</span><br><span class="line">        round</span><br><span class="line">        fit=&quot;cover&quot;</span><br><span class="line">        width=&quot;10rem&quot;</span><br><span class="line">        height=&quot;10rem&quot;</span><br><span class="line">        :src=&quot;userInfoStore.info.userPic? userInfoStore.info.userPic:</span><br><span class="line">         &#x27;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&#x27;&quot;</span><br><span class="line">        @click=&quot;showAvatarActions&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;!-- 点击头像弹出操作面板 --&gt;</span><br><span class="line">    &lt;van-action-sheet</span><br><span class="line">      v-model:show=&quot;showAvatarSheet&quot;</span><br><span class="line">      :actions=&quot;avatarActions&quot;</span><br><span class="line">      cancel-text=&quot;取消&quot;</span><br><span class="line">      close-on-click-action</span><br><span class="line">      @select=&quot;onAvatarAction&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 头像预览 --&gt;</span><br><span class="line">    &lt;van-image-preview</span><br><span class="line">      v-model:show=&quot;showAvatarPreview&quot;</span><br><span class="line">      :images=&quot;[userInfoStore.info.userPic ?userInfoStore.info.userPic:</span><br><span class="line">       &#x27;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&#x27;]&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 文件上传组件（隐藏） --&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      ref=&quot;fileInput&quot;</span><br><span class="line">      type=&quot;file&quot;</span><br><span class="line">      accept=&quot;image/*&quot;</span><br><span class="line">      style=&quot;display: none&quot;</span><br><span class="line">      @change=&quot;handleFileChange&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><blockquote><p>修改部分逻辑：用户点击“从相册选择”这个选项时，触发selectFromAlbum点击事件，这个事件中会判断fileInput.value是否为空，也就是fileInput有没有对应的dom元素。这里fileInput通过ref跟input组件进行了绑定，那fileInput.value &#x3D; <input  type="file"  accept="image/*"  style="display: none"/>。也就是说，现在fileInput.value就是input组件。所以在这里可以通过fileInput.value去调用input组件的点击事件fileInput.value.click()&#x3D;handleFileChange，进行头像上传。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref ,onMounted&#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Dialog, Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;;</span><br><span class="line"></span><br><span class="line">import &#123; getUserInfo &#125; from &#x27;@/api/user&#x27;;</span><br><span class="line">import &#123;useUserInfoStore&#125; from &#x27;@/store/user&#x27;</span><br><span class="line">import &#123;useTokenStore&#125; from &#x27;@/store/token&#x27;</span><br><span class="line">import &#123;updateAvatar&#125; from &#x27;@/api/user&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">...</span><br><span class="line">    const fileInput = ref(null);</span><br><span class="line">    // 头像操作相关状态</span><br><span class="line">    const showAvatarSheet = ref(false);</span><br><span class="line">    const showAvatarPreview = ref(false);</span><br><span class="line"></span><br><span class="line">    // 点击显示头像操作面板</span><br><span class="line">    const showAvatarActions = () =&gt; &#123;</span><br><span class="line">      showAvatarSheet.value = true;</span><br><span class="line">    &#125;;</span><br><span class="line">    // 头像操作选项</span><br><span class="line">    const avatarActions = [</span><br><span class="line">      &#123; name: &#x27;查看头像&#x27;, action: &#x27;view&#x27; &#125;,</span><br><span class="line">      &#123; name: &#x27;拍照&#x27;, action: &#x27;camera&#x27; &#125;,</span><br><span class="line">      &#123; name: &#x27;从相册选择&#x27;, action: &#x27;album&#x27; &#125;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    // 处理头像操作</span><br><span class="line">    const onAvatarAction = (item) =&gt; &#123;</span><br><span class="line">      switch(item.action) &#123;</span><br><span class="line">        case &#x27;view&#x27;:</span><br><span class="line">          showAvatarPreview.value = true;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;camera&#x27;:</span><br><span class="line">          takePhoto();</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;album&#x27;:</span><br><span class="line">          selectFromAlbum();</span><br><span class="line">          break;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 拍照</span><br><span class="line">    const takePhoto = () =&gt; &#123;</span><br><span class="line">      // 用cordova-plugin-camera或其他拍照插件</span><br><span class="line">      // 这里直接触发文件选择</span><br><span class="line">      if (fileInput.value) &#123;</span><br><span class="line">        fileInput.value.accept = &#x27;image/*;capture=camera&#x27;;</span><br><span class="line">        fileInput.value.click();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 从相册选择</span><br><span class="line">    const selectFromAlbum = () =&gt; &#123;</span><br><span class="line">      if (fileInput.value) &#123;</span><br><span class="line">        console.log(fileInput.value);</span><br><span class="line">        fileInput.value.accept = &#x27;image/*&#x27;;</span><br><span class="line">        fileInput.value.click();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 处理选择的图片文件</span><br><span class="line">    const handleFileChange = async (e) =&gt; &#123;</span><br><span class="line">      const file = e.target.files[0];</span><br><span class="line">      if (!file) </span><br><span class="line">        return;</span><br><span class="line"></span><br><span class="line">      try &#123;</span><br><span class="line">        // 1. 应该先通过uploadFile接口上传图片到文件服务器获取URL</span><br><span class="line">        // 2. 然后调用更新头像接口</span><br><span class="line">        // const uploadRes = await uploadFile(file);</span><br><span class="line">        // if (uploadRes.data.code !== 0) &#123;</span><br><span class="line">        //   throw new Error(uploadRes.data.message || &#x27;文件上传失败&#x27;);</span><br><span class="line">        // &#125;        </span><br><span class="line">        // const fileUrl = uploadRes.data.data.url; // 假设返回结构中有url字段</span><br><span class="line"></span><br><span class="line">        // const updateRes = await updateAvatar(fileUrl);</span><br><span class="line">        </span><br><span class="line">        // 但是现在没有服务器，这里直接上传</span><br><span class="line">        const formData = new FormData();</span><br><span class="line">        formData.append(&#x27;avatar&#x27;, file);</span><br><span class="line">        </span><br><span class="line">        Toast.loading(&#123;</span><br><span class="line">          message: &#x27;上传中...&#x27;,</span><br><span class="line">          forbidClick: true,</span><br><span class="line">          duration: 0</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        // 调用上传接口</span><br><span class="line">        const res = await updateAvatar(formData);</span><br><span class="line">        </span><br><span class="line">        if (res.data.code === 0) &#123;</span><br><span class="line">          // 更新本地存储的头像信息</span><br><span class="line">          userInfoStore.setInfo(&#123;</span><br><span class="line">            ...userInfoStore.info,</span><br><span class="line">            userPic: res.data.data.avatarUrl // 返回的新的头像URL</span><br><span class="line">           //userPic: fileUrl //有文件服务器应该是这样</span><br><span class="line">          &#125;);</span><br><span class="line">          </span><br><span class="line">          Toast.success(&#x27;头像更新成功&#x27;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          Toast.fail(res.data.message || &#x27;头像更新失败&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        console.error(&#x27;头像上传失败:&#x27;, error);</span><br><span class="line">        Toast.fail(&#x27;头像上传失败&#x27;);</span><br><span class="line">      &#125; finally &#123;</span><br><span class="line">        // 重置文件输入</span><br><span class="line">        if (fileInput.value) &#123;</span><br><span class="line">          fileInput.value.value = &#x27;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      show,</span><br><span class="line">      actions,</span><br><span class="line">      onSelect,</span><br><span class="line">      onCancel,</span><br><span class="line">      userAuth,</span><br><span class="line">      userInfoStore,</span><br><span class="line">      showAvatarSheet,</span><br><span class="line">      showAvatarPreview,</span><br><span class="line">      avatarActions,</span><br><span class="line">      fileInput,</span><br><span class="line">      showAvatarActions,</span><br><span class="line">      onAvatarAction,</span><br><span class="line">      handleFileChange</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="用户部分全部代码"><a href="#用户部分全部代码" class="headerlink" title="用户部分全部代码"></a>用户部分全部代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;myparent&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;myheader&quot;&gt;</span><br><span class="line">      &lt;van-image</span><br><span class="line">        round</span><br><span class="line">        fit=&quot;cover&quot;</span><br><span class="line">        width=&quot;10rem&quot;</span><br><span class="line">        height=&quot;10rem&quot;</span><br><span class="line">        :src=&quot;userInfoStore.info.userPic? userInfoStore.info.userPic:</span><br><span class="line">         &#x27;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&#x27;&quot;</span><br><span class="line">        @click=&quot;showAvatarActions&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;mylower&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;editmy&quot;&gt;</span><br><span class="line">        &lt;van-cell title=&quot;姓名&quot; :value=&quot;userInfoStore.info.userName&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;学工号&quot; :value=&quot;userInfoStore.info.userID&quot; center/&gt;</span><br><span class="line">        </span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;thehelp&quot;&gt;</span><br><span class="line">        &lt;van-cell title=&quot;密码&quot; is-link value=&quot;点击修改&quot; to=&quot;/PwdEdit&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;学院&quot; is-link :value=&quot;userInfoStore.info.userDepartment&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;权限&quot; is-link :value=&quot;userAuth&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;常见问题&quot; is-link value=&quot;联系我们&quot; center/&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;outlogin&quot;&gt;</span><br><span class="line">        &lt;van-cell  title=&quot;切换账号&quot; @click=&quot;changeUser&quot; center/&gt;</span><br><span class="line">        &lt;van-cell title=&quot;退出&quot; @click=&quot;show = true&quot; center/&gt;</span><br><span class="line">        &lt;van-action-sheet</span><br><span class="line">          v-model:show=&quot;show&quot;</span><br><span class="line">          :actions=&quot;actions&quot;</span><br><span class="line">          cancel-text=&quot;取消&quot;</span><br><span class="line">          close-on-click-action</span><br><span class="line">          @cancel=&quot;onCancel&quot;</span><br><span class="line">          @select=&quot;onSelect&quot;</span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;     </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 点击头像弹出操作面板 --&gt;</span><br><span class="line">    &lt;van-action-sheet</span><br><span class="line">      v-model:show=&quot;showAvatarSheet&quot;</span><br><span class="line">      :actions=&quot;avatarActions&quot;</span><br><span class="line">      cancel-text=&quot;取消&quot;</span><br><span class="line">      close-on-click-action</span><br><span class="line">      @select=&quot;onAvatarAction&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 头像预览 --&gt;</span><br><span class="line">    &lt;van-image-preview</span><br><span class="line">      v-model:show=&quot;showAvatarPreview&quot;</span><br><span class="line">      :images=&quot;[userInfoStore.info.userPic ?userInfoStore.info.userPic:</span><br><span class="line">       &#x27;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&#x27;]&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 文件上传组件（隐藏） --&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      ref=&quot;fileInput&quot;</span><br><span class="line">      type=&quot;file&quot;</span><br><span class="line">      accept=&quot;image/*&quot;</span><br><span class="line">      style=&quot;display: none&quot;</span><br><span class="line">      @change=&quot;handleFileChange&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref ,onMounted&#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Dialog, Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;;</span><br><span class="line"></span><br><span class="line">import &#123; getUserInfo &#125; from &#x27;@/api/user&#x27;;</span><br><span class="line">import &#123;useUserInfoStore&#125; from &#x27;@/store/user&#x27;</span><br><span class="line">import &#123;useTokenStore&#125; from &#x27;@/store/token&#x27;</span><br><span class="line">import &#123;updateAvatar&#125; from &#x27;@/api/user&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line"></span><br><span class="line">    //获取用户信息(未存到pinia)</span><br><span class="line">    // const userInfo = ref(&#123;&#125;);</span><br><span class="line">    // const fetchUserInfo = async () =&gt; &#123;</span><br><span class="line">    //   try &#123;</span><br><span class="line">    //     const res = await getUserInfo();</span><br><span class="line">    //     console.log(JSON.stringify(res.data)+&quot;服务器返回数据&quot;)</span><br><span class="line">    //     if (res.data.code === 0) &#123;</span><br><span class="line">    //       userInfo.value = res.data.data;</span><br><span class="line">    //       if(userInfo.value.userAuth === 1)&#123;</span><br><span class="line">    //         userInfo.value.userAuth = &quot;可查看全校学生&quot;</span><br><span class="line">    //       &#125;else&#123;</span><br><span class="line">    //         userInfo.value.userAuth = &quot;可查看本院学生&quot;</span><br><span class="line">    //       &#125;</span><br><span class="line">          </span><br><span class="line">    //     &#125; else &#123;</span><br><span class="line">    //       Toast.fail(&#x27;获取用户信息失败&#x27;);</span><br><span class="line">    //     &#125;</span><br><span class="line">    //   &#125; catch (error) &#123;</span><br><span class="line">    //     Toast.fail(error);</span><br><span class="line">    //   &#125;</span><br><span class="line">    // &#125;;</span><br><span class="line"></span><br><span class="line">    var userAuth = &quot;可查看本院学生&quot;;</span><br><span class="line">    //获取用户信息并存到pinia中</span><br><span class="line">    const userInfoStore = useUserInfoStore();</span><br><span class="line">    const fetchUserInfo = async () =&gt; &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        const res = await getUserInfo();</span><br><span class="line">        //console.log(JSON.stringify(res.data)+&quot;服务器返回数据&quot;)</span><br><span class="line">        if (res.data.code === 0) &#123;</span><br><span class="line">          userInfoStore.setInfo(res.data.data);</span><br><span class="line"></span><br><span class="line">          if(userInfoStore.userAuth === 1)&#123;</span><br><span class="line">            userAuth = &quot;可查看全校学生&quot;</span><br><span class="line">          &#125;else&#123;</span><br><span class="line">            userAuth = &quot;可查看本院学生&quot;</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          Toast.fail(&#x27;获取用户信息失败&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        Toast.fail(error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">      fetchUserInfo();</span><br><span class="line">    &#125;);    </span><br><span class="line"></span><br><span class="line">    const show = ref(false);</span><br><span class="line">    const actions = [</span><br><span class="line">      &#123; name: &#x27;退出登录&#x27; , action: &#x27;logout&#x27;&#125;,</span><br><span class="line">      &#123; name: &#x27;关闭软件&#x27; , action: &#x27;close&#x27;&#125;,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    const router = useRouter();</span><br><span class="line">    const tokenStore = useTokenStore();</span><br><span class="line">    const changeUser = () =&gt; &#123;</span><br><span class="line">      //弹出确认框</span><br><span class="line">        Dialog.confirm(&#123;</span><br><span class="line">          title: &quot;确认切换账户么&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          //点击确认</span><br><span class="line">          //清除pinia中存储的token和个人信息</span><br><span class="line">          tokenStore.removeToken();</span><br><span class="line">          userInfoStore.removeInfo();</span><br><span class="line"></span><br><span class="line">          router.push(&#x27;/&#x27;);</span><br><span class="line">          Toast(&#x27;已退出当前账号&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;</span><br><span class="line">          //取消切换账号</span><br><span class="line">          Toast(&#x27;取消&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;;</span><br><span class="line">    const onSelect = (item) =&gt; &#123;</span><br><span class="line">      if(item.action === &#x27;logout&#x27;)&#123;</span><br><span class="line">        //弹出确认框</span><br><span class="line">        Dialog.confirm(&#123;</span><br><span class="line">          title: &quot;确认退出登录么&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(() =&gt; &#123;</span><br><span class="line">          //点击确认</span><br><span class="line">          //清除pinia中存储的token和个人信息</span><br><span class="line">          tokenStore.removeToken();</span><br><span class="line">          userInfoStore.removeInfo();</span><br><span class="line"></span><br><span class="line">          router.push(&#x27;/&#x27;);</span><br><span class="line">          Toast(&#x27;已退出登录&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(() =&gt; &#123;</span><br><span class="line">          //取消退出登录</span><br><span class="line">          Toast(&#x27;取消&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;else if(item.action === &#x27;close&#x27;)&#123;</span><br><span class="line">        Toast(&#x27;关闭软件&#x27;);</span><br><span class="line">      &#125;      </span><br><span class="line">    &#125;;</span><br><span class="line">      </span><br><span class="line">      //点击“取消”按钮，底部弹出框关闭，show值为false</span><br><span class="line">    const onCancel = () =&gt; &#123;</span><br><span class="line">      show.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    const fileInput = ref(null);</span><br><span class="line">    // 头像操作相关状态</span><br><span class="line">    const showAvatarSheet = ref(false);</span><br><span class="line">    const showAvatarPreview = ref(false);</span><br><span class="line">    </span><br><span class="line">    // 点击显示头像操作面板</span><br><span class="line">    const showAvatarActions = () =&gt; &#123;</span><br><span class="line">      showAvatarSheet.value = true;</span><br><span class="line">    &#125;;</span><br><span class="line">    // 头像操作选项</span><br><span class="line">    const avatarActions = [</span><br><span class="line">      &#123; name: &#x27;查看头像&#x27;, action: &#x27;view&#x27; &#125;,</span><br><span class="line">      &#123; name: &#x27;拍照&#x27;, action: &#x27;camera&#x27; &#125;,</span><br><span class="line">      &#123; name: &#x27;从相册选择&#x27;, action: &#x27;album&#x27; &#125;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    // 处理头像操作</span><br><span class="line">    const onAvatarAction = (item) =&gt; &#123;</span><br><span class="line">      switch(item.action) &#123;</span><br><span class="line">        case &#x27;view&#x27;:</span><br><span class="line">          showAvatarPreview.value = true;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;camera&#x27;:</span><br><span class="line">          takePhoto();</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;album&#x27;:</span><br><span class="line">          selectFromAlbum();</span><br><span class="line">          break;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 拍照</span><br><span class="line">    const takePhoto = () =&gt; &#123;</span><br><span class="line">      // 用cordova-plugin-camera或其他拍照插件</span><br><span class="line">      // 这里直接触发文件选择</span><br><span class="line">      if (fileInput.value) &#123;</span><br><span class="line">        fileInput.value.accept = &#x27;image/*;capture=camera&#x27;;</span><br><span class="line">        fileInput.value.click();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 从相册选择</span><br><span class="line">    const selectFromAlbum = () =&gt; &#123;</span><br><span class="line">      if (fileInput.value) &#123;</span><br><span class="line">        console.log(fileInput.value);</span><br><span class="line">        fileInput.value.accept = &#x27;image/*&#x27;;</span><br><span class="line">        fileInput.value.click();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 处理选择的图片文件</span><br><span class="line">    const handleFileChange = async (e) =&gt; &#123;</span><br><span class="line">      const file = e.target.files[0];</span><br><span class="line">      if (!file) </span><br><span class="line">        return;</span><br><span class="line"></span><br><span class="line">      try &#123;</span><br><span class="line">        // 创建图片URL用于预览</span><br><span class="line">        //const imgUrl = URL.createObjectURL(file);</span><br><span class="line">        </span><br><span class="line">        // 1. 应该先通过uploadFile接口上传图片到文件服务器获取URL</span><br><span class="line">        // 2. 然后调用更新头像接口</span><br><span class="line">        // const uploadRes = await uploadFile(file);</span><br><span class="line">        // if (uploadRes.data.code !== 0) &#123;</span><br><span class="line">        //   throw new Error(uploadRes.data.message || &#x27;文件上传失败&#x27;);</span><br><span class="line">        // &#125;        </span><br><span class="line">        // const fileUrl = uploadRes.data.data.url; // 假设返回结构中有url字段</span><br><span class="line"></span><br><span class="line">        // const updateRes = await updateAvatar(fileUrl);</span><br><span class="line">        </span><br><span class="line">        // 但是现在没有服务器，这里直接上传</span><br><span class="line">        const formData = new FormData();</span><br><span class="line">        formData.append(&#x27;avatar&#x27;, file);</span><br><span class="line">        </span><br><span class="line">        Toast.loading(&#123;</span><br><span class="line">          message: &#x27;上传中...&#x27;,</span><br><span class="line">          forbidClick: true,</span><br><span class="line">          duration: 0</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        // 调用上传接口</span><br><span class="line">        const res = await updateAvatar(formData);</span><br><span class="line">        </span><br><span class="line">        if (res.data.code === 0) &#123;</span><br><span class="line">          // 更新本地存储的头像信息</span><br><span class="line">          userInfoStore.setInfo(&#123;</span><br><span class="line">            ...userInfoStore.info,</span><br><span class="line">            userPic: res.data.data.avatarUrl // 返回的新的头像URL</span><br><span class="line">            //userPic: fileUrl //有文件服务器应该是这样</span><br><span class="line">          &#125;);</span><br><span class="line">          </span><br><span class="line">          Toast.success(&#x27;头像更新成功&#x27;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          Toast.fail(res.data.message || &#x27;头像更新失败&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        console.error(&#x27;头像上传失败:&#x27;, error);</span><br><span class="line">        Toast.fail(&#x27;头像上传失败&#x27;);</span><br><span class="line">      &#125; finally &#123;</span><br><span class="line">        // 重置文件输入</span><br><span class="line">        if (fileInput.value) &#123;</span><br><span class="line">          fileInput.value.value = &#x27;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      show,</span><br><span class="line">      actions,</span><br><span class="line">      onSelect,</span><br><span class="line">      onCancel,</span><br><span class="line">      userAuth,</span><br><span class="line">      userInfoStore,</span><br><span class="line">      showAvatarSheet,</span><br><span class="line">      showAvatarPreview,</span><br><span class="line">      avatarActions,</span><br><span class="line">      fileInput,</span><br><span class="line">      showAvatarActions,</span><br><span class="line">      onAvatarAction,</span><br><span class="line">      handleFileChange,</span><br><span class="line">      changeUser</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="9-主页"><a href="#9-主页" class="headerlink" title="9.主页"></a>9.主页</h1><blockquote><p>默认显示权限范围内所有用户信息，可以条件检索，分页修改和跳转。</p><p>采用组件插槽方式将代码分开。</p></blockquote><h2 id="总界面"><a href="#总界面" class="headerlink" title="总界面"></a>总界面</h2><p>src&#x2F;views&#x2F;home&#x2F;HomeView.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;search-page&quot;&gt;</span><br><span class="line">    &lt;search-part /&gt;</span><br><span class="line">    &lt;chart-form /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import SearchPart from &quot;./SearchPart.vue&quot;;</span><br><span class="line">import ChartForm from &#x27;./ChartForm.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">  </span><br><span class="line">  components: &#123;</span><br><span class="line">    SearchPart,</span><br><span class="line">    ChartForm,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="搜索组件界面"><a href="#搜索组件界面" class="headerlink" title="搜索组件界面"></a>搜索组件界面</h2><p>src&#x2F;views&#x2F;home&#x2F;SearchPart.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;search-container&quot;&gt;</span><br><span class="line">    &lt;!--搜索框--&gt;</span><br><span class="line">    &lt;van-search</span><br><span class="line">      v-model=&quot;searchText&quot;</span><br><span class="line">      placeholder=&quot;请输入学生姓名、学号或电话号码&quot;</span><br><span class="line">      show-action</span><br><span class="line">      @search=&quot;handleSearch&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;template #action&gt;</span><br><span class="line">        &lt;van-button </span><br><span class="line">          type=&quot;primary&quot; </span><br><span class="line">          @click=&quot;handleSearch&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          搜索</span><br><span class="line">        &lt;/van-button&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/van-search&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--检索条件--&gt;</span><br><span class="line">    &lt;div class=&quot;condition-area&quot;&gt;</span><br><span class="line">      &lt;!--搜索条件dropdown menu--&gt;</span><br><span class="line">      &lt;div class=&quot;upper-panel&quot;&gt;</span><br><span class="line">        &lt;van-dropdown-menu </span><br><span class="line">          :close-on-click-outside=&quot;false&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;van-dropdown-item </span><br><span class="line">            title=&quot;点击增加筛选条件&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;template #default&gt;</span><br><span class="line">              &lt;div class=&quot;dropdown-content&quot;&gt;</span><br><span class="line">                &lt;van-cell </span><br><span class="line">                  v-for=&quot;item in conditionItems&quot; </span><br><span class="line">                  :key=&quot;item.value&quot; </span><br><span class="line">                  :title=&quot;item.text&quot;</span><br><span class="line">                  @click=&quot;showInputDialog(item)&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/van-dropdown-item&gt;</span><br><span class="line">        &lt;/van-dropdown-menu&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;van-button</span><br><span class="line">          type=&quot;success&quot; </span><br><span class="line">          class=&quot;clear&quot;</span><br><span class="line">          @click=&quot;SearchClear&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          重置&lt;/van-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!--已经选择的条件标签--&gt;</span><br><span class="line">      &lt;div class=&quot;lower-tags&quot;&gt;</span><br><span class="line">        &lt;van-tag</span><br><span class="line">          v-for=&quot;(tag, index) in selectedTags&quot;</span><br><span class="line">          :key=&quot;index&quot;</span><br><span class="line">          closeable</span><br><span class="line">          size=&quot;large&quot;</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          @close=&quot;removeTag(index)&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &#123;&#123; tag.pageTagText &#125;&#125;</span><br><span class="line">        &lt;/van-tag&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--学号，分数,生日弹出文本框输入--&gt;</span><br><span class="line">    &lt;van-dialog</span><br><span class="line">      v-model:show=&quot;showRangeDialog&quot;</span><br><span class="line">      :title=&quot;idGrade&quot;</span><br><span class="line">      show-cancel-button</span><br><span class="line">      @confirm=&quot;confirmRange&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;rangeMin&quot;</span><br><span class="line">        label=&quot;最小值&quot;</span><br><span class="line">        placeholder=&quot;请输入最小值&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;rangeMax&quot;</span><br><span class="line">        label=&quot;最大值&quot;</span><br><span class="line">        placeholder=&quot;请输入最大值&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-dialog&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 性别选择动作面板 --&gt;</span><br><span class="line">    &lt;van-action-sheet</span><br><span class="line">      v-model:show=&quot;showSexAction&quot;</span><br><span class="line">      :actions=&quot;sexActions&quot;</span><br><span class="line">      cancel-text=&quot;取消&quot;</span><br><span class="line">      close-on-click-action</span><br><span class="line">      @select=&quot;onSexSelect&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 院系/专业/省份，多选，复选框+单元格呈勾选效果 --&gt;</span><br><span class="line">    &lt;van-action-sheet</span><br><span class="line">      v-model:show=&quot;showMultiSelectAction&quot;</span><br><span class="line">      :title=&quot;multiTitle&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;div class=&quot;multi-select-content&quot;&gt;</span><br><span class="line">        &lt;van-checkbox-group v-model=&quot;multiSelected&quot; ref=&quot;checkboxGroup&quot;&gt;</span><br><span class="line">          &lt;van-cell-group&gt;</span><br><span class="line">            &lt;van-cell</span><br><span class="line">              v-for=&quot;(item, index) in multiSelectOptions&quot;</span><br><span class="line">              :key=&quot;index&quot;</span><br><span class="line">              clickable</span><br><span class="line">              :title=&quot;item.text&quot;</span><br><span class="line">              @click=&quot;toggle(index)&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              &lt;template #right-icon&gt;</span><br><span class="line">                &lt;van-checkbox </span><br><span class="line">                  :name=&quot;item.value&quot; </span><br><span class="line">                  ref=&quot;checkboxes&quot; </span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/template&gt;</span><br><span class="line">            &lt;/van-cell&gt;</span><br><span class="line">          &lt;/van-cell-group&gt;</span><br><span class="line">        &lt;/van-checkbox-group&gt;</span><br><span class="line">        &lt;div class=&quot;action-sheet-footer&quot;&gt;</span><br><span class="line">          &lt;van-button </span><br><span class="line">            type=&quot;primary&quot; </span><br><span class="line">            block </span><br><span class="line">            @click=&quot;confirmMultiSelect&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            确认</span><br><span class="line">          &lt;/van-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/van-action-sheet&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">/* eslint-disable */ </span><br><span class="line">import &#123; ref ,onMounted&#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; getDepartments , getMajors &#125; from &#x27;@/api/departmajor&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    </span><br><span class="line">    // 下拉菜单栏目内容</span><br><span class="line">    const conditionItems = ref([</span><br><span class="line">      &#123; text: &#x27;学号范围&#x27;, value: &#x27;idRange&#x27; &#125;,</span><br><span class="line">      &#123; text: &#x27;选择性别&#x27;, value: &#x27;sex&#x27; &#125;,</span><br><span class="line">      &#123; text: &#x27;生日范围&#x27;, value: &#x27;birth&#x27; &#125;,</span><br><span class="line">      &#123; text: &#x27;院系选择&#x27;, value: &#x27;department&#x27; &#125;,</span><br><span class="line">      &#123; text: &#x27;专业选择&#x27;, value: &#x27;major&#x27; &#125;,</span><br><span class="line">      &#123; text: &#x27;分数范围&#x27;, value: &#x27;grade&#x27; &#125;,</span><br><span class="line">      &#123; text: &#x27;生源省份&#x27;, value: &#x27;originpro&#x27; &#125;,</span><br><span class="line">      &#123; text: &#x27;籍贯选择&#x27;, value: &#x27;nativepro&#x27; &#125;,</span><br><span class="line">    ]);</span><br><span class="line">    </span><br><span class="line">    //确定当前输入的是学号、生日还是分数  </span><br><span class="line">    const currentRangeType = ref(&#x27;&#x27;);  </span><br><span class="line">    //学号、生日、分数输入框标题</span><br><span class="line">    const idGrade = ref(&#x27;&#x27;);</span><br><span class="line">    //输入框默认显示</span><br><span class="line">    const showRangeDialog = ref(false);</span><br><span class="line">    const rangeMin = ref(&#x27;&#x27;);</span><br><span class="line">    const rangeMax = ref(&#x27;&#x27;);</span><br><span class="line">    // 多选动作面板相关</span><br><span class="line">    const multiTitle = ref(&#x27;&#x27;);</span><br><span class="line">    const multiSelectOptions = ref([]);</span><br><span class="line">    const multiSelected = ref([]);</span><br><span class="line">    const showMultiSelectAction = ref(false);</span><br><span class="line">    const currentMultiSelectType = ref(&#x27;&#x27;);    </span><br><span class="line"></span><br><span class="line">    const showInputDialog = (item) =&gt; &#123;</span><br><span class="line">      switch(item.value) &#123;</span><br><span class="line">        case &#x27;idRange&#x27;:</span><br><span class="line">        case &#x27;grade&#x27;:</span><br><span class="line">        case &#x27;birth&#x27;:</span><br><span class="line">          currentRangeType.value = item.value;</span><br><span class="line">          if(item.value === &#x27;idRange&#x27;)&#123;</span><br><span class="line">            idGrade.value = &#x27;请输入学号范围&#x27;;</span><br><span class="line">          &#125; else if(item.value === &#x27;grade&#x27;)&#123;</span><br><span class="line">            idGrade.value = &#x27;请输入分数范围&#x27;;</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            idGrade.value = &#x27;请输入生日范围&#x27;;</span><br><span class="line">          &#125;</span><br><span class="line">          rangeMin.value = &#x27;&#x27;;</span><br><span class="line">          rangeMax.value = &#x27;&#x27;;</span><br><span class="line">          showRangeDialog.value = true;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;sex&#x27;:</span><br><span class="line">          showSexAction.value = true;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;department&#x27;:</span><br><span class="line">          multiTitle.value = &#x27;请选择院系(可多选)&#x27;;</span><br><span class="line">          currentMultiSelectType.value = &#x27;department&#x27;;</span><br><span class="line">          //应该从后端获取</span><br><span class="line">          multiSelectOptions.value = [</span><br><span class="line">              &#123; text: &#x27;计算机学院&#x27;, value: &#x27;cs&#x27; &#125;,</span><br><span class="line">              &#123; text: &#x27;数学学院&#x27;, value: &#x27;math&#x27; &#125;,</span><br><span class="line">            ];</span><br><span class="line">          multiSelected.value = [];</span><br><span class="line">          showMultiSelectAction.value = true;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;major&#x27;:</span><br><span class="line">          multiTitle.value = &#x27;请选择专业(可多选)&#x27;;</span><br><span class="line">          currentMultiSelectType.value = &#x27;major&#x27;;</span><br><span class="line">              //后端</span><br><span class="line">          multiSelectOptions.value = [</span><br><span class="line">              &#123; text: &#x27;计算机科学与技术&#x27;, value: &#x27;cs&#x27; &#125;,</span><br><span class="line">              &#123; text: &#x27;软件工程&#x27;, value: &#x27;se&#x27; &#125;</span><br><span class="line">          ];    </span><br><span class="line">          multiSelected.value = [];</span><br><span class="line">          showMultiSelectAction.value = true;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;originpro&#x27;:</span><br><span class="line">        case &#x27;nativepro&#x27;:</span><br><span class="line">          if(item.value === &#x27;originpro&#x27;)&#123;</span><br><span class="line">            multiTitle.value = &#x27;请选择生源地(可多选)&#x27;;</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            multiTitle.value = &#x27;请选择籍贯(可多选)&#x27;;</span><br><span class="line">          &#125;</span><br><span class="line">          currentMultiSelectType.value = item.value;</span><br><span class="line">              //vant4提供的省份数据</span><br><span class="line">          multiSelectOptions.value = [</span><br><span class="line">              &#123; text: &#x27;北京&#x27;, value: &#x27;beijing&#x27; &#125;,</span><br><span class="line">              &#123; text: &#x27;上海&#x27;, value: &#x27;shanghai&#x27; &#125;];</span><br><span class="line">          multiSelected.value = [];</span><br><span class="line">          showMultiSelectAction.value = true; //展开动作面板</span><br><span class="line">          break;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;  </span><br><span class="line">    </span><br><span class="line">    /*</span><br><span class="line">    **（待实现）下拉菜单内容渲染：1.从后端获取院系、专业，2.vant4提供的省份数据</span><br><span class="line">    */  </span><br><span class="line">   </span><br><span class="line">    /*</span><br><span class="line">    ***选中的条件都要加到标签中，添加标签需要先检查有没有已经存在的同类型标签，如果有，更新标签内容，否则直接添加新标签。</span><br><span class="line">    点×移除标签，直接从存标签的数组中删除</span><br><span class="line">    */  </span><br><span class="line">    //已选择的tag标签 </span><br><span class="line">    const selectedTags = ref([]);  </span><br><span class="line">    const addTag = (tag) =&gt; &#123;</span><br><span class="line">      // 检查是否已存在相同类型的标签</span><br><span class="line">      const existingIndex = selectedTags.value.findIndex(t =&gt; t.type === tag.type);</span><br><span class="line">      if (existingIndex &gt; -1) &#123;</span><br><span class="line">        //修改筛选条件后更新标签所属条目内容，但是标签不重新渲染</span><br><span class="line">        selectedTags.value[existingIndex] = tag;</span><br><span class="line">      &#125; else &#123;//添加新标签</span><br><span class="line">        selectedTags.value.push(tag);       </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    // 移除标签</span><br><span class="line">    const removeTag = async(index) =&gt; &#123;</span><br><span class="line">      selectedTags.value.splice(index, 1);</span><br><span class="line">    &#125;;  </span><br><span class="line">    </span><br><span class="line">    /*</span><br><span class="line">    ***学号、姓名、生日输入框填写确认处理。点击确认要存到tag标签中</span><br><span class="line">    */  </span><br><span class="line">    const confirmRange = () =&gt; &#123;</span><br><span class="line">      if (!rangeMin.value &amp;&amp; !rangeMax.value) &#123;</span><br><span class="line">        Toast(&#x27;请输入至少一个范围值&#x27;);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      let tagText = &#x27;&#x27;;</span><br><span class="line">      if (currentRangeType.value === &#x27;idRange&#x27;) &#123;</span><br><span class="line">        tagText = `学号: $&#123;rangeMin.value&#125; - $&#123;rangeMax.value&#125;`;</span><br><span class="line">      &#125; else if(currentRangeType.value === &#x27;grade&#x27;)&#123;</span><br><span class="line">        tagText = `分数: $&#123;rangeMin.value&#125; - $&#123;rangeMax.value&#125;`;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        tagText = `生日: $&#123;rangeMin.value&#125; - $&#123;rangeMax.value&#125;`;</span><br><span class="line">      &#125;</span><br><span class="line">      addTag(&#123;</span><br><span class="line">        type: currentRangeType.value,</span><br><span class="line">        //显示到页面上标签中的内容  </span><br><span class="line">        pageTagText: tagText,  </span><br><span class="line">        alltext: tagText,</span><br><span class="line">        value: &#123; min: rangeMin.value, max: rangeMax.value &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      showRangeDialog.value = false;</span><br><span class="line">    &#125;;  </span><br><span class="line">    </span><br><span class="line">    /*</span><br><span class="line">    ***弹出选择框部分。性别，【院系、专业、籍贯、生源】（多选）</span><br><span class="line">    */  </span><br><span class="line">    //1.性别选择</span><br><span class="line">    const showSexAction = ref(false);</span><br><span class="line">    const sexActions = ref([</span><br><span class="line">      &#123; name: &#x27;男生&#x27;, value: &#x27;male&#x27; &#125;,</span><br><span class="line">      &#123; name: &#x27;女生&#x27;, value: &#x27;female&#x27; &#125;</span><br><span class="line">    ]);</span><br><span class="line">    const onSexSelect = (action) =&gt; &#123;</span><br><span class="line">      //点击添加到标签</span><br><span class="line">      addTag(&#123;</span><br><span class="line">        type: &#x27;sex&#x27;,</span><br><span class="line">        pageTagText: `性别: $&#123;action.name&#125;`,</span><br><span class="line">        alltext: `性别: $&#123;action.name&#125;`,</span><br><span class="line">        value: action.value</span><br><span class="line">      &#125;);</span><br><span class="line">      showSexAction.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    //2.四类多选框</span><br><span class="line">    //2.1选择和取消。检查用户点击的multiSelectOptions中的选项index是否已在已选列表中，如果存在（数组下标 &gt; -1），从数组中移除，否则添加到选中的选项数组。</span><br><span class="line">    const toggle = (index) =&gt; &#123;</span><br><span class="line">      const checkbox = multiSelectOptions.value[index];</span><br><span class="line">      const idx = multiSelected.value.indexOf(checkbox.value);</span><br><span class="line">      </span><br><span class="line">      if (idx &gt; -1) &#123;</span><br><span class="line">        multiSelected.value.splice(idx, 1);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        multiSelected.value.push(checkbox.value);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;; </span><br><span class="line">    //2.2点击确认</span><br><span class="line">    const confirmMultiSelect = () =&gt; &#123;</span><br><span class="line">      if (multiSelected.value.length === 0) &#123;</span><br><span class="line">        Toast(&#x27;请至少选择一项&#x27;);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      // 筛选出已选的完整选项对象</span><br><span class="line">      const selectedItems = multiSelectOptions.value.filter(item =&gt; </span><br><span class="line">        multiSelected.value.includes(item.value)</span><br><span class="line">      );</span><br><span class="line">      </span><br><span class="line">      let tagText = &#x27;&#x27;;</span><br><span class="line">      let typeText = &#x27;&#x27;;</span><br><span class="line">      </span><br><span class="line">      switch(currentMultiSelectType.value) &#123;</span><br><span class="line">        case &#x27;department&#x27;:</span><br><span class="line">          typeText = &#x27;院系&#x27;;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;major&#x27;:</span><br><span class="line">          typeText = &#x27;专业&#x27;;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;originpro&#x27;:</span><br><span class="line">          typeText = &#x27;生源&#x27;;</span><br><span class="line">          break;</span><br><span class="line">        case &#x27;nativepro&#x27;:</span><br><span class="line">          typeText = &#x27;籍贯&#x27;;</span><br><span class="line">          break;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      tagText = `$&#123;typeText&#125;: $&#123;selectedItems.map(item =&gt; item.text).join(&#x27;, &#x27;)&#125;`;</span><br><span class="line">      </span><br><span class="line">      addTag(&#123;</span><br><span class="line">        type: currentMultiSelectType.value,</span><br><span class="line">        pageTagText: tagText,</span><br><span class="line">        alltext: tagText,</span><br><span class="line">        //value: multiSelected.value</span><br><span class="line">        value: [...multiSelected.value]</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      showMultiSelectAction.value = false; //关闭面板</span><br><span class="line">    &#125;;  </span><br><span class="line">  </span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    // 搜索处理</span><br><span class="line">    const handleSearch = () =&gt; &#123;</span><br><span class="line">        Toast(&#x27;搜索成功&#x27;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    //重置条件</span><br><span class="line">    const SearchClear = async () =&gt; &#123;</span><br><span class="line">      searchText.value = &#x27;&#x27;;</span><br><span class="line">      selectedTags.value = [];</span><br><span class="line">    &#125;;</span><br><span class="line">      </span><br><span class="line">    return &#123;</span><br><span class="line">      searchText,</span><br><span class="line">      conditionItems,</span><br><span class="line">      selectedTags,</span><br><span class="line">      showRangeDialog,</span><br><span class="line">      rangeMin,</span><br><span class="line">      rangeMax,</span><br><span class="line">      showSexAction,</span><br><span class="line">      sexActions,</span><br><span class="line">      showMultiSelectAction,</span><br><span class="line">      multiSelectOptions,</span><br><span class="line">      multiSelected,</span><br><span class="line">      showInputDialog,</span><br><span class="line">      confirmRange,</span><br><span class="line">      onSexSelect,</span><br><span class="line">      toggle,</span><br><span class="line">      confirmMultiSelect,</span><br><span class="line">      removeTag,</span><br><span class="line">      handleSearch,</span><br><span class="line">      idGrade,</span><br><span class="line">      multiTitle,</span><br><span class="line">      SearchClear,</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">/* styles/search.css */</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="获取院系、专业渲染到下拉菜单"><a href="#获取院系、专业渲染到下拉菜单" class="headerlink" title="获取院系、专业渲染到下拉菜单"></a>获取院系、专业渲染到下拉菜单</h3><p>1.从后端获取院系、专业接口：src&#x2F;api&#x2F;departmajor.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&quot;@/utils/request&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取权限范围内的院系列表</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getDepartments</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/departMajor/departments&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取权限范围内的专业列表</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getMajors</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/departMajor/majors&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.由于后面新增学生、修改学生信息界面都要用到这部分信息，将其存到pinia中，避免重复获取：src&#x2F;store&#x2F;departmentMajor.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Toast</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getCombinations , getDepartments , getMajors &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/departmajor&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useDepartmentMajorStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;departmentMajor&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 院系数据</span></span><br><span class="line">  <span class="keyword">const</span> departments = <span class="title function_">ref</span>([]);</span><br><span class="line">  <span class="comment">// 专业数据</span></span><br><span class="line">  <span class="keyword">const</span> majors = <span class="title function_">ref</span>([]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 标记数据是否已加载</span></span><br><span class="line">  <span class="keyword">const</span> isDataLoaded = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 加载院系和专业数据</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">loadDepartmentMajorData</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (isDataLoaded.<span class="property">value</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 获取院系数据</span></span><br><span class="line">      <span class="keyword">const</span> deptResponse = <span class="keyword">await</span> <span class="title function_">getDepartments</span>();</span><br><span class="line">      <span class="keyword">if</span> (deptResponse.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        departments.<span class="property">value</span> = deptResponse.<span class="property">data</span>.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> (&#123;</span><br><span class="line">          <span class="attr">text</span>: item,</span><br><span class="line">          <span class="attr">value</span>: item</span><br><span class="line">        &#125;));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 获取专业数据</span></span><br><span class="line">      <span class="keyword">const</span> majorResponse = <span class="keyword">await</span> <span class="title function_">getMajors</span>();</span><br><span class="line">      <span class="keyword">if</span> (majorResponse.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        majors.<span class="property">value</span> = majorResponse.<span class="property">data</span>.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> (&#123;</span><br><span class="line">          <span class="attr">text</span>: item,</span><br><span class="line">          <span class="attr">value</span>: item</span><br><span class="line">        &#125;));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 标记数据已加载</span></span><br><span class="line">      isDataLoaded.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;加载院系专业数据失败:&#x27;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">removeInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    departments.<span class="property">value</span> = [];</span><br><span class="line">    majors.<span class="property">value</span> = [];</span><br><span class="line">    isDataLoaded.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    departments,</span><br><span class="line">    majors,</span><br><span class="line">    loadDepartmentMajorData,</span><br><span class="line">    removeInfo</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">persist</span>:<span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>3.修改src&#x2F;views&#x2F;home&#x2F;SearchPart.js的js部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123; useDepartmentMajorStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/departmentMajor&#x27;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">    <span class="comment">// 多选动作面板相关</span></span><br><span class="line">    <span class="keyword">const</span> multiTitle = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> multiSelectOptions = <span class="title function_">ref</span>([]);</span><br><span class="line">    <span class="keyword">const</span> multiSelected = <span class="title function_">ref</span>([]);</span><br><span class="line">    <span class="keyword">const</span> showMultiSelectAction = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> currentMultiSelectType = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);    </span><br><span class="line">    <span class="keyword">const</span> departmentMajorStore = <span class="title function_">useDepartmentMajorStore</span>();  </span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">showInputDialog</span> = (<span class="params">item</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">switch</span>(item.<span class="property">value</span>) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;department&#x27;</span>:</span><br><span class="line">          multiTitle.<span class="property">value</span> = <span class="string">&#x27;请选择院系(可多选)&#x27;</span>;</span><br><span class="line">          currentMultiSelectType.<span class="property">value</span> = <span class="string">&#x27;department&#x27;</span>;</span><br><span class="line">          <span class="comment">//后端获取</span></span><br><span class="line">          multiSelectOptions.<span class="property">value</span> = departmentMajorStore.<span class="property">departments</span>;</span><br><span class="line">          multiSelected.<span class="property">value</span> = [];</span><br><span class="line">          showMultiSelectAction.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;major&#x27;</span>:</span><br><span class="line">          multiTitle.<span class="property">value</span> = <span class="string">&#x27;请选择专业(可多选)&#x27;</span>;</span><br><span class="line">          currentMultiSelectType.<span class="property">value</span> = <span class="string">&#x27;major&#x27;</span>;</span><br><span class="line">          multiSelectOptions.<span class="property">value</span> = departmentMajorStore.<span class="property">majors</span>;</span><br><span class="line">          multiSelected.<span class="property">value</span> = [];</span><br><span class="line">          showMultiSelectAction.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;originpro&#x27;</span>:</span><br><span class="line">        ...</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    **下拉菜单内容渲染：1.从后端获取院系、专业，2.vant4提供的省份数据</span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">    <span class="comment">// 组件挂载时加载院系、专业数据</span></span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      departmentMajorStore.<span class="title function_">loadDepartmentMajorData</span>();</span><br><span class="line">    &#125;); </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ***选中的条件都要加到标签中，添加标签需要先检查有没有已经存在的同类型标签，如果有，更新标签内容，否则直接添加新标签。</span></span><br><span class="line"><span class="comment">    点×移除标签，直接从存标签的数组中删除</span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">    ...</span><br><span class="line">   </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="获取省份信息"><a href="#获取省份信息" class="headerlink" title="获取省份信息"></a>获取省份信息</h3><p>修改src&#x2F;views&#x2F;home&#x2F;SearchPart.js的js部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">...    </span><br><span class="line"><span class="keyword">import</span> &#123; areaList &#125; <span class="keyword">from</span> <span class="string">&#x27;@vant/area-data&#x27;</span>; <span class="comment">// 导入区域数据</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">showInputDialog</span> = (<span class="params">item</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">switch</span>(item.<span class="property">value</span>) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;originpro&#x27;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;nativepro&#x27;</span>:</span><br><span class="line">          <span class="keyword">if</span>(item.<span class="property">value</span> === <span class="string">&#x27;originpro&#x27;</span>)&#123;</span><br><span class="line">            multiTitle.<span class="property">value</span> = <span class="string">&#x27;请选择生源地(可多选)&#x27;</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            multiTitle.<span class="property">value</span> = <span class="string">&#x27;请选择籍贯(可多选)&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          currentMultiSelectType.<span class="property">value</span> = item.<span class="property">value</span>;</span><br><span class="line">          multiSelectOptions.<span class="property">value</span> = <span class="title function_">getProvinces</span>();</span><br><span class="line">          multiSelected.<span class="property">value</span> = [];</span><br><span class="line">          showMultiSelectAction.<span class="property">value</span> = <span class="literal">true</span>; <span class="comment">//展开动作面板</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;  </span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="comment">// 组件挂载时加载院系、专业数据</span></span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      departmentMajorStore.<span class="title function_">loadDepartmentMajorData</span>();</span><br><span class="line">    &#125;); </span><br><span class="line">    <span class="comment">// 获取省份数据</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getProvinces</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (!areaList || !areaList.<span class="property">province_list</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;区域数据加载失败&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(areaList.<span class="property">province_list</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">[code, name]</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">text</span>: name,</span><br><span class="line">        <span class="attr">value</span>: name,</span><br><span class="line">        <span class="attr">code</span>: code</span><br><span class="line">      &#125;));</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ***选中的条件都要加到标签中，添加标签需要先检查有没有已经存在的同类型标签，如果有，更新标签内容，否则直接添加新标签。</span></span><br><span class="line"><span class="comment">    点×移除标签，直接从存标签的数组中删除</span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">    ...</span><br><span class="line">   </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="表格组件界面"><a href="#表格组件界面" class="headerlink" title="表格组件界面"></a>表格组件界面</h2><p>src&#x2F;views&#x2F;home&#x2F;TableChart.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;student-table-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;table-home&quot;&gt;</span><br><span class="line">      &lt;!-- 使用原生table元素 --&gt;</span><br><span class="line">      &lt;table class=&quot;student-table&quot;&gt;</span><br><span class="line">        &lt;thead&gt;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;th v-for=&quot;column in columns&quot; :key=&quot;column.key&quot; </span><br><span class="line">                :class=&quot;&#123; &#x27;sortable&#x27;: column.sortable &#125;&quot;&gt;</span><br><span class="line">              &#123;&#123; column.title &#125;&#125;</span><br><span class="line">            &lt;/th&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">        &lt;/thead&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">          &lt;!-- 内容加载过程中展示一组占位图形 --&gt;</span><br><span class="line">          &lt;tr v-if=&quot;loading&quot;&gt;</span><br><span class="line">            &lt;td colspan=&quot;6&quot;&gt;</span><br><span class="line">              &lt;van-skeleton :row=&quot;pageSize&quot; /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">          &lt;tr v-else v-for=&quot;(row, index) in tableData&quot; :key=&quot;row.id&quot;</span><br><span class="line">              :class=&quot;&#123; &#x27;striped&#x27;: index % 2 === 0 &#125;&quot;&gt;</span><br><span class="line">            &lt;td v-for=&quot;column in columns&quot; :key=&quot;column.key&quot;&gt;</span><br><span class="line">              &lt;template v-if=&quot;column.key === &#x27;action&#x27;&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;action-buttons&quot;&gt;</span><br><span class="line">                  &lt;van-icon name=&quot;eye-o&quot; @click=&quot;showDetail(row)&quot; /&gt;</span><br><span class="line">                  &lt;van-icon name=&quot;edit&quot; @click=&quot;editStudent(row)&quot; /&gt;</span><br><span class="line">                  &lt;van-icon name=&quot;delete-o&quot; @click=&quot;deleteStudent(row)&quot; /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/template&gt;</span><br><span class="line">              &lt;template v-else&gt;</span><br><span class="line">                &#123;&#123; row[column.key] &#125;&#125;</span><br><span class="line">              &lt;/template&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">      &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 分页区域 --&gt;</span><br><span class="line">    &lt;div class=&quot;pagination-container&quot;&gt;</span><br><span class="line">      &lt;van-pagination</span><br><span class="line">        v-model=&quot;currentPage&quot;</span><br><span class="line">        :items-per-page=&quot;pageSize&quot;</span><br><span class="line">        :total-items=&quot;total&quot;</span><br><span class="line">        :show-page-size=&quot;5&quot;</span><br><span class="line">        @change=&quot;handlePageChange&quot;</span><br><span class="line">        class=&quot;pagination&quot;</span><br><span class="line">        force-ellipses</span><br><span class="line">      /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;page-size-selector&quot;&gt;</span><br><span class="line">        &lt;span&gt;每页显示：&lt;/span&gt;</span><br><span class="line">        &lt;van-field</span><br><span class="line">          v-model=&quot;pageSizeInput&quot;</span><br><span class="line">          type=&quot;number&quot;</span><br><span class="line">          placeholder=&quot;输入条数&quot;</span><br><span class="line">          class=&quot;page-size-input&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;van-button </span><br><span class="line">          type=&quot;primary&quot; </span><br><span class="line">          size=&quot;small&quot; </span><br><span class="line">          @click=&quot;handlePageSizeChange&quot;</span><br><span class="line">          class=&quot;confirm-btn&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          确定</span><br><span class="line">        &lt;/van-button&gt;</span><br><span class="line">        &lt;van-dropdown-menu class=&quot;pdf-word&quot; :close-on-click-outside=&quot;true&quot; direction=&quot;up&quot;&gt;</span><br><span class="line">          &lt;van-dropdown-item </span><br><span class="line">            v-model=&quot;dropdownValue&quot; </span><br><span class="line">            :options=&quot;dropdownOptions&quot;</span><br><span class="line">            title=&quot;导出数据&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;template #default&gt;</span><br><span class="line">              &lt;div class=&quot;dropdown-content&quot;&gt;</span><br><span class="line">                &lt;van-cell </span><br><span class="line">                  v-for=&quot;item in conditionItems&quot; </span><br><span class="line">                  :key=&quot;item.value&quot; </span><br><span class="line">                  :title=&quot;item.text&quot;</span><br><span class="line">                  @click=&quot;showInputDialog(item)&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/van-dropdown-item&gt;</span><br><span class="line">        &lt;/van-dropdown-menu&gt;</span><br><span class="line">      &lt;/div&gt;      </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Dialog, Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; getStudents , deleteStu&#125; from &#x27;@/api/student&#x27;;</span><br><span class="line">import router from &#x27;@/router&#x27;;</span><br><span class="line"></span><br><span class="line">// 表头设置，sortable用来做排序，暂时未实现</span><br><span class="line">const columns = [</span><br><span class="line">  &#123; key: &#x27;stuID&#x27;, title: &#x27;学号&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;name&#x27;, title: &#x27;姓名&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;gender&#x27;, title: &#x27;性别&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;department&#x27;, title: &#x27;院系&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;major&#x27;, title: &#x27;专业&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;action&#x27;, title: &#x27;操作&#x27;, sortable: false &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">// 表格数据</span><br><span class="line">const tableData = ref([]);</span><br><span class="line">const loading = ref(false);</span><br><span class="line">const currentPage = ref(1);</span><br><span class="line">const pageSize = ref(10);</span><br><span class="line">const pageSizeInput = ref(10);</span><br><span class="line">const total = ref(0);</span><br><span class="line"></span><br><span class="line">// 处理页码变化</span><br><span class="line">const handlePageChange = (page) =&gt; &#123;</span><br><span class="line">  currentPage.value = page;</span><br><span class="line">  //重新渲染表格  </span><br><span class="line">  fetchData();  </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 用户输入每页显示条数</span><br><span class="line">const handlePageSizeChange = () =&gt; &#123;</span><br><span class="line">  const newSize = parseInt(pageSizeInput.value);</span><br><span class="line">    //获取输入的每页条数后，重新渲染表格，设置每页显示条数，当前页设为第一页</span><br><span class="line">  if (newSize &gt; 0 &amp;&amp; newSize &lt;= 100) &#123;</span><br><span class="line">    pageSize.value = newSize;</span><br><span class="line">    currentPage.value = 1;</span><br><span class="line">    //重新渲染表格</span><br><span class="line">      fetchData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    Toast(&#x27;请输入1-100之间的数字&#x27;);</span><br><span class="line">    pageSizeInput.value = pageSize.value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 从后端获取学生数据,渲染到表格上</span><br><span class="line">const fetchData = () =&gt; &#123;</span><br><span class="line">  console.log(&quot;学生信息&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 显示学生详情</span><br><span class="line">const showDetail = (student) =&gt; &#123;</span><br><span class="line">  console.log(student);</span><br><span class="line">  router.push(&#x27;/edit&#x27;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 编辑学生信息</span><br><span class="line">const editStudent = (student) =&gt; &#123;</span><br><span class="line">  console.log(student);</span><br><span class="line">  router.push(&#x27;/edit&#x27;);//应该还要改isEdit状态</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 删除学生</span><br><span class="line">const deleteStudent = (student) =&gt; &#123;</span><br><span class="line">  console.log(&quot;删除信息&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">    </span><br><span class="line">//打印部分</span><br><span class="line">const dropdownValue = ref(0);</span><br><span class="line">const dropdownOptions = ref([]);</span><br><span class="line">// 下拉菜单栏目内容</span><br><span class="line">const conditionItems = ref([</span><br><span class="line">  &#123; text: &#x27;导出到excel&#x27;, value: &#x27;excel&#x27; &#125;,</span><br><span class="line">  &#123; text: &#x27;导出到word&#x27;, value: &#x27;word&#x27; &#125;,</span><br><span class="line">]);</span><br><span class="line">//打印事件</span><br><span class="line">const showInputDialog = (item) =&gt; &#123;</span><br><span class="line">  if(item.value === &#x27;excel&#x27;)&#123;</span><br><span class="line">    exportToExcel();</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    console.log(&quot;打印word&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//导出到excel</span><br><span class="line">const exportToExcel = () =&gt;&#123;</span><br><span class="line">    console.log(&quot;导出到excel&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.student-table-container &#123;</span><br><span class="line">  margin-bottom: 4rem;</span><br><span class="line">  background-color: #fffffff0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.table-home &#123;</span><br><span class="line">  margin: 0.6rem;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">  border-radius: 8px;</span><br><span class="line">  box-shadow: 3px 2px 12px 2px rgba(0, 0, 0, 0.1);</span><br><span class="line">  overflow-x: auto; /* 允许水平滚动 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 表格样式 */</span><br><span class="line">.student-table &#123;</span><br><span class="line">  width: fit-content; /* 宽度由内容自动撑起 */</span><br><span class="line">  min-width: 100%; /* 至少占满容器宽度 */</span><br><span class="line">  border-collapse: collapse;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 表头样式 */</span><br><span class="line">.student-table th &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  background-color: #f7f8fa;</span><br><span class="line">  border-bottom: 0.2rem solid #ebedf0b1;</span><br><span class="line">  padding: 0.4rem; /* 设置padding为0.4rem */</span><br><span class="line">  text-align: center;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">  white-space: nowrap; /* 防止标题换行 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sortable &#123;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sortable:hover &#123;</span><br><span class="line">  color: #1989fa;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 表格内容样式 */</span><br><span class="line">.student-table td &#123;</span><br><span class="line">  padding: 0.6rem;   </span><br><span class="line">  white-space: nowrap; /* 防止内容换行 */</span><br><span class="line">  overflow: hidden; /* 超出内容隐藏 */</span><br><span class="line">  text-overflow: ellipsis; /* 超出内容显示省略号 */</span><br><span class="line">&#125;</span><br><span class="line">.student-table tr&#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">    border-bottom: 1px solid #f5f5f5da;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.striped &#123;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 操作按钮样式 */</span><br><span class="line">.action-buttons &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-around;</span><br><span class="line">  align-items: center;</span><br><span class="line">  padding: 0.4rem; /* 设置padding为0.4rem */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.action-buttons .van-icon &#123;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  padding: 0 4px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.action-buttons .van-icon:hover &#123;</span><br><span class="line">  color: #1989fa;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 分页样式 */</span><br><span class="line">.pagination-container &#123;</span><br><span class="line">  margin-top: 0.2rem;</span><br><span class="line">  margin: 0.2rem 0.9rem;</span><br><span class="line">  padding: .4rem 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.page-size-selector &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.page-size-selector span &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">  margin-right: 0.4rem;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  color: #646566;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.page-size-selector .page-size-input &#123;</span><br><span class="line">  flex: 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.page-size-selector .confirm-btn &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="在表格中显示学生数据和删除单条信息"><a href="#在表格中显示学生数据和删除单条信息" class="headerlink" title="在表格中显示学生数据和删除单条信息"></a>在表格中显示学生数据和删除单条信息</h2><p>获得和删除学生信息接口：src&#x2F;api&#x2F;student.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&quot;@/utils/request&quot;</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment"> * 获取全部学生信息分页列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; params 查询参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; params.pageNum 当前页码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; params.pageSize 每页条数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getStudents</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/student/conditionSearch&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">pageNum</span>: params.<span class="property">pageNum</span>,</span><br><span class="line">      <span class="attr">pageSize</span>: params.<span class="property">pageSize</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除学生</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">deleteStu</span>(<span class="params">stuID</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/student/deleteStu&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;delete&#x27;</span>,</span><br><span class="line">        <span class="attr">params</span>: &#123; stuID &#125;  <span class="comment">// 这里不能用data，因为后端用@RequestParam接收</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sec&#x2F;views&#x2F;home&#x2F;TableChart.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, onMounted &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Dialog, Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; getStudents , deleteStu&#125; from &#x27;@/api/student&#x27;;</span><br><span class="line">import router from &#x27;@/router&#x27;;</span><br><span class="line"></span><br><span class="line">// 表头设置，sortable用来做排序，暂时未实现</span><br><span class="line">const columns = [</span><br><span class="line">  &#123; key: &#x27;stuID&#x27;, title: &#x27;学号&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;name&#x27;, title: &#x27;姓名&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;gender&#x27;, title: &#x27;性别&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;department&#x27;, title: &#x27;院系&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;major&#x27;, title: &#x27;专业&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;action&#x27;, title: &#x27;操作&#x27;, sortable: false &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">// 表格数据</span><br><span class="line">const tableData = ref([]);</span><br><span class="line">const loading = ref(false);</span><br><span class="line">const currentPage = ref(1);</span><br><span class="line">const pageSize = ref(10);</span><br><span class="line">const pageSizeInput = ref(10);</span><br><span class="line">const total = ref(0);</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">// 从后端获取学生数据</span><br><span class="line">const fetchData = async () =&gt; &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    loading.value = true;</span><br><span class="line">    const response = await getStudents(&#123;</span><br><span class="line">      pageNum: currentPage.value,</span><br><span class="line">      pageSize: pageSize.value,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    if (response.data.code === 0) &#123;</span><br><span class="line">      tableData.value = response.data.data.items || [];</span><br><span class="line">      total.value = response.data.data.total || 0;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      Toast(response.data.message || &#x27;数据加载失败&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    Toast(&#x27;网络请求失败&#x27;);</span><br><span class="line">    console.error(&#x27;Error fetching data:&#x27;, error);</span><br><span class="line">  &#125; finally &#123;</span><br><span class="line">    loading.value = false;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">// 删除学生</span><br><span class="line">const deleteStudent = (student) =&gt; &#123;</span><br><span class="line">  Dialog.confirm(&#123;</span><br><span class="line">    title: &quot;确认删除&quot;,</span><br><span class="line">    message: `确定要删除学生 $&#123;student.name&#125; ($&#123;student.stuID&#125;) 吗？`,</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(async () =&gt; &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      const response = await deleteStu(student.stuID);</span><br><span class="line">      </span><br><span class="line">      if (response.data.code === 0) &#123;</span><br><span class="line">        Toast.success(&#x27;删除成功&#x27;);</span><br><span class="line">        fetchData(); </span><br><span class="line">        </span><br><span class="line">        // 如果当前页数据删空了且不是第一页，则自动返回上一页</span><br><span class="line">        if (tableData.value.length === 1 &amp;&amp; currentPage.value &gt; 1) &#123;</span><br><span class="line">          currentPage.value -= 1;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        Toast.fail(response.message || &#x27;删除失败&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; catch (error) &#123;</span><br><span class="line">      console.error(&#x27;删除失败:&#x27;, error);</span><br><span class="line">      Toast.fail(&#x27;删除请求失败&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(() =&gt; &#123;</span><br><span class="line">    Toast(&#x27;取消&#x27;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 组件挂载时获取数据</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  fetchData();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="使用pinia存当前学生信息-删除"><a href="#使用pinia存当前学生信息-删除" class="headerlink" title="使用pinia存当前学生信息+删除"></a>使用pinia存当前学生信息+删除</h3><blockquote><p>主页表格中点击“查看当前学生详情”按钮图标的时，需要将详细信息传入edit页面。这里先修改主页表格部分，使用pinia来存当前学生信息。</p></blockquote><p>获得带分页、不带分页学生信息以及删除的接口实现src&#x2F;api&#x2F;students.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">//获取所有学生，不带分页，用于edit页查找上、下一个学生</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getAllWithoutPage</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/student/getAllWithoutPage&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在pinia中获得、删除学生：src&#x2F;store&#x2F;student.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getStudents, getAllWithoutPage , deleteStu &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/student&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStudentStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;student&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 当前页学生信息</span></span><br><span class="line">  <span class="keyword">const</span> students = <span class="title function_">ref</span>([]);</span><br><span class="line">  <span class="comment">// 全部学生信息</span></span><br><span class="line">  <span class="keyword">const</span> allStudents = <span class="title function_">ref</span>([]);</span><br><span class="line">  <span class="comment">//当前所在页的页码</span></span><br><span class="line">  <span class="keyword">const</span> currentPage = <span class="title function_">ref</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="comment">//每页应该显示的学生信息条数</span></span><br><span class="line">  <span class="keyword">const</span> pageSize = <span class="title function_">ref</span>(<span class="number">10</span>);</span><br><span class="line">  <span class="comment">//总数据量</span></span><br><span class="line">  <span class="keyword">const</span> total = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="comment">//当前选中的学生</span></span><br><span class="line">  <span class="keyword">const</span> currentStudent = <span class="title function_">ref</span>(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置当前学生</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">setCurrentStudent</span> = (<span class="params">student</span>) =&gt; &#123;</span><br><span class="line">    currentStudent.<span class="property">value</span> = student;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取当前页学生数据</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">fetchStudents</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">getStudents</span>(&#123;</span><br><span class="line">        <span class="attr">pageNum</span>: currentPage.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">pageSize</span>: pageSize.<span class="property">value</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">if</span> (response.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        students.<span class="property">value</span> = response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">items</span> || [];</span><br><span class="line">        total.<span class="property">value</span> = response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">total</span> || <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> response;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error fetching students:&#x27;</span>, error);</span><br><span class="line">      <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取全部学生数据</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">fetchAllStudents</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">getAllWithoutPage</span>();</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span> (response.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        allStudents.<span class="property">value</span> = response.<span class="property">data</span>.<span class="property">data</span> || [];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//console.log(&quot;数组长度&quot;+allStudents.value.length);</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> response;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error fetching all students:&#x27;</span>, error);</span><br><span class="line">      <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除学生（同步更新当前页和全部学生数据）</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">deleteStudent</span> = <span class="keyword">async</span> (<span class="params">studentId</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">deleteStu</span>(studentId);</span><br><span class="line">      <span class="keyword">if</span> (response.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 从当前页数据中移除</span></span><br><span class="line">        students.<span class="property">value</span> = students.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">s</span> =&gt;</span> s.<span class="property">stuID</span> !== studentId);</span><br><span class="line">        <span class="comment">// 从全部数据中移除</span></span><br><span class="line">        allStudents.<span class="property">value</span> = allStudents.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">s</span> =&gt;</span> s.<span class="property">stuID</span> !== studentId);</span><br><span class="line">        total.<span class="property">value</span> -= <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果删除的是当前学生，重置当前学生</span></span><br><span class="line">        <span class="keyword">if</span> (currentStudent.<span class="property">value</span>?.<span class="property">stuID</span> === studentId) &#123;</span><br><span class="line">          currentStudent.<span class="property">value</span> = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> response;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error deleting student:&#x27;</span>, error);</span><br><span class="line">      <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    students,</span><br><span class="line">    currentPage,</span><br><span class="line">    pageSize,</span><br><span class="line">    total,</span><br><span class="line">    currentStudent,</span><br><span class="line">    fetchStudents,</span><br><span class="line">    allStudents,</span><br><span class="line">    deleteStudent,</span><br><span class="line">    setCurrentStudent,  </span><br><span class="line">    fetchAllStudents,</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">persist</span>:<span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="修改表格组件中显示、删除信息部分代码"><a href="#修改表格组件中显示、删除信息部分代码" class="headerlink" title="修改表格组件中显示、删除信息部分代码"></a>修改表格组件中显示、删除信息部分代码</h3><p>src&#x2F;views&#x2F;home&#x2F;TableChart.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, onMounted ,computed , watch&#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Dialog, Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; useStudentStore &#125; from &#x27;@/store/student&#x27;;</span><br><span class="line">import router from &#x27;@/router&#x27;;</span><br><span class="line"></span><br><span class="line">// 表头设置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123; key: &#x27;stuID&#x27;, title: &#x27;学号&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;name&#x27;, title: &#x27;姓名&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;gender&#x27;, title: &#x27;性别&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;department&#x27;, title: &#x27;院系&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;major&#x27;, title: &#x27;专业&#x27;, sortable: true &#125;,</span><br><span class="line">  &#123; key: &#x27;action&#x27;, title: &#x27;操作&#x27;, sortable: false &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">//从store获取学生数据，并且一打开页面就挂载获得数据，然后将数据渲染到表格</span><br><span class="line">//1.刚打开页面，默认一页显示10条，当前页设为第一页。在pinia中已设置，这里直接调用封装的方法。</span><br><span class="line">const loading = ref(false);</span><br><span class="line">const studentStore = useStudentStore();</span><br><span class="line">const fetchData = async () =&gt; &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    loading.value = true;</span><br><span class="line">    await studentStore.fetchStudents();</span><br><span class="line"></span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    Toast(&#x27;数据加载失败&#x27;);</span><br><span class="line">    console.error(&#x27;Error fetching data:&#x27;, error);</span><br><span class="line">  &#125; finally &#123;</span><br><span class="line">    loading.value = false;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  fetchData();</span><br><span class="line">&#125;);</span><br><span class="line">//2.将数据渲染到表格，pinia中的fetchStudents会将数据存到students数组中，这里使用计算属性自动获取</span><br><span class="line">const tableData = computed(() =&gt; studentStore.students);</span><br><span class="line"></span><br><span class="line">//刚打开页面，当前所在页、每页显示条数和实际显示条数都用初始值，在pinia中设置初始值。</span><br><span class="line">//1.无动作，用get方法获取pinia中存的值。如果用户有重新设值、点击页码，用computed的set方法进行更新</span><br><span class="line">const currentPage = computed(&#123;</span><br><span class="line">  get: () =&gt; studentStore.currentPage,</span><br><span class="line">  set: (val) =&gt; &#123; studentStore.currentPage = val; &#125;</span><br><span class="line">&#125;);//当前所在页</span><br><span class="line">const pageSize = computed(&#123;</span><br><span class="line">  get: () =&gt; studentStore.pageSize,</span><br><span class="line">  set: (val) =&gt; &#123; studentStore.pageSize = val; &#125;</span><br><span class="line">&#125;);//每页应该显示的数据条数</span><br><span class="line">const total = computed(() =&gt; studentStore.total); //每页实际显示的数据条数</span><br><span class="line"></span><br><span class="line">//2.用户重新设置每页显示条数</span><br><span class="line">//pageSizeInput初始为pinia中设的每页应该显示条数的初始值。</span><br><span class="line">//用这个双向绑定用户输入的每页显示的条数，然后点击确认，触发事件。</span><br><span class="line">const pageSizeInput = ref(studentStore.pageSize);</span><br><span class="line">const handlePageSizeChange = () =&gt; &#123;</span><br><span class="line">  const newSize = parseInt(pageSizeInput.value);</span><br><span class="line">  if (newSize &gt; 0 &amp;&amp; newSize &lt;= 50) &#123;</span><br><span class="line">    //将新的值存入pinia，当前所在页设为1，重新渲染表格。</span><br><span class="line">    pageSize.value = newSize;</span><br><span class="line">    currentPage.value = 1;</span><br><span class="line">    fetchData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    Toast(&#x27;请输入1-100之间的数字&#x27;);</span><br><span class="line">      //重新显示原本的条数</span><br><span class="line">    pageSizeInput.value = pageSize.value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 监听pageSize变化，自动更新输入框值</span><br><span class="line">watch(() =&gt; studentStore.pageSize, (newVal) =&gt; &#123;</span><br><span class="line">  pageSizeInput.value = newVal;</span><br><span class="line">&#125;);    </span><br><span class="line"></span><br><span class="line">// 用户点击页码，改变当前所在页，渲染新页面的表格数据</span><br><span class="line">const handlePageChange = (page) =&gt; &#123;</span><br><span class="line">  currentPage.value = page;</span><br><span class="line">  fetchData();</span><br><span class="line">&#125;;</span><br><span class="line">    </span><br><span class="line">//显示、编辑、删除学生</span><br><span class="line">// 显示学生详情，将点击的学生设为当前学生，跳转到edit页面。在edit页面，从pinia中获取CurrentStudent，将信息渲染到页面</span><br><span class="line">const showDetail = (student) =&gt; &#123;</span><br><span class="line">  studentStore.setCurrentStudent(student);</span><br><span class="line">  router.push(&#x27;/edit&#x27;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 编辑学生信息</span><br><span class="line">const editStudent = (student) =&gt; &#123;</span><br><span class="line">  studentStore.setCurrentStudent(student);</span><br><span class="line">  router.push(&#x27;/edit&#x27;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 删除学生</span><br><span class="line">const deleteStudent = (student) =&gt; &#123;</span><br><span class="line">  Dialog.confirm(&#123;</span><br><span class="line">    title: &quot;确认删除&quot;,</span><br><span class="line">    message: `确定要删除学生 $&#123;student.name&#125; ($&#123;student.stuID&#125;) 吗？`,</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(async () =&gt; &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      await studentStore.deleteStudent(student.stuID);</span><br><span class="line">      Toast.success(&#x27;删除成功&#x27;);</span><br><span class="line">      </span><br><span class="line">      // 如果当前页数据删空了且不是第一页，则自动返回上一页</span><br><span class="line">      if (tableData.value.length === 0 &amp;&amp; studentStore.currentPage &gt; 1) &#123;</span><br><span class="line">        studentStore.currentPage -= 1;</span><br><span class="line">        fetchData();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; catch (error) &#123;</span><br><span class="line">      console.error(&#x27;删除失败:&#x27;, error);</span><br><span class="line">      Toast.fail(&#x27;删除失败&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(() =&gt; &#123;</span><br><span class="line">    Toast(&#x27;取消&#x27;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="搜索组件-条件检索"><a href="#搜索组件-条件检索" class="headerlink" title="搜索组件-条件检索"></a>搜索组件-条件检索</h2><p>因为条件检索结果还是分页显示到表格中，所以修改条件检索接口：src&#x2F;api&#x2F;student.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment"> * 获取全部学生信息分页列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; params 查询参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; params.pageNum 当前页码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; params.pageSize 每页条数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getStudents</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/student/conditionSearch&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: params.<span class="property">queryDTO</span>, <span class="comment">// 用data发送检索条件请求体</span></span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="comment">//queryDTO: params.queryDTO,</span></span><br><span class="line">      <span class="attr">pageNum</span>: params.<span class="property">pageNum</span>,</span><br><span class="line">      <span class="attr">pageSize</span>: params.<span class="property">pageSize</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改src&#x2F;views&#x2F;home&#x2F;SearchPart.vue的js部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref ,onMounted&#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; areaList &#125; from &#x27;@vant/area-data&#x27;; // 导入区域数据</span><br><span class="line">import &#123; useStudentStore &#125; from &#x27;@/store/student&#x27;;</span><br><span class="line">import &#123; useDepartmentMajorStore &#125; from &#x27;@/store/departmentMajor&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    ...  </span><br><span class="line">    // 移除标签</span><br><span class="line">    const removeTag = async(index) =&gt; &#123;</span><br><span class="line">      selectedTags.value.splice(index, 1);</span><br><span class="line">      if(selectedTags.value.length === 0 &amp;&amp; searchText.value === &#x27;&#x27;)&#123;</span><br><span class="line">        studentStore.lastQuery = null;</span><br><span class="line">        studentStore.currentPage = 1;</span><br><span class="line">        await studentStore.fetchStudents(&#123;&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;  </span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    //将输入框中内容和添加的筛选条件提交到后端</span><br><span class="line">    const searchText = ref(&#x27;&#x27;);</span><br><span class="line">    const buildSearchParams = () =&gt; &#123;</span><br><span class="line">      //const params = &#123;&#125;;</span><br><span class="line">      const params = &#123;</span><br><span class="line">        majors: [],</span><br><span class="line">        departments: [],</span><br><span class="line">        originPros: [],</span><br><span class="line">        nativePros: []</span><br><span class="line">      &#125;;</span><br><span class="line">      </span><br><span class="line">      // 处理搜索框输入</span><br><span class="line">      if (searchText.value) &#123;</span><br><span class="line">          //纯数字为电话或学号</span><br><span class="line">        if (/^\d+$/.test(searchText.value)) &#123;</span><br><span class="line">          searchText.value.length === 11 </span><br><span class="line">            ? params.tel = searchText.value</span><br><span class="line">            : params.stuID = searchText.value;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          params.name = searchText.value;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      // 处理已选择的筛选条件</span><br><span class="line">      selectedTags.value.forEach(tag =&gt; &#123;</span><br><span class="line">        const rawValue = JSON.parse(JSON.stringify(tag.value));</span><br><span class="line">        </span><br><span class="line">        switch(tag.type) &#123;</span><br><span class="line">          case &#x27;idRange&#x27;:</span><br><span class="line">            if (rawValue.min) params.stuIDMin = rawValue.min;</span><br><span class="line">            if (rawValue.max) params.stuIDMax = rawValue.max;</span><br><span class="line">            break;</span><br><span class="line">          case &#x27;sex&#x27;:</span><br><span class="line">            params.gender = rawValue === &#x27;male&#x27; ? &#x27;男&#x27; : &#x27;女&#x27;;</span><br><span class="line">            break;</span><br><span class="line">          case &#x27;birth&#x27;:</span><br><span class="line">            if (rawValue.min) params.birthMin = rawValue.min;</span><br><span class="line">            if (rawValue.max) params.birthMax = rawValue.max;</span><br><span class="line">            break;</span><br><span class="line">          case &#x27;department&#x27;:</span><br><span class="line">            //加个判断是不是数组</span><br><span class="line">            params.departments = Array.isArray(rawValue) ? rawValue : [rawValue];</span><br><span class="line">            break;</span><br><span class="line">          case &#x27;major&#x27;:</span><br><span class="line">            params.majors = Array.isArray(rawValue) ? rawValue : [rawValue];</span><br><span class="line">            break;</span><br><span class="line">          case &#x27;grade&#x27;:</span><br><span class="line">            if (rawValue.min) params.gradeMin = rawValue.min;</span><br><span class="line">            if (rawValue.max) params.gradeMax = rawValue.max;</span><br><span class="line">            break;</span><br><span class="line">          case &#x27;originpro&#x27;:</span><br><span class="line">            params.originPros = Array.isArray(rawValue) ? rawValue : [rawValue];</span><br><span class="line">            break;</span><br><span class="line">          case &#x27;nativepro&#x27;:</span><br><span class="line">            params.nativePros = Array.isArray(rawValue) ? rawValue : [rawValue];</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  </span><br><span class="line">      // 移除空数组</span><br><span class="line">      Object.keys(params).forEach(key =&gt; &#123;</span><br><span class="line">        if (Array.isArray(params[key]) &amp;&amp; params[key].length === 0) &#123;</span><br><span class="line">          delete params[key];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      //console.log(&#x27;构建的参数对象:&#x27;, JSON.parse(JSON.stringify(params)));</span><br><span class="line">      return params;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 搜索处理</span><br><span class="line">    const studentStore = useStudentStore();</span><br><span class="line">    const handleSearch = async () =&gt; &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">          //构建参数</span><br><span class="line">        const searchParams = buildSearchParams();</span><br><span class="line">        // 重置到第一页</span><br><span class="line">        studentStore.currentPage = 1</span><br><span class="line">        await studentStore.fetchStudents(searchParams);</span><br><span class="line">        Toast(&#x27;搜索成功&#x27;);</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        console.error(&#x27;完整错误:&#x27;, error.response?.data || error.message);</span><br><span class="line">        Toast.fail(error.response?.data?.message || &#x27;搜索失败&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    //重置条件</span><br><span class="line">    const SearchClear = async () =&gt; &#123;</span><br><span class="line">      searchText.value = &#x27;&#x27;;</span><br><span class="line">      selectedTags.value = [];</span><br><span class="line">      try &#123;</span><br><span class="line">        // 清除查询条件</span><br><span class="line">        studentStore.lastQuery = null;</span><br><span class="line">        studentStore.currentPage = 1;</span><br><span class="line">        await studentStore.fetchStudents(&#123;&#125;);</span><br><span class="line">        Toast(&#x27;已重置&#x27;);</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        Toast.fail(&#x27;重置失败&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">        //重置条件</span><br><span class="line">    const SearchClear = async () =&gt; &#123;</span><br><span class="line">      searchText.value = &#x27;&#x27;;</span><br><span class="line">      selectedTags.value = [];</span><br><span class="line">      try &#123;</span><br><span class="line">        // 清除查询条件</span><br><span class="line">        studentStore.lastQuery = null;</span><br><span class="line">        studentStore.currentPage = 1;</span><br><span class="line">        await studentStore.fetchStudents(&#123;&#125;);</span><br><span class="line">        Toast(&#x27;已重置&#x27;);</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        Toast.fail(&#x27;重置失败&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;  </span><br><span class="line">        </span><br><span class="line">    return &#123;</span><br><span class="line">      searchText,</span><br><span class="line">      conditionItems,</span><br><span class="line">      selectedTags,</span><br><span class="line">      showRangeDialog,</span><br><span class="line">      rangeMin,</span><br><span class="line">      rangeMax,</span><br><span class="line">      showSexAction,</span><br><span class="line">      sexActions,</span><br><span class="line">      showMultiSelectAction,</span><br><span class="line">      multiSelectOptions,</span><br><span class="line">      multiSelected,</span><br><span class="line">      showInputDialog,</span><br><span class="line">      confirmRange,</span><br><span class="line">      onSexSelect,</span><br><span class="line">      toggle,</span><br><span class="line">      confirmMultiSelect,</span><br><span class="line">      removeTag,</span><br><span class="line">      handleSearch,</span><br><span class="line">      idGrade,</span><br><span class="line">      multiTitle,</span><br><span class="line">      SearchClear,</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">/* styles/search.css */</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>修改pinia：src&#x2F;store&#x2F;student.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  <span class="comment">//存最后一次查询条件</span></span><br><span class="line">  <span class="keyword">const</span> lastQuery = <span class="title function_">ref</span>(<span class="literal">null</span>) </span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取当前页学生数据</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">fetchStudents</span> = <span class="keyword">async</span> (<span class="params">queryDTO = &#123;&#125;</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (queryDTO) &#123;<span class="comment">//深拷贝一下</span></span><br><span class="line">        lastQuery.<span class="property">value</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(queryDTO))</span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">getStudents</span>(&#123;</span><br><span class="line">        <span class="attr">queryDTO</span>: queryDTO,</span><br><span class="line">        <span class="attr">pageNum</span>: currentPage.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">pageSize</span>: pageSize.<span class="property">value</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">if</span> (response.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        students.<span class="property">value</span> = response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">items</span> || [];</span><br><span class="line">        total.<span class="property">value</span> = response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">total</span> || <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> response;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error fetching students:&#x27;</span>, error);</span><br><span class="line">      <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="修复一刷新、跳转回主界面条件筛选标签消失问题"><a href="#修复一刷新、跳转回主界面条件筛选标签消失问题" class="headerlink" title="修复一刷新、跳转回主界面条件筛选标签消失问题*"></a>修复一刷新、跳转回主界面条件筛选标签消失问题*</h3><h2 id="导出到excel"><a href="#导出到excel" class="headerlink" title="导出到excel"></a>导出到excel</h2><p>下载导出到excel的库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install xlsx</span><br></pre></td></tr></table></figure><p>修改TableChart中js部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印事件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">showInputDialog</span> = (<span class="params">item</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span>(item.<span class="property">value</span> === <span class="string">&#x27;excel&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_">exportToExcel</span>();</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;打印word&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入导出Excel所需的库</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">XLSX</span> <span class="keyword">from</span> <span class="string">&#x27;xlsx&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">exportToExcel</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="title class_">Toast</span>.<span class="title function_">loading</span>(&#123;</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;正在导出数据...&#x27;</span>,</span><br><span class="line">      <span class="attr">forbidClick</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">0</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存当前状态</span></span><br><span class="line">    <span class="keyword">const</span> originalPage = studentStore.<span class="property">currentPage</span>;</span><br><span class="line">    <span class="keyword">const</span> originalPageSize = studentStore.<span class="property">pageSize</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(originalPageSize);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取第一页数据以确定总条数</span></span><br><span class="line">    studentStore.<span class="property">pageSize</span> = <span class="number">50</span>; <span class="comment">// 每次获取50条</span></span><br><span class="line">    studentStore.<span class="property">currentPage</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> response = <span class="keyword">await</span> studentStore.<span class="title function_">fetchStudents</span>(studentStore.<span class="property">lastQuery</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!response.<span class="property">data</span>.<span class="property">data</span>?.<span class="property">items</span> || response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">items</span>.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="title class_">Toast</span>.<span class="title function_">clear</span>();</span><br><span class="line">      <span class="title class_">Toast</span>(<span class="string">&#x27;没有数据可导出&#x27;</span>);</span><br><span class="line">      studentStore.<span class="property">pageSize</span> = originalPageSize;</span><br><span class="line">      studentStore.<span class="property">currentPage</span> = originalPage;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> total = response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">total</span>;</span><br><span class="line">    <span class="keyword">let</span> allStudents = [...response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">items</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算需要获取的页数</span></span><br><span class="line">    <span class="keyword">const</span> totalPages = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(total / pageSize.<span class="property">value</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 分批获取剩余数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> page = <span class="number">2</span>; page &lt;= totalPages; page++) &#123;</span><br><span class="line">      currentPage.<span class="property">value</span> = page;</span><br><span class="line">      response = <span class="keyword">await</span> studentStore.<span class="title function_">fetchStudents</span>(studentStore.<span class="property">lastQuery</span>);</span><br><span class="line">      allStudents = [...allStudents, ...response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">items</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 准备Excel数据</span></span><br><span class="line">    <span class="keyword">const</span> excelData = allStudents.<span class="title function_">map</span>(<span class="function"><span class="params">student</span> =&gt;</span> (&#123;</span><br><span class="line">      学号: student.<span class="property">stuID</span>,</span><br><span class="line">      姓名: student.<span class="property">name</span>,</span><br><span class="line">      性别: student.<span class="property">gender</span>,</span><br><span class="line">      院系: student.<span class="property">department</span>,</span><br><span class="line">      专业: student.<span class="property">major</span>,</span><br><span class="line">      电话: student.<span class="property">tel</span>,</span><br><span class="line">      入学分数: student.<span class="property">grade</span>,</span><br><span class="line">      出生年月: student.<span class="property">birth</span>,</span><br><span class="line">      生源地: student.<span class="property">originPro</span>,</span><br><span class="line">      籍贯: student.<span class="property">nativePro</span>,</span><br><span class="line">      简介: student.<span class="property">profile</span></span><br><span class="line">    &#125;));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建工作表</span></span><br><span class="line">    <span class="keyword">const</span> worksheet = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">json_to_sheet</span>(excelData);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建工作簿</span></span><br><span class="line">    <span class="keyword">const</span> workbook = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>();</span><br><span class="line">    <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_append_sheet</span>(workbook, worksheet, <span class="string">&quot;学生数据&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 生成Excel文件并下载</span></span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">const</span> fileName = <span class="string">`学生数据_<span class="subst">$&#123;date.getFullYear()&#125;</span><span class="subst">$&#123;(date.getMonth()+<span class="number">1</span>).toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span><span class="subst">$&#123;date.getDate().toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>.xlsx`</span>;</span><br><span class="line">    <span class="variable constant_">XLSX</span>.<span class="title function_">writeFile</span>(workbook, fileName);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 恢复原始状态</span></span><br><span class="line">    studentStore.<span class="property">pageSize</span> = originalPageSize;</span><br><span class="line">    studentStore.<span class="property">currentPage</span> = originalPage;</span><br><span class="line">    <span class="keyword">await</span> studentStore.<span class="title function_">fetchStudents</span>(studentStore.<span class="property">lastQuery</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">Toast</span>.<span class="title function_">clear</span>();</span><br><span class="line">    <span class="title class_">Toast</span>.<span class="title function_">success</span>(<span class="string">`导出成功，共<span class="subst">$&#123;total&#125;</span>条数据`</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;导出失败:&#x27;</span>, error);</span><br><span class="line">    <span class="title class_">Toast</span>.<span class="title function_">clear</span>();</span><br><span class="line">    <span class="title class_">Toast</span>.<span class="title function_">fail</span>(<span class="string">&#x27;导出失败&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="10-学生信息编辑"><a href="#10-学生信息编辑" class="headerlink" title="10.学生信息编辑"></a>10.学生信息编辑</h1><h2 id="edit页面"><a href="#edit页面" class="headerlink" title="edit页面"></a>edit页面</h2><h3 id="删除、查找上下一个学生"><a href="#删除、查找上下一个学生" class="headerlink" title="删除、查找上下一个学生"></a>删除、查找上下一个学生</h3><blockquote><p>界面+找“首个、末尾、上一个、下一个”学生+删除学生</p><p>这里学生信息studentData用计算属性（<code>computed</code>）的响应式依赖，这样只要studentData一变就可以立即重新渲染界面上的数据</p><p>在首页渲染表格的时候就在pinia中写了获取所有学生信息，这里直接用就行。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;editPage&quot;&gt;</span><br><span class="line">&lt;!-- 顶部栏 --&gt;</span><br><span class="line">  &lt;div class=&quot;top-bar&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;label&quot;&gt;学籍卡&lt;/span&gt;</span><br><span class="line">    &lt;van-dropdown-menu class=&quot;pdf-word&quot; :close-on-click-outside=&quot;true&quot;&gt;</span><br><span class="line">      &lt;van-dropdown-item </span><br><span class="line">        v-model=&quot;dropdownValue&quot; </span><br><span class="line">        :options=&quot;dropdownOptions&quot;</span><br><span class="line">        title=&quot;打印和导出&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;template #default&gt;</span><br><span class="line">          &lt;div class=&quot;dropdown-content&quot;&gt;</span><br><span class="line">            &lt;van-cell </span><br><span class="line">              v-for=&quot;item in conditionItems&quot; </span><br><span class="line">              :key=&quot;item.value&quot; </span><br><span class="line">              :title=&quot;item.text&quot;</span><br><span class="line">              @click=&quot;showInputDialog(item)&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/van-dropdown-item&gt;</span><br><span class="line">    &lt;/van-dropdown-menu&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;stu-card </span><br><span class="line">    :student-data=&quot;studentData&quot;</span><br><span class="line">    :is-editable=&quot;isEditable&quot;</span><br><span class="line">  /&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 学生卡下方的操作按钮 --&gt;</span><br><span class="line">  &lt;div class=&quot;all-btn&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;btn-operat&quot;&gt;</span><br><span class="line">    &lt;van-button @click=&quot;onFirst&quot;&gt;首页&lt;/van-button&gt;</span><br><span class="line">    &lt;van-button icon=&quot;arrow-left&quot; @click=&quot;onPrevious&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card-actions&quot;&gt;</span><br><span class="line">      &lt;van-icon name=&quot;edit&quot; @click=&quot;onEdit&quot; size= &quot;2.3rem&quot;/&gt;</span><br><span class="line">      &lt;van-icon name=&quot;add-o&quot; @click=&quot;onAdd&quot; size= &quot;2.3rem&quot;/&gt;</span><br><span class="line">      &lt;van-icon name=&quot;delete-o&quot; @click=&quot;onDelete&quot; size= &quot;2.3rem&quot;/&gt;      </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;van-button icon=&quot;arrow&quot; @click=&quot;onNext&quot; /&gt;</span><br><span class="line">    &lt;van-button @click=&quot;onLast&quot;&gt;尾页&lt;/van-button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;van-button </span><br><span class="line">      class=&quot;confirm&quot;</span><br><span class="line">      type=&quot;primary&quot; </span><br><span class="line">      :disabled=&quot;!isConfirmEnabled&quot; </span><br><span class="line">      @click=&quot;onConfirm&quot;&gt;确认&lt;/van-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import StuCard from &#x27;./StuCard.vue&#x27;;</span><br><span class="line">import &#123; ref, computed ,onMounted&#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123;Toast ,Dialog&#125; from &#x27;vant&#x27;</span><br><span class="line">import &#123; useStudentStore &#125; from &#x27;@/store/student&#x27;;</span><br><span class="line">import &#123; findStudentIndex &#125; from &#x27;@/utils/studentIndex&#x27;;</span><br><span class="line">import router from &#x27;@/router&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    StuCard,</span><br><span class="line">  &#125;,</span><br><span class="line">  setup() &#123;  </span><br><span class="line">    //打印部分</span><br><span class="line">    const dropdownValue = ref(0);</span><br><span class="line">    const dropdownOptions = ref([]);</span><br><span class="line">    // 下拉菜单栏目内容</span><br><span class="line">    const conditionItems = ref([</span><br><span class="line">      &#123; text: &#x27;打印到pdf&#x27;, value: &#x27;pdf&#x27; &#125;,</span><br><span class="line">      &#123; text: &#x27;导出为word&#x27;, value: &#x27;word&#x27; &#125;,</span><br><span class="line">    ]);</span><br><span class="line">    //打印事件</span><br><span class="line">    const showInputDialog = (item) =&gt; &#123;</span><br><span class="line">      if(item.value === &#x27;pdf&#x27;)&#123;</span><br><span class="line">        console.log(&quot;打印pdf&quot;);</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">        console.log(&quot;打印word&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line">    //1.直接点击edit随机显示一个学生，这时候可能没有当前学生，那就从所有学生中随机找一个设为当前学生。2.从表格的查看详情点击跳转过来显示这个学生的信息，也就是pinia中存的当前学生。</span><br><span class="line">    //所以挂载的时候先调用fetchAllStudents方法获取所有学生信息等后面用   </span><br><span class="line">    onMounted(async () =&gt; &#123;      </span><br><span class="line">      // 仅在未加载数据时请求所有信息</span><br><span class="line">      if (studentStore.allStudents.length === 0) &#123;</span><br><span class="line">        await studentStore.fetchAllStudents();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    //将需要渲染的学生信息存到studentData里面</span><br><span class="line">    //通过给封装的学籍卡stu-card 组件绑定一个:student-data=&quot;studentData&quot;传到组件里面进行渲染</span><br><span class="line">    const studentStore = useStudentStore();</span><br><span class="line">    </span><br><span class="line">    const studentData = computed(() =&gt; &#123;</span><br><span class="line">      if (!studentStore.currentStudent) &#123;</span><br><span class="line">        // 如果没有当前学生，随机选择一个学生渲染</span><br><span class="line">        if (studentStore.allStudents.length &gt; 0) &#123;</span><br><span class="line">          const randomIndex = Math.floor(Math.random() * studentStore.allStudents.length);</span><br><span class="line">          studentStore.setCurrentStudent(studentStore.allStudents[randomIndex]);//给这个学生设为当前学生</span><br><span class="line">          return mapToStuCardData(studentStore.allStudents[randomIndex]);</span><br><span class="line">        &#125;</span><br><span class="line">        return &#123;&#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      //渲染到组件上</span><br><span class="line">      return mapToStuCardData(studentStore.currentStudent);</span><br><span class="line">    &#125;);</span><br><span class="line">     // 将表格数据映射到学籍卡数据格式</span><br><span class="line">    const mapToStuCardData = (student) =&gt; &#123;</span><br><span class="line">      //console.log(JSON.stringify(student));</span><br><span class="line">      return &#123;</span><br><span class="line">        name: student.name || &#x27;&#x27;,</span><br><span class="line">        photo: student.img || &#x27;&#x27;,</span><br><span class="line">        gender: student.gender || &#x27;&#x27;,</span><br><span class="line">        tel: student.tel || &#x27;&#x27;,</span><br><span class="line">        studentId: student.stuID || &#x27;&#x27;,</span><br><span class="line">        department: student.department || &#x27;&#x27;,</span><br><span class="line">        major: student.major || &#x27;&#x27;,</span><br><span class="line">        entranceScore: student.grade || &#x27;&#x27;,</span><br><span class="line">        birthDate: student.birth || &#x27;&#x27;,</span><br><span class="line">        hometown: student.originPro || &#x27;&#x27;,</span><br><span class="line">        nativePlace: student.nativePro || &#x27;&#x27;,</span><br><span class="line">        introduction: student.introduction || &#x27;&#x27;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">      </span><br><span class="line">    //offset表示哪种查找操作,1next,-1preview,-2first,2last.currentStudent表示当前学生信息</span><br><span class="line">    const getAdjacentStudent = (offset,currentStudent) =&gt; &#123;</span><br><span class="line">      const currentIndex = findStudentIndex(studentStore.allStudents , currentStudent.stuID);</span><br><span class="line">      //如果不存在当前学生、或者就没有学生数据的话，返回null</span><br><span class="line">      // if (!studentStore.currentStudent || !currentIndex)&#123;</span><br><span class="line">      //   Toast(&quot;不存在当前学生&quot;);</span><br><span class="line">      //   return null;</span><br><span class="line">      // &#125;</span><br><span class="line">              </span><br><span class="line">      const LastIndex = studentStore.allStudents.length-1;    </span><br><span class="line">      if ((currentIndex === 0 &amp;&amp; offset &lt; 0) || (currentIndex === LastIndex &amp;&amp; offset &gt; 0)) &#123;</span><br><span class="line">          Toast(offset &gt; 0 ? &#x27;已是最后一个学生&#x27; : &#x27;已是第一个学生&#x27;);</span><br><span class="line">          return null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      let targetIndex;</span><br><span class="line">      if (offset === -2) targetIndex = 0; // 首页</span><br><span class="line">      else if (offset === 2) targetIndex = LastIndex; // 尾页</span><br><span class="line">      else targetIndex = currentIndex + offset;     // 上一个/下一个</span><br><span class="line"></span><br><span class="line">      const aimStudent = studentStore.allStudents[targetIndex];</span><br><span class="line">      studentStore.setCurrentStudent(aimStudent);</span><br><span class="line">      //console.log(&quot;currentStudent=== &quot;+studentStore.currentStudent.stuID);</span><br><span class="line">      return aimStudent;     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //上一个学生  </span><br><span class="line">    const onPrevious = async () =&gt; &#123;  </span><br><span class="line">      getAdjacentStudent(-1,studentStore.currentStudent);</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    //下一个学生</span><br><span class="line">    const onNext = async () =&gt; &#123;</span><br><span class="line">      getAdjacentStudent(1,studentStore.currentStudent);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    //第一个学生</span><br><span class="line">    const onFirst = async() =&gt; &#123;</span><br><span class="line">      getAdjacentStudent(-2,studentStore.currentStudent);</span><br><span class="line">    &#125;;</span><br><span class="line">    //最后一个学生</span><br><span class="line">    const onLast = async() =&gt; &#123;</span><br><span class="line">      getAdjacentStudent(2,studentStore.currentStudent);</span><br><span class="line">    &#125;; </span><br><span class="line">      </span><br><span class="line">    //操作学生信息部分</span><br><span class="line">    //编辑学生信息*</span><br><span class="line">    const isEditable = ref(false);</span><br><span class="line">    const isConfirmEnabled = ref(false);</span><br><span class="line">    const onEdit = () =&gt; &#123;</span><br><span class="line">      isEditable.value = true;</span><br><span class="line">      isConfirmEnabled.value = true;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    //点击确认</span><br><span class="line">    const onConfirm = () =&gt; &#123;&#125;;</span><br><span class="line">      </span><br><span class="line">    //新增学生</span><br><span class="line">    const onAdd = () =&gt; &#123;</span><br><span class="line">      //router.push(&#x27;/AddStu&#x27;);</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    //删除学生</span><br><span class="line">    const onDelete = async () =&gt; &#123;</span><br><span class="line">      if (!studentStore.currentStudent) &#123;</span><br><span class="line">        console.log(&quot;nocurrentStudent&quot;);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">        </span><br><span class="line">      Dialog.confirm(&#123;</span><br><span class="line">        title: &quot;确认删除&quot;,</span><br><span class="line">        message: `确定要删除学生 $&#123;studentStore.currentStudent.name&#125; ($&#123;studentStore.currentStudent.stuID&#125;) 吗？`,</span><br><span class="line">      &#125;)</span><br><span class="line">      .then(async () =&gt; &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">          await studentStore.deleteStudent(studentStore.currentStudent.stuID);</span><br><span class="line">          Toast.success(&#x27;删除成功&#x27;);</span><br><span class="line">        &#125; catch (error) &#123;</span><br><span class="line">          console.error(&#x27;删除失败:&#x27;, error);</span><br><span class="line">          Toast.fail(&#x27;删除失败&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(() =&gt; &#123;</span><br><span class="line">        Toast(&#x27;取消&#x27;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;  </span><br><span class="line">    </span><br><span class="line">    return &#123;</span><br><span class="line">      dropdownValue,</span><br><span class="line">      dropdownOptions,</span><br><span class="line">      conditionItems,</span><br><span class="line">      studentData,</span><br><span class="line">      isEditable,</span><br><span class="line">      isConfirmEnabled,</span><br><span class="line">      showInputDialog,</span><br><span class="line">      onDelete,</span><br><span class="line">      onFirst,</span><br><span class="line">      onPrevious,</span><br><span class="line">      onNext,</span><br><span class="line">      onLast,</span><br><span class="line">      onEdit,</span><br><span class="line">      onAdd,</span><br><span class="line">      onConfirm</span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.editPage&#123;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  background-color: #d8d3d3d1;</span><br><span class="line">&#125;</span><br><span class="line">.top-bar&#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  align-items: center;</span><br><span class="line">  padding: .5rem 1rem .4rem 1rem;</span><br><span class="line">  margin-bottom: .6rem;</span><br><span class="line">  background-color: white;</span><br><span class="line">&#125;</span><br><span class="line">.label &#123;</span><br><span class="line">  font-size: 0.9rem;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">.pdf-word&#123;</span><br><span class="line">    margin-left: .6rem;</span><br><span class="line">    padding: 0rem .8rem;</span><br><span class="line">    flex: 1;</span><br><span class="line">    width: 40%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.all-btn&#123;</span><br><span class="line">  margin:.6rem 0 3rem 0;</span><br><span class="line">  padding: .4rem .6rem;</span><br><span class="line">  background-color: white;</span><br><span class="line">&#125;</span><br><span class="line">.btn-operat&#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">.btn-operat .card-actions&#123;</span><br><span class="line">  width: 40%;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  align-items: center;</span><br><span class="line">  padding: .2rem .6rem;</span><br><span class="line">&#125;</span><br><span class="line">.confirm&#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  margin-top: .6rem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="edit-新增学生"><a href="#edit-新增学生" class="headerlink" title="edit-新增学生"></a>edit-新增学生</h3><p>在路由文件中加一个路由.src&#x2F;router&#x2F;index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...,&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/AddStu&quot;</span> ,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;AddStu&#x27;</span> ,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span> (<span class="string">&quot;../views/edit/AddStu.vue&quot;</span>),</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>修改edit页面中新增事件，跳到addStu页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">//新增学生</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">onAdd</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&#x27;/AddStu&#x27;</span>);</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>新增学生页面</p><p>点击添加的学生信息中，院系专业信息从数据库获取。接口文件src&#x2F;api&#x2F;departmajor.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取权限范围内的院系-专业组合</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getCombinations</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/departMajor/DepartAndMajor&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点击提交学生信息接口src&#x2F;api&#x2F;student.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增学生</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">addStudent</span>(<span class="params">studentData</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/student&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: studentData</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>src&#x2F;views&#x2F;AddStu.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;add-student-page&quot;&gt;</span><br><span class="line">    &lt;!-- 顶部导航栏 --&gt;</span><br><span class="line">    &lt;van-nav-bar</span><br><span class="line">      title=&quot;填写学生信息&quot;</span><br><span class="line">      left-text=&quot;返回&quot;</span><br><span class="line">      left-arrow</span><br><span class="line">      @click-left=&quot;handleBack&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 表单区域 --&gt;</span><br><span class="line">    &lt;van-form @submit=&quot;handleSubmit&quot; class=&quot;student-form&quot;&gt;</span><br><span class="line">        &lt;!-- 头像上传 --&gt;</span><br><span class="line">        &lt;van-cell title=&quot;头像&quot; is-link @click=&quot;showImagePicker = true&quot;&gt;</span><br><span class="line">            &lt;template #default&gt;</span><br><span class="line">            &lt;van-image</span><br><span class="line">                round</span><br><span class="line">                width=&quot;60&quot;</span><br><span class="line">                height=&quot;60&quot;</span><br><span class="line">                :src=&quot;formData.img&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/van-cell&gt;</span><br><span class="line">        &lt;!-- 头像选择器弹窗 --&gt;</span><br><span class="line">        &lt;van-popup v-model:show=&quot;showImagePicker&quot; round&gt;</span><br><span class="line">            &lt;van-uploader</span><br><span class="line">                v-model=&quot;imageList&quot;</span><br><span class="line">                :max-count=&quot;1&quot;</span><br><span class="line">                :after-read=&quot;afterRead&quot;</span><br><span class="line">                :preview-image=&quot;false&quot;</span><br><span class="line">                capture=&quot;camera&quot;</span><br><span class="line">            &gt;</span><br><span class="line">            &lt;/van-uploader&gt;</span><br><span class="line">        &lt;/van-popup&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 姓名 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.name&quot;</span><br><span class="line">        label=&quot;姓名&quot;</span><br><span class="line">        placeholder=&quot;请输入学生姓名&quot;</span><br><span class="line">        :rules=&quot;[&#123; required: true, message: &#x27;请输入姓名&#x27; &#125;]&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 学号 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.stuID&quot;</span><br><span class="line">        label=&quot;学号&quot;</span><br><span class="line">        placeholder=&quot;请输入学号&quot;</span><br><span class="line">        :rules=&quot;[&#123; required: true, message: &#x27;请输入学号&#x27; &#125;]&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 性别选择 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.gender&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;性别&quot;</span><br><span class="line">        placeholder=&quot;请选择性别&quot;</span><br><span class="line">        @click=&quot;showGenderPicker = true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 电话 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.tel&quot;</span><br><span class="line">        label=&quot;电话&quot;</span><br><span class="line">        placeholder=&quot;请输入电话号码&quot;</span><br><span class="line">        :rules=&quot;[&#123; pattern: /^1[3-9]\d&#123;9&#125;$/, message: &#x27;请输入正确的手机号&#x27; &#125;]&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 专业和院系选择 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;departAndmajor&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;专业和院系&quot;</span><br><span class="line">        placeholder=&quot;请选择专业和院系&quot;</span><br><span class="line">        @click=&quot;showMajorDepartmentPicker = true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 入学分数 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.grade&quot;</span><br><span class="line">        label=&quot;入学分数&quot;</span><br><span class="line">        placeholder=&quot;请输入入学分数&quot;</span><br><span class="line">        type=&quot;number&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 出生年月选择 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.birth&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;出生年月&quot;</span><br><span class="line">        placeholder=&quot;请选择出生年月&quot;</span><br><span class="line">        @click=&quot;showBirthDateCalendar = true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 生源地选择 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.originPro&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;生源地&quot;</span><br><span class="line">        placeholder=&quot;请选择生源地&quot;</span><br><span class="line">        @click=&quot;showHometownPicker = true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 籍贯选择 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.nativePro&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;籍贯&quot;</span><br><span class="line">        placeholder=&quot;请选择籍贯&quot;</span><br><span class="line">        @click=&quot;showNativePlacePicker = true&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 简介 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.profile&quot;</span><br><span class="line">        label=&quot;简介&quot;</span><br><span class="line">        type=&quot;textarea&quot;</span><br><span class="line">        autosize</span><br><span class="line">        placeholder=&quot;请输入学生简介&quot;</span><br><span class="line">        rows=&quot;3&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 提交按钮 --&gt;</span><br><span class="line">      &lt;div class=&quot;submit-button&quot;&gt;</span><br><span class="line">        &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;</span><br><span class="line">          提交</span><br><span class="line">        &lt;/van-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/van-form&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 性别选择器 --&gt;</span><br><span class="line">    &lt;van-action-sheet</span><br><span class="line">      v-model:show=&quot;showGenderPicker&quot;</span><br><span class="line">      :actions=&quot;genderActions&quot;</span><br><span class="line">      @select=&quot;onGenderSelect&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 专业和院系级联选择器 --&gt;</span><br><span class="line">    &lt;van-popup v-model:show=&quot;showMajorDepartmentPicker&quot; position=&quot;bottom&quot;&gt;</span><br><span class="line">      &lt;van-cascader</span><br><span class="line">        v-if=&quot;showMajorDepartmentPicker&quot;</span><br><span class="line">        :options=&quot;majorDepartmentOptions&quot;</span><br><span class="line">        @finish=&quot;onMajorDepartmentFinish&quot;</span><br><span class="line">        @close=&quot;showMajorDepartmentPicker = false&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-popup&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 出生年月日历选择器 --&gt;</span><br><span class="line">    &lt;van-popup v-model:show=&quot;showBirthDateCalendar&quot; position=&quot;bottom&quot;&gt;  </span><br><span class="line">        &lt;van-calendar</span><br><span class="line">            v-model:show=&quot;showBirthDateCalendar&quot;</span><br><span class="line">            type=&quot;single&quot;</span><br><span class="line">            :min-date=&quot;minDate&quot;</span><br><span class="line">            :max-date=&quot;maxDate&quot;</span><br><span class="line">            :default-date=&quot;defaultDate&quot;</span><br><span class="line">            @confirm=&quot;onBirthDateConfirm&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">    &lt;/van-popup&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 生源地选择器 --&gt;</span><br><span class="line">    &lt;van-popup v-model:show=&quot;showHometownPicker&quot; position=&quot;bottom&quot;&gt;</span><br><span class="line">      &lt;van-cascader</span><br><span class="line">        v-if=&quot;showHometownPicker&quot;</span><br><span class="line">        :options=&quot;provinceOptions&quot;</span><br><span class="line">        @finish=&quot;onHometownFinish&quot;</span><br><span class="line">        @close=&quot;showHometownPicker = false&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-popup&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 籍贯选择器 --&gt;</span><br><span class="line">    &lt;van-popup v-model:show=&quot;showNativePlacePicker&quot; position=&quot;bottom&quot;&gt;</span><br><span class="line">      &lt;van-cascader</span><br><span class="line">        v-if=&quot;showNativePlacePicker&quot;</span><br><span class="line">        :options=&quot;provinceOptions&quot;</span><br><span class="line">        @finish=&quot;onNativePlaceFinish&quot;</span><br><span class="line">        @close=&quot;showNativePlacePicker = false&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-popup&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref, onMounted &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;;</span><br><span class="line">import &#123; areaList &#125; from &#x27;@vant/area-data&#x27;;</span><br><span class="line">import &#123; Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; getCombinations &#125; from &#x27;@/api/departmajor&#x27;;</span><br><span class="line">import &#123; addStudent &#125; from &#x27;@/api/student&#x27;</span><br><span class="line">import &#123; useStudentStore &#125; from &#x27;@/store/student&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    const router = useRouter();</span><br><span class="line">    // 返回按钮事件</span><br><span class="line">    const handleBack = () =&gt; &#123;</span><br><span class="line">      router.back();</span><br><span class="line">    &#125;;  </span><br><span class="line">    // 存用户填的表单数据，后面交给后端，和后端字段保持一致。   </span><br><span class="line">    const formData = ref(&#123;</span><br><span class="line">        stuID: &#x27;&#x27;,</span><br><span class="line">        name: &#x27;&#x27;,</span><br><span class="line">        gender: &#x27;&#x27;,</span><br><span class="line">        originPro: &#x27;&#x27;,</span><br><span class="line">        nativePro: &#x27;&#x27;,</span><br><span class="line">        birth: &#x27;&#x27;,</span><br><span class="line">        major: &#x27;&#x27;,</span><br><span class="line">        department: &#x27;&#x27;,</span><br><span class="line">        grade: &#x27;&#x27;,</span><br><span class="line">        tel: &#x27;&#x27;,</span><br><span class="line">        img: &#x27;&#x27;,</span><br><span class="line">        profile: &#x27;&#x27;,</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    //cascader级联选择数据格式  </span><br><span class="line">    // &#123;</span><br><span class="line">    //     text: &#x27;计算机学院&#x27;,</span><br><span class="line">    //     value: &#x27;computer&#x27;,</span><br><span class="line">    //     children: [</span><br><span class="line">    //       &#123; text: &#x27;计算机科学与技术&#x27;, value: &#x27;cs&#x27; &#125;,</span><br><span class="line">    //       &#123; text: &#x27;软件工程&#x27;, value: &#x27;se&#x27; &#125;,</span><br><span class="line">    //       &#123; text: &#x27;人工智能&#x27;, value: &#x27;ai&#x27; &#125;</span><br><span class="line">    //     ]</span><br><span class="line">    //   &#125;,</span><br><span class="line"></span><br><span class="line">// 1.cascader从major...中取出数据渲染到界面，这里就用这个存从后端获取的专业和院系数据</span><br><span class="line">    const majorDepartmentOptions = ref([]);    </span><br><span class="line">    // 2.获得院校专业数据</span><br><span class="line">    const loadDepartmentMajorData = async () =&gt; &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        const res = await getCombinations();</span><br><span class="line">        if (res.data.code === 0 &amp;&amp; res.data.data) &#123;</span><br><span class="line">          // 将后端数据转换为Cascader需要的格式，否则渲染不上</span><br><span class="line">          majorDepartmentOptions.value = Object.entries(res.data.data).map(</span><br><span class="line">            ([department, majors]) =&gt; (&#123;</span><br><span class="line">              text: department,</span><br><span class="line">              value: department,</span><br><span class="line">              children: majors.map(major =&gt; (&#123;</span><br><span class="line">                text: major,</span><br><span class="line">                value: major</span><br><span class="line">              &#125;))</span><br><span class="line">            &#125;)</span><br><span class="line">          );</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          Toast.fail(&#x27;获取院校专业数据失败&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        console.error(&#x27;获取院校专业数据错误:&#x27;, error);</span><br><span class="line">        Toast.fail(&#x27;获取院校专业数据失败&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">     // 组件挂载时加载获得院系和专业数据</span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">      loadDepartmentMajorData();</span><br><span class="line">    &#125;);</span><br><span class="line">      </span><br><span class="line">     // 专业和院系选择完成。后端只返回权限范围内的专业院系，这里无需再判断</span><br><span class="line">    //专业-院系，显示到页面</span><br><span class="line">    const departAndmajor = ref(null);</span><br><span class="line">    const showMajorDepartmentPicker = ref(false);  </span><br><span class="line">    const onMajorDepartmentFinish = (&#123; selectedOptions &#125;) =&gt; &#123;</span><br><span class="line">      const [department, major] = selectedOptions;</span><br><span class="line">      //将用户选择的院系专业存入表单数据  </span><br><span class="line">      formData.value.department = department.value;</span><br><span class="line">      formData.value.major = major.value;</span><br><span class="line">      //界面上显示院系-专业，将这两个拼接起来显示  </span><br><span class="line">      departAndmajor.value = `$&#123;department.text&#125; - $&#123;major.text&#125;`;</span><br><span class="line">      showMajorDepartmentPicker.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 性别选项</span><br><span class="line">    const genderActions = [</span><br><span class="line">      &#123; name: &#x27;男&#x27;, value: &#x27;male&#x27; &#125;,</span><br><span class="line">      &#123; name: &#x27;女&#x27;, value: &#x27;female&#x27; &#125;</span><br><span class="line">    ];  </span><br><span class="line">    // 性别选择</span><br><span class="line">    // 性别选择器显示状态</span><br><span class="line">    const showGenderPicker = ref(false);</span><br><span class="line">    const onGenderSelect = (action) =&gt; &#123;</span><br><span class="line">      formData.value.gender = action.name;</span><br><span class="line">      showGenderPicker.value = false;</span><br><span class="line">    &#125;;  </span><br><span class="line">    </span><br><span class="line">    // 控制日历显示状态</span><br><span class="line">    const showBirthDateCalendar = ref(false); </span><br><span class="line">    // 日期范围设置</span><br><span class="line">    const minDate = new Date(1980, 0, 1);</span><br><span class="line">    const maxDate = new Date();</span><br><span class="line">    //初始默认日期设为18年前</span><br><span class="line">    const defaultDate = new Date(new Date().setFullYear(new Date().getFullYear() - 18));</span><br><span class="line">// 出生日期选择确认</span><br><span class="line">    const onBirthDateConfirm = (date) =&gt; &#123;</span><br><span class="line">        const selectedDate = new Date(date);</span><br><span class="line">        //后端要yyyy-mm-dd格式，这里要补零，不然后端接收的是null</span><br><span class="line">        const year = selectedDate.getFullYear();</span><br><span class="line">        const month = (selectedDate.getMonth() + 1).toString().padStart(2, &#x27;0&#x27;); // 补零</span><br><span class="line">        const day = selectedDate.getDate().toString().padStart(2, &#x27;0&#x27;); // 补零</span><br><span class="line">        </span><br><span class="line">        formData.value.birth = `$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125;`; </span><br><span class="line">        showBirthDateCalendar.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    //点击弹出省份数据（只显示省级）</span><br><span class="line">    const provinceOptions = Object.entries(areaList.province_list).map(([code, name]) =&gt; (&#123;</span><br><span class="line">      text: name,</span><br><span class="line">      value: code</span><br><span class="line">    &#125;));  </span><br><span class="line">    // 生源地选择完成</span><br><span class="line">    const showHometownPicker = ref(false);  </span><br><span class="line">    const onHometownFinish = (&#123; selectedOptions &#125;) =&gt; &#123;</span><br><span class="line">      formData.value.originPro = selectedOptions[0].text;</span><br><span class="line">      showHometownPicker.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    // 籍贯选择完成</span><br><span class="line">    const showNativePlacePicker = ref(false);  </span><br><span class="line">    const onNativePlaceFinish = (&#123; selectedOptions &#125;) =&gt; &#123;</span><br><span class="line">      formData.value.nativePro = selectedOptions[0].text;</span><br><span class="line">      showNativePlacePicker.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    //头像上传部分*  </span><br><span class="line">    const showImagePicker = ref(false);</span><br><span class="line">    const imageList = ref([]);</span><br><span class="line">    // 头像上传处理</span><br><span class="line">    const afterRead = () =&gt; &#123;</span><br><span class="line">      // 这里模拟上传过程，实际项目中应该调用上传接口</span><br><span class="line">      Toast.loading(&#x27;处理中...&#x27;);</span><br><span class="line">      </span><br><span class="line">      setTimeout(() =&gt; &#123;</span><br><span class="line">        // 模拟上传成功，获取图片URL</span><br><span class="line">        const imageUrl = &quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;;</span><br><span class="line">        </span><br><span class="line">        // 更新表单数据</span><br><span class="line">        formData.value.img = imageUrl;</span><br><span class="line">        </span><br><span class="line">        // 清空上传列表</span><br><span class="line">        imageList.value = [];</span><br><span class="line">        </span><br><span class="line">        // 关闭选择器</span><br><span class="line">        showImagePicker.value = false;</span><br><span class="line">        </span><br><span class="line">        Toast.clear();</span><br><span class="line">      &#125;, 1000);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 表单提交</span><br><span class="line">    const handleSubmit = async () =&gt; &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        //console.log(&quot;收集的学生数据&quot;+JSON.stringify(formData.value));</span><br><span class="line">        const submitData = &#123;</span><br><span class="line">          ...formData.value,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        //console.log(&quot;提交的学生数据&quot;+JSON.stringify(submitData));</span><br><span class="line">        Toast.loading(&#x27;提交中...&#x27;);</span><br><span class="line">        const res = await addStudent(submitData);</span><br><span class="line">        Toast.clear();</span><br><span class="line"></span><br><span class="line">        if (res.data.code === 0) &#123;</span><br><span class="line">            Toast.success(&#x27;新增学生成功&#x27;);</span><br><span class="line">            // 调用 Pinia 方法更新数据,不然需要手动刷新</span><br><span class="line">            const studentStore = useStudentStore();</span><br><span class="line">            await studentStore.fetchStudents(); // 更新当前页数据</span><br><span class="line">            await studentStore.fetchAllStudents(); // 更新全部学生数据</span><br><span class="line"></span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            console.log(res.data.message || &#x27;失败&#x27;);</span><br><span class="line">            Toast.fail(res.data.message || &#x27;新增学生失败&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">            Toast.clear();</span><br><span class="line">            console.error(&#x27;新增学生失败:&#x27;, error);</span><br><span class="line">            Toast.fail(&#x27;新增学生失败&#x27;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">      </span><br><span class="line">    return &#123;</span><br><span class="line">      formData,</span><br><span class="line">      showGenderPicker,</span><br><span class="line">      showMajorDepartmentPicker,</span><br><span class="line">      showBirthDateCalendar,</span><br><span class="line">      defaultDate,</span><br><span class="line">      showHometownPicker,</span><br><span class="line">      showNativePlacePicker,</span><br><span class="line">      genderActions,</span><br><span class="line">      majorDepartmentOptions,</span><br><span class="line">      provinceOptions,</span><br><span class="line">      minDate,</span><br><span class="line">      maxDate,</span><br><span class="line">      handleBack,</span><br><span class="line">      onGenderSelect,</span><br><span class="line">      onMajorDepartmentFinish,</span><br><span class="line">      onBirthDateConfirm,</span><br><span class="line">      onHometownFinish,</span><br><span class="line">      onNativePlaceFinish,</span><br><span class="line">      handleSubmit,</span><br><span class="line">      afterRead,</span><br><span class="line">      departAndmajor,</span><br><span class="line">      showImagePicker,</span><br><span class="line">      imageList</span><br><span class="line">    &#125;;  </span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.add-student-page &#123;</span><br><span class="line">  padding-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.student-form &#123;</span><br><span class="line">  padding: 16px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.submit-button &#123;</span><br><span class="line">  margin: 20px 16px 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 调整字段间距 */</span><br><span class="line">.van-field &#123;</span><br><span class="line">  margin-bottom: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="学籍卡组件"><a href="#学籍卡组件" class="headerlink" title="学籍卡组件"></a>学籍卡组件</h2><blockquote><p>在写新增学生的时候就已经获得了院系-专业的级联数据并存入了pinia，这里直接用就行。</p></blockquote><h3 id="显示学生"><a href="#显示学生" class="headerlink" title="显示学生"></a>显示学生</h3><p>src&#x2F;views&#x2F;edit&#x2F;StuCard.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;student-card&quot;&gt;</span><br><span class="line">    &lt;van-form @submit=&quot;onSubmit&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;basic-message&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;basic-left&quot;&gt;</span><br><span class="line">          &lt;!-- 姓名 --&gt;</span><br><span class="line">          &lt;van-field</span><br><span class="line">            class=&quot;card-name&quot;</span><br><span class="line">            v-model=&quot;formData.name&quot;</span><br><span class="line">            label=&quot;姓名&quot;</span><br><span class="line">            placeholder=&quot;请输入姓名&quot;</span><br><span class="line">            :readonly=&quot;!isEditable&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">          &lt;!-- 学号 --&gt;</span><br><span class="line">          &lt;van-field</span><br><span class="line">            v-model=&quot;formData.stuID&quot;</span><br><span class="line">            label=&quot;学号&quot;</span><br><span class="line">            readonly</span><br><span class="line">            @click=&quot;hint&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">          &lt;!-- 性别 --&gt;</span><br><span class="line">          &lt;van-field</span><br><span class="line">            v-model=&quot;formData.gender&quot;</span><br><span class="line">            is-link</span><br><span class="line">            readonly</span><br><span class="line">            label=&quot;性别&quot;</span><br><span class="line">            placeholder=&quot;请选择性别&quot;</span><br><span class="line">            @click=&quot;isEditable &amp;&amp; (showGenderPicker = true)&quot;</span><br><span class="line">            :rules=&quot;[&#123; required: true, message: &#x27;请选择性别&#x27; &#125;]&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 照片 --&gt;</span><br><span class="line">        &lt;div class=&quot;photo-upload&quot;&gt;</span><br><span class="line">          &lt;van-uploader</span><br><span class="line">            v-model=&quot;photoFile&quot;</span><br><span class="line">            :disabled=&quot;!isEditable&quot;</span><br><span class="line">            :deletable=&quot;isEditable&quot;</span><br><span class="line">            max-count=&quot;1&quot;</span><br><span class="line">            :preview-image=&quot;false&quot;</span><br><span class="line">            :after-read=&quot;handlePhotoUpload&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;template #default&gt;</span><br><span class="line">              &lt;div class=&quot;photo-preview&quot;&gt;</span><br><span class="line">                &lt;img v-if=&quot;formData.img&quot; :src=&quot;formData.img&quot; alt=&quot;学生照片&quot; /&gt;</span><br><span class="line">                &lt;van-icon v-else name=&quot;photograph&quot; size=&quot;50&quot; /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/van-uploader&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 电话 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.tel&quot;</span><br><span class="line">        label=&quot;电话&quot;</span><br><span class="line">        placeholder=&quot;请输入电话&quot;</span><br><span class="line">        :readonly=&quot;!isEditable&quot;</span><br><span class="line">        :rules=&quot;[</span><br><span class="line">          &#123; required: true, message: &#x27;请输入电话&#x27; &#125;,</span><br><span class="line">          &#123; validator: validatePhone, message: &#x27;请输入正确的手机号码&#x27; &#125;</span><br><span class="line">        ]&quot;</span><br><span class="line">      /&gt;  </span><br><span class="line">      &lt;!-- 专业和院系 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;departmentMajorText&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;专业和院系&quot;</span><br><span class="line">        placeholder=&quot;请选择专业和院系&quot;</span><br><span class="line">        @click=&quot;isEditable &amp;&amp; (showDepartmentMajorPicker = true)&quot;</span><br><span class="line">        :rules=&quot;[&#123; required: true, message: &#x27;请选择专业和院系&#x27; &#125;]&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;!-- 入学分数 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.grade&quot;</span><br><span class="line">        label=&quot;入学分数&quot;</span><br><span class="line">        placeholder=&quot;请输入入学分数&quot;</span><br><span class="line">        type=&quot;number&quot;</span><br><span class="line">        :readonly=&quot;!isEditable&quot;</span><br><span class="line">      /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 出生年月 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.birth&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;出生年月&quot;</span><br><span class="line">        placeholder=&quot;请选择出生年月&quot;</span><br><span class="line">        @click=&quot;isEditable &amp;&amp; (showBirthdayPicker = true)&quot;</span><br><span class="line">        :rules=&quot;[&#123; required: true, message: &#x27;请选择出生年月&#x27; &#125;]&quot;</span><br><span class="line">      /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 生源地 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.originPro&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;生源地&quot;</span><br><span class="line">        placeholder=&quot;请选择生源地&quot;</span><br><span class="line">        @click=&quot;isEditable &amp;&amp; (showHometownPicker = true)&quot;</span><br><span class="line">        :rules=&quot;[&#123; required: true, message: &#x27;请选择生源地&#x27; &#125;]&quot;</span><br><span class="line">      /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 籍贯 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.nativePro&quot;</span><br><span class="line">        is-link</span><br><span class="line">        readonly</span><br><span class="line">        label=&quot;籍贯&quot;</span><br><span class="line">        placeholder=&quot;请选择籍贯&quot;</span><br><span class="line">        @click=&quot;isEditable &amp;&amp; (showNativePlacePicker = true)&quot;</span><br><span class="line">        :rules=&quot;[&#123; required: true, message: &#x27;请选择籍贯&#x27; &#125;]&quot;</span><br><span class="line">      /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 简介 --&gt;</span><br><span class="line">      &lt;van-field</span><br><span class="line">        v-model=&quot;formData.profile&quot;</span><br><span class="line">        label=&quot;简介&quot;</span><br><span class="line">        type=&quot;textarea&quot;</span><br><span class="line">        placeholder=&quot;请输入简介&quot;</span><br><span class="line">        rows=&quot;3&quot;</span><br><span class="line">        autosize</span><br><span class="line">        :readonly=&quot;!isEditable&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 性别选择器 --&gt;</span><br><span class="line">    &lt;van-action-sheet</span><br><span class="line">      v-model:show=&quot;showGenderPicker&quot;</span><br><span class="line">      :actions=&quot;genderActions&quot;</span><br><span class="line">      @select=&quot;onGenderSelect&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 专业和院系级联选择器 --&gt;</span><br><span class="line">    &lt;van-popup v-model:show=&quot;showDepartmentMajorPicker&quot; position=&quot;bottom&quot;&gt;</span><br><span class="line">      &lt;van-cascader</span><br><span class="line">        v-if=&quot;showDepartmentMajorPicker&quot;</span><br><span class="line">        :options=&quot;departmentMajorOptions&quot;</span><br><span class="line">        @finish=&quot;onDepartmentMajorFinish&quot;</span><br><span class="line">        @close=&quot;showDepartmentMajorPicker = false&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-popup&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 出生年月日历选择器 --&gt;</span><br><span class="line">    &lt;van-popup v-model:show=&quot;showBirthdayPicker&quot; position=&quot;bottom&quot;&gt;  </span><br><span class="line">      &lt;van-calendar</span><br><span class="line">        v-model:show=&quot;showBirthdayPicker&quot;</span><br><span class="line">        type=&quot;single&quot;</span><br><span class="line">        :min-date=&quot;minDate&quot;</span><br><span class="line">        :max-date=&quot;maxDate&quot;</span><br><span class="line">        :default-date=&quot;defaultBirthDate&quot;</span><br><span class="line">        @confirm=&quot;onBirthdayConfirm&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-popup&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 生源地选择器 --&gt;</span><br><span class="line">    &lt;van-popup v-model:show=&quot;showHometownPicker&quot; position=&quot;bottom&quot;&gt;</span><br><span class="line">      &lt;van-cascader</span><br><span class="line">        v-if=&quot;showHometownPicker&quot;</span><br><span class="line">        :options=&quot;provinceOptions&quot;</span><br><span class="line">        @finish=&quot;onHometownFinish&quot;</span><br><span class="line">        @close=&quot;showHometownPicker = false&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-popup&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 籍贯选择器 --&gt;</span><br><span class="line">    &lt;van-popup v-model:show=&quot;showNativePlacePicker&quot; position=&quot;bottom&quot;&gt;</span><br><span class="line">      &lt;van-cascader</span><br><span class="line">        v-if=&quot;showNativePlacePicker&quot;</span><br><span class="line">        :options=&quot;provinceOptions&quot;</span><br><span class="line">        @finish=&quot;onNativePlaceFinish&quot;</span><br><span class="line">        @close=&quot;showNativePlacePicker = false&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-popup&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref, computed, watch, onMounted &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; areaList &#125; from &#x27;@vant/area-data&#x27;;</span><br><span class="line">import &#123; useDepartmentMajorStore &#125; from &#x27;@/store/departmentMajor&#x27;;</span><br><span class="line">import &#123; Toast &#125; from &#x27;vant&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    isEditable: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false</span><br><span class="line">    &#125;,</span><br><span class="line">    studentData: &#123;</span><br><span class="line">      type: Object,</span><br><span class="line">      default: () =&gt; (&#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  setup(props) &#123;</span><br><span class="line">    // 在EditView界面确定要显示的学生，通过props将studentData传到学籍卡组件</span><br><span class="line">    const formData = ref(&#123; ...props.studentData &#125;);</span><br><span class="line"> </span><br><span class="line">    const hint = () =&gt;&#123;</span><br><span class="line">      Toast(&quot;学号不可编辑&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    // 验证手机号</span><br><span class="line">    const validatePhone = (val) =&gt; /^1[3-9]\d&#123;9&#125;$/.test(val);</span><br><span class="line"></span><br><span class="line">    // 照片上传</span><br><span class="line">    const photoFile = ref([]);</span><br><span class="line">    const handlePhotoUpload = (file) =&gt; &#123;</span><br><span class="line">      formData.value.img = file.content;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    /* 性别选择 */</span><br><span class="line">    const showGenderPicker = ref(false);</span><br><span class="line">    const genderActions = [</span><br><span class="line">      &#123; name: &#x27;男&#x27;, value: &#x27;男&#x27; &#125;,</span><br><span class="line">      &#123; name: &#x27;女&#x27;, value: &#x27;女&#x27; &#125;</span><br><span class="line">    ];</span><br><span class="line">    const onGenderSelect = (action) =&gt; &#123;</span><br><span class="line">      formData.value.gender = action.name;</span><br><span class="line">      showGenderPicker.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    /* 院系专业选择 */</span><br><span class="line">    const departmentMajorStore = useDepartmentMajorStore();</span><br><span class="line">    const showDepartmentMajorPicker = ref(false);</span><br><span class="line">    //调用pinia中的专业院系级联数据  </span><br><span class="line">    const departmentMajorOptions = computed(() =&gt; departmentMajorStore.majorDepartmentOptions);</span><br><span class="line">    //用户选择的专业和院系  </span><br><span class="line">    const onDepartmentMajorFinish = (&#123; selectedOptions &#125;) =&gt; &#123;</span><br><span class="line">      const [department, major] = selectedOptions;</span><br><span class="line">      formData.value.department = department.text;</span><br><span class="line">      formData.value.major = major.text;</span><br><span class="line">      showDepartmentMajorPicker.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line">    //显示到页面上  </span><br><span class="line">    const departmentMajorText = computed(() =&gt; &#123;</span><br><span class="line">      if (!formData.value.department || !formData.value.major) return &#x27;&#x27;;</span><br><span class="line">      return `$&#123;formData.value.department&#125; - $&#123;formData.value.major&#125;`;</span><br><span class="line">    &#125;);  </span><br><span class="line"></span><br><span class="line">    /* 出生日期选择 */</span><br><span class="line">    const showBirthdayPicker = ref(false);</span><br><span class="line">    const minDate = new Date(1970, 0, 1);</span><br><span class="line">    const maxDate = new Date();</span><br><span class="line">    const defaultBirthDate = ref(null);</span><br><span class="line">    const initBirthdayData = () =&gt; &#123;</span><br><span class="line">      if (formData.value.birth) &#123;</span><br><span class="line">        const dateParts = formData.value.birth.split(&#x27;-&#x27;);</span><br><span class="line">        if (dateParts.length === 3) &#123;</span><br><span class="line">          defaultBirthDate.value = new Date(</span><br><span class="line">            parseInt(dateParts[0]),</span><br><span class="line">            parseInt(dateParts[1]) - 1,</span><br><span class="line">            parseInt(dateParts[2])</span><br><span class="line">          );</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        defaultBirthDate.value = new Date(new Date().setFullYear(new Date().getFullYear() - 18));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    const onBirthdayConfirm = (date) =&gt; &#123;</span><br><span class="line">      const year = date.getFullYear();</span><br><span class="line">      const month = (date.getMonth() + 1).toString().padStart(2, &#x27;0&#x27;);</span><br><span class="line">      const day = date.getDate().toString().padStart(2, &#x27;0&#x27;);</span><br><span class="line">      formData.value.birth = `$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125;`;</span><br><span class="line">      showBirthdayPicker.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    /* 生源地和籍贯选择 */</span><br><span class="line">    const showHometownPicker = ref(false);</span><br><span class="line">    const showNativePlacePicker = ref(false);</span><br><span class="line">    const provinceOptions = ref([]);</span><br><span class="line">    const initProvinceData = () =&gt; &#123;</span><br><span class="line">      if (!areaList || !areaList.province_list) &#123;</span><br><span class="line">        console.error(&#x27;区域数据加载失败&#x27;);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      provinceOptions.value = Object.entries(areaList.province_list).map(([code, name]) =&gt; (&#123;</span><br><span class="line">        text: name,</span><br><span class="line">        value: name,</span><br><span class="line">        //code备用一下，虽然大概率用不上</span><br><span class="line">        code: code</span><br><span class="line">      &#125;));</span><br><span class="line">    &#125;;</span><br><span class="line">    const onHometownFinish = (&#123; selectedOptions &#125;) =&gt; &#123;</span><br><span class="line">      formData.value.originPro = selectedOptions[0].text;</span><br><span class="line">      showHometownPicker.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line">    const onNativePlaceFinish = (&#123; selectedOptions &#125;) =&gt; &#123;</span><br><span class="line">      formData.value.nativePro = selectedOptions[0].text;</span><br><span class="line">      showNativePlacePicker.value = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 表单提交</span><br><span class="line">    const onSubmit = () =&gt; &#123;</span><br><span class="line">      console.log(formData.value);</span><br><span class="line">      </span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    // 组件挂载时初始化数据</span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">      initProvinceData();</span><br><span class="line">      initBirthdayData();</span><br><span class="line">      </span><br><span class="line">      if (departmentMajorStore.majorDepartmentOptions.length === 0) &#123;</span><br><span class="line">        departmentMajorStore.loadDepartmentMajorData();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      hint,</span><br><span class="line">      formData,</span><br><span class="line">      photoFile,</span><br><span class="line">      departmentMajorText,</span><br><span class="line">      departmentMajorOptions,</span><br><span class="line">      showGenderPicker,</span><br><span class="line">      genderActions,</span><br><span class="line">      showDepartmentMajorPicker,</span><br><span class="line">      showBirthdayPicker,</span><br><span class="line">      minDate,</span><br><span class="line">      maxDate,</span><br><span class="line">      defaultBirthDate,</span><br><span class="line">      showHometownPicker,</span><br><span class="line">      showNativePlacePicker,</span><br><span class="line">      provinceOptions,</span><br><span class="line">      validatePhone,</span><br><span class="line">      handlePhotoUpload,</span><br><span class="line">      onGenderSelect,</span><br><span class="line">      onDepartmentMajorFinish,</span><br><span class="line">      onBirthdayConfirm,</span><br><span class="line">      onHometownFinish,</span><br><span class="line">      onNativePlaceFinish,</span><br><span class="line">      onSubmit,</span><br><span class="line">      //validate</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="编辑学生"><a href="#编辑学生" class="headerlink" title="编辑学生"></a>编辑学生</h3><blockquote><p>？emit props handleFormSubmit是否多余，这块似乎还需要修改</p></blockquote><h1 id="11-统计图显示"><a href="#11-统计图显示" class="headerlink" title="11.统计图显示"></a>11.统计图显示</h1><h1 id="部分组件和参数说明"><a href="#部分组件和参数说明" class="headerlink" title="部分组件和参数说明"></a>部分组件和参数说明</h1><h2 id="van-action-sheet-从底部弹出的菜单面板"><a href="#van-action-sheet-从底部弹出的菜单面板" class="headerlink" title="van-action-sheet 从底部弹出的菜单面板"></a>van-action-sheet 从底部弹出的菜单面板</h2><ul><li><code>v-model:show</code>：boolen型的show变量用来控制面板显示&#x2F;隐藏，使用v-model进行双向绑定</li><li><code>:actions</code>：菜单选项数组（格式如 <code>[&#123; name: &#39;退出登录&#39; &#125;]</code>）。</li><li><code>cancel-text</code>：取消按钮的文本。</li><li><code>close-on-click-action</code>：点击选项后自动关闭</li><li><code>@cancel=&quot;onCancel&quot;</code>：点击取消按钮时调用 <code>onCancel</code> 方法。</li><li><code>@select=&quot;onSelect&quot;</code>：选择菜单项时调用 onSelect 方法。</li></ul><h2 id="van-field-表单字段"><a href="#van-field-表单字段" class="headerlink" title="van-field 表单字段"></a>van-field 表单字段</h2><p><code>v-model=&quot;username&quot;</code>  双向绑定用户名输入值 </p><p> <code>name=&quot;username&quot;</code>  表单字段标识</p><p><code>:rules=&quot;userFormRules.username&quot;</code> 动态绑定校验规则</p><h2 id="van-dropdown"><a href="#van-dropdown" class="headerlink" title="van-dropdown"></a>van-dropdown</h2><p>往往不会直接用options，会在里面加自定义组件。因为需要自定义下拉项的交互逻辑。</p><p><code>options</code> 的点击行为是固定的（选中后关闭下拉菜单并更新 <code>v-model</code>），但实际应用中可能需要在点击时触发其他操作。所以会通过 <code>&lt;template #default&gt;</code> 自定义内容，可以完全控制每个选项的点击行为（例如弹出输入框、发起请求等）。</p><p>其次，<code>options</code> 只能提供简单的文本显示，无法添加图标、辅助文字或特殊样式。所以用自定义模板中，这样可以自由使用其他组件（如 <code>van-cell</code>），实现更丰富的 UI 效果。</p>]]></content>
      
      
      <categories>
          
          <category> 项目前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo图床和文章编辑写作</title>
      <link href="/2025/04/13/hexo%E5%9B%BE%E5%BA%8A%E5%92%8C%E6%96%87%E7%AB%A0%E5%86%99%E4%BD%9C/"/>
      <url>/2025/04/13/hexo%E5%9B%BE%E5%BA%8A%E5%92%8C%E6%96%87%E7%AB%A0%E5%86%99%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora下载"><a href="#Typora下载" class="headerlink" title="Typora下载"></a>Typora下载</h1><h3 id="1-下载Typora"><a href="#1-下载Typora" class="headerlink" title="1.下载Typora"></a>1.下载Typora</h3><p>打开Typora官网，下载最新版<a href="https://typoraio.cn/">https://typoraio.cn/</a></p><h3 id="2-修改文件"><a href="#2-修改文件" class="headerlink" title="2.修改文件"></a>2.修改文件</h3><p>打开Typora所在文件夹，找到该文件夹。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typora\resources\page-dist\static\js</span><br></pre></td></tr></table></figure><p>打开文件夹中的LicenseIndex.180dd4c7…文件，将文件中的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.hasActivated=&quot;true&quot;==e.hasActivated</span><br></pre></td></tr></table></figure><p>替换为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.hasActivated=&quot;true&quot;==&quot;true&quot;</span><br></pre></td></tr></table></figure><h3 id="3-关闭软件启动时的激活弹窗"><a href="#3-关闭软件启动时的激活弹窗" class="headerlink" title="3.关闭软件启动时的激活弹窗"></a>3.关闭软件启动时的激活弹窗</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resources\page-dist\license.html</span><br></pre></td></tr></table></figure><p>打开上述文件，将代码末尾位置的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>替换成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.οnlοad=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;<span class="variable language_">window</span>.<span class="title function_">close</span>();&#125;,<span class="number">5</span>);&#125;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-关闭软件左下角未激活提示"><a href="#4-关闭软件左下角未激活提示" class="headerlink" title="4.关闭软件左下角未激活提示"></a>4.关闭软件左下角未激活提示</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resources\locales\zh-Hans.lproj\Panel.json </span><br></pre></td></tr></table></figure><p>打开上述文件，找到以下代码</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;UNREGISTERED&quot;</span><span class="punctuation">:</span><span class="string">&quot;未激活&quot;</span></span><br></pre></td></tr></table></figure><p>替换成</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;UNREGISTERED&quot;</span><span class="punctuation">:</span><span class="string">&quot; &quot;</span></span><br></pre></td></tr></table></figure><hr><p>破解完成。</p><h1 id="PicGo-github图床配置"><a href="#PicGo-github图床配置" class="headerlink" title="PicGo+github图床配置"></a>PicGo+github图床配置</h1><h3 id="1-配置github"><a href="#1-配置github" class="headerlink" title="1.配置github"></a>1.配置github</h3><p>1.github新建一个仓库保存图片。注：仓库大小有限制，最大1GB。</p><p>2.打开<strong>settings</strong>，选择最左下的<strong>Developer settings</strong>，选择”<strong>Personal access tokens</strong>“，并选择其中下方的”<strong>Tokens (classic)<strong>”；随后，选择右上角”</strong>Generate new token</strong>“，并再选择”**Generate new token (classic)**“。</p><p>3.在弹出的配置界面中，首先填写”<strong>Note</strong>“，这个是当前<strong>token</strong>的<strong>注释</strong>，也用一个和图片有关的名称来填写即可；随后，配置<strong>token</strong>的有效期。其实我们可以将有效期选择为<strong>永久</strong>。勾选<strong>repo</strong>，最后确认即可。</p><p>4.界面显示token，将序号保存下来，之后在github网页上该token不可见。</p><h3 id="2-配置PicGo"><a href="#2-配置PicGo" class="headerlink" title="2.配置PicGo"></a>2.配置PicGo</h3><p>1.下载并打开<strong>PicGo设置</strong>，滑到底部，在<strong>请选择显示的图床</strong>中只勾选<strong>github</strong></p><p>2.点进<strong>图床设置</strong>，编辑配置信息。仓库名就是我们前面创建的<strong>Repository</strong>的名称，分支名为main；随后的<strong>Token</strong>就是前面我们获取的<strong>token</strong>序号，存储路径这里我们可以空着，如果大家需要指定将图片存储到仓库中的某个路径下，就在这里设置即可。自定义域名使用<a href="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main%E8%8E%B7%E5%8F%96%E5%8A%A0%E9%80%9F%E3%80%82">https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main获取加速。</a></p><h3 id="3-配置typora"><a href="#3-配置typora" class="headerlink" title="3.配置typora"></a>3.配置typora</h3><p>在”<strong>文件</strong>“中选择”<strong>偏好设置…</strong>“，随后选择”<strong>图像</strong>“，并按照如下图所示的配置方式来加以设置。</p><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/image-20250413203248892.png" alt="image-20250413203248892"></p><p>选择上图中的”<strong>验证图片上传选项</strong>“，如果出现显示<strong>验证成功</strong>的窗口，则表明我们已经成功配置完毕。此时，如果我们在<strong>Typora</strong>内添加了图片，那么这张图片将自动通过<strong>PicGo</strong>，上传到我们前面建立好的图床中。</p><h1 id="写作和上传"><a href="#写作和上传" class="headerlink" title="写作和上传"></a>写作和上传</h1><h3 id="1-创建编辑文章"><a href="#1-创建编辑文章" class="headerlink" title="1.创建编辑文章"></a>1.创建编辑文章</h3><p>在D:\blog-c\myblog\source\_posts页面git bush，输入以下指令后在_posts文件夹中会自动更新一个md文档，用typora打开编辑即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文章名字</span><br></pre></td></tr></table></figure><h3 id="2-上传文章"><a href="#2-上传文章" class="headerlink" title="2.上传文章"></a>2.上传文章</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> blog搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学籍管理系统后端</title>
      <link href="/2025/04/13/%E5%AD%A6%E7%B1%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%90%8E%E7%AB%AF/"/>
      <url>/2025/04/13/%E5%AD%A6%E7%B1%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%90%8E%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前端部分记录在学籍管理系统前端.md。本文档主要记录后端和数据库学习过程</p></blockquote><h1 id="项目创建和配置"><a href="#项目创建和配置" class="headerlink" title="项目创建和配置"></a>项目创建和配置</h1><blockquote><p>springboot+nativecat+接口测试工具postman</p></blockquote><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202505081425766.png" alt="image-20250508142536583"></p><p>然后选择要下载的依赖</p><table><thead><tr><th>依赖所在类</th><th>依赖名</th><th>用处</th></tr></thead><tbody><tr><td>Web</td><td>SpringWeb</td><td></td></tr><tr><td>SQL</td><td>MySQL Driver</td><td>MySQL驱动</td></tr><tr><td></td><td>MyBaties Framework</td><td>MyBaties框架</td></tr><tr><td>Developer Tools</td><td>Lombok</td><td>帮助编译</td></tr><tr><td></td><td>SpringValidation</td><td>对注册接口的参数进行合理性验证</td></tr></tbody></table><p>接下来进行数据据库配置</p><p>参考<strong>数据库学习</strong>一文，在resources中的.properties文件中配置mubites，并且idea连接上数据库。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">stuBackend</span></span><br><span class="line"><span class="comment">#配置数据库的连接信息 - 四要素</span></span><br><span class="line"><span class="comment">#驱动类名称</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment">#数据库连接的url</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/stu_information</span></span><br><span class="line"><span class="comment">#连接数据库的用户名</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="comment">#配置mybaties的日志，指定输出到控制台</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">...</span></span><br><span class="line"><span class="comment">#配置mybaties的日志，指定输出到控制台</span></span><br><span class="line"><span class="attr">mybatis.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"><span class="comment">#开启数据库中字段和实体类中变量的驼峰命名和下划线命名的自动转换</span></span><br><span class="line"><span class="attr">mybatis.configuration.map-underscore-to-camel-case</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p>最后创建项目目录。utils放工具类</p><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202505091850550.png" alt="image-20250509185055311"></p><p>准备好项目中要用的几个实体类，放在pojo中</p><p>User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer userId;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String userPsw;<span class="comment">//密码</span></span><br><span class="line">    <span class="keyword">private</span> Integer userAuth;</span><br><span class="line">    <span class="keyword">private</span> String userDepartment;</span><br><span class="line">    <span class="comment">//private String userPic;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer userId,String userName, String userPsw, Integer userAuth, String userDepartment)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userId = userId;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">        <span class="built_in">this</span>.userPsw = userPsw;</span><br><span class="line">        <span class="built_in">this</span>.userAuth = userAuth;</span><br><span class="line">        <span class="built_in">this</span>.userDepartment = userDepartment;</span><br><span class="line">        <span class="comment">//this.userPic = userPic;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getUserId</span><span class="params">()</span> &#123;<span class="keyword">return</span> userId;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserId</span><span class="params">(Integer userId)</span> &#123;<span class="built_in">this</span>.userId = userId;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserPsw</span><span class="params">()</span> &#123;<span class="keyword">return</span> userPsw;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserPsw</span><span class="params">(String userPsw)</span> &#123;<span class="built_in">this</span>.userPsw = userPsw;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getUserAuth</span><span class="params">()</span> &#123;<span class="keyword">return</span> userAuth;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserAuth</span><span class="params">(Integer userAuth)</span> &#123;<span class="built_in">this</span>.userAuth = userAuth;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;userId=&quot;</span> + userId +</span><br><span class="line">                <span class="string">&quot;, userName=&#x27;&quot;</span> + userName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, userPsw=&#x27;&quot;</span> + userPsw + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, userAuth=&quot;</span> + userAuth +</span><br><span class="line">                <span class="string">&quot;, userPic=&#x27;&quot;</span> + userPic + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Stu</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stu</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer stuId;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> String originPro;</span><br><span class="line">    <span class="keyword">private</span> String nativePro;</span><br><span class="line">    <span class="keyword">private</span> LocalDate birth;</span><br><span class="line">    <span class="keyword">private</span> String major;</span><br><span class="line">    <span class="keyword">private</span> String department;</span><br><span class="line">    <span class="keyword">private</span> Float grade;</span><br><span class="line">    <span class="keyword">private</span> Integer tel;</span><br><span class="line">    <span class="keyword">private</span> String img; <span class="comment">//图像url</span></span><br><span class="line">    <span class="keyword">private</span> String profile;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Result</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//统一响应结果</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Data</span> <span class="comment">//不加这个注解会报406错误</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span>  Integer code; <span class="comment">//业务状态码：0成功 1失败</span></span><br><span class="line">    <span class="keyword">private</span> String message; <span class="comment">//提示信息</span></span><br><span class="line">    <span class="keyword">private</span> T data; <span class="comment">//响应数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//快速返回操作成功响应结果，带响应数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; Result&lt;E&gt; <span class="title function_">success</span><span class="params">(E data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(<span class="number">0</span>,<span class="string">&quot;操作成功&quot;</span>,data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//快速返回操作成功响应结果</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">0</span>,<span class="string">&quot;操作成功&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">error</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">1</span>,message,<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="项目实战记录"><a href="#项目实战记录" class="headerlink" title="项目实战记录"></a>项目实战记录</h1><blockquote><p>controller：控制层，接受前端发送的请求，对请求进行处理，并响应数据</p><p>service：业务逻辑层，处理具体的业务逻辑。</p><p>dao（mapper）：数据访问层，负责数据访问操作，包括数据的增删改查。</p></blockquote><h2 id="1-注册"><a href="#1-注册" class="headerlink" title="1.注册"></a>1.注册</h2><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>UserController–UserService(接口)–UserServiceimpl（实现类）–UserMapper</p><hr><p>UserController：写接收到前端参数后进行的处理</p><p><strong>正则校验</strong>：1.引入SpringValidation依赖。2.在参数前面加Pattern注解，括号内写正则表达式。3.在Controller类上加Validated注解。4.在全局异常处理器中处理参数校验失败异常。</p><blockquote><p>此时findByUserId和register方法未实现，Autowired注解的bean流也不清楚是哪个容器中的，这三个都会标红。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@Validated</span><span class="comment">//正则参数校验注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="comment">//public Result register(Integer userID, String password, Integer userAuth) &#123;</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">register</span><span class="params">(Integer userID,String userName, <span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span>String password, Integer userAuth)</span> &#123;</span><br><span class="line">        <span class="comment">//查询用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> userService.findByUserId(userID);</span><br><span class="line">        <span class="keyword">if</span> (u != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//占用</span></span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;学工号被占用&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//未占用则注册</span></span><br><span class="line">            userService.register(userID,userName, password, userAuth);</span><br><span class="line">            <span class="keyword">return</span> Result.success();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>（controller–service）</p><p>定位到UserController中标红的两个方法上，alt键+回车，会自动在UserService接口文件中创建方法。</p><p>由于service层需要解耦，这里依旧会标红，因为没有在impl文件中实现这两个方法，alt+回车，自动在UserServiceimpl文件中生成方法。</p><p>在UserServiceimpl文件中加上Service注解，表示将这个对象交给IOC容器管理，成为一个bean流。UserController中的Autowired注解不再标红。</p></blockquote><p>UserService（接口）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">//根据用户id查用户</span></span><br><span class="line">    User <span class="title function_">findByUserId</span><span class="params">(Integer userID)</span>;</span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(Integer userID,String userName, String password,Integer userAuth)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceimpl（实现类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceimpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">findByUserId</span><span class="params">(Integer userID)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> userMapper.findByUserId(userID);</span><br><span class="line">        <span class="keyword">return</span> u;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(Integer userID,String userName, String password, Integer userAuth)</span> &#123;</span><br><span class="line">        <span class="comment">//加密</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">md5String</span> <span class="operator">=</span> Md5Util.getMD5String(password);</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        userMapper.add(userID,userName,md5String,userAuth);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>将UserMapper接口中的方法对象变成bean流，装配到UserServiceimpl中。</p></blockquote><p>UserMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">//根据用户id查询用户</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from usermsg where userID=#&#123;userID&#125;&quot;)</span></span><br><span class="line">    User <span class="title function_">findByUserId</span><span class="params">(Integer userID)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into usermsg(userID,userName,userPsw,userAuth)&quot; +</span></span><br><span class="line"><span class="meta">            &quot;values (#&#123;userID&#125;,#&#123;userName&#125;,#&#123;md5String&#125;,#&#123;userAuth&#125;)&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(Integer userID,String userName, String md5String,Integer userAuth)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册信息校验补充"><a href="#注册信息校验补充" class="headerlink" title="注册信息校验补充"></a>注册信息校验补充</h3><p>如果只有上述代码，参数校验失败是直接报错500，为了更直观，在全局异常处理器中增加参数校验失败异常处理提示代码。</p><p>exception文件包下GlobalExcptionHandler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExcptionHandler</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">handleExcption</span><span class="params">(Exception e)</span>&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.error(StringUtils.hasLength(e.getMessage())?e.getMessage():<span class="string">&quot;操作失败&quot;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-登录"><a href="#2-登录" class="headerlink" title="2.登录"></a>2.登录</h2><h3 id="基础代码"><a href="#基础代码" class="headerlink" title="基础代码"></a>基础代码</h3><p>在UserController类中增加一个登录方法。这个方法中用到的函数在注册这部分已完成。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">login</span><span class="params">(Integer userID, <span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span>String password)</span>&#123;</span><br><span class="line">        <span class="comment">//根据用户名查询用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.findByUserId(userID);</span><br><span class="line">        <span class="comment">//用户不存在</span></span><br><span class="line">        <span class="keyword">if</span> (loginUser == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;学工号错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用户存在</span></span><br><span class="line">        <span class="keyword">if</span>(password.equals(loginUser.getUserPsw()))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.success(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="登录认证"><a href="#登录认证" class="headerlink" title="登录认证"></a>登录认证</h3><blockquote><p>登录认证是指确保在未登录状态下，其他资源信息不可访问。只有登录后拿到<strong>令牌</strong>才能访问他系统其他资源。令牌就是一段字符串，可以承载业务数据，减少后续请求查询数据库的次数；还可以防篡改，保证信息的合法性和有效性。</p><p>JWT令牌：通信双方以json格式安全传输信息。由“头”+“有效载荷”+“签名”三部分组成，有效载荷部分不能存放私密数据，签名部分用来防止Token被篡改，确保安全性。</p></blockquote><p>在pom.xml中新增起步依赖，写好坐标后点击idea右上方的mvn刷新图标，刷新的同时会下载没有的依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--java-jwt坐标--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改UserController类中的登录方法，生成token。</p><blockquote><p>claims.put这里不直接用传过来的参数userID和password：如果直接用传入的 userID生成 Token，攻击者可以伪造任意 userID 构造非法 Token。而从数据库查询的 loginUser.getUserId() 是经过校验的合法用户，确保了 Token 的可靠性。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">login</span><span class="params">(Integer userID, <span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span>String password)</span>&#123;</span><br><span class="line">       <span class="comment">//根据用户名查询用户</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.findByUserId(userID);</span><br><span class="line">       <span class="comment">//用户不存在</span></span><br><span class="line">       <span class="keyword">if</span> (loginUser == <span class="literal">null</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> Result.error(<span class="string">&quot;学工号错误&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//用户存在</span></span><br><span class="line">       <span class="keyword">if</span>(Md5Util.getMD5String(password).equals(loginUser.getUserPsw()))&#123;</span><br><span class="line">           Map&lt;String,Object&gt; claims = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">           claims.put(<span class="string">&quot;userID&quot;</span>,loginUser.getUserId());</span><br><span class="line">           claims.put(<span class="string">&quot;userPsw&quot;</span>,loginUser.getUserPsw());</span><br><span class="line">           <span class="comment">//生成token</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> JwtUtil.genToken(claims);</span><br><span class="line">           <span class="keyword">return</span> Result.success(token);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> Result.error(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>拦截器：拦截所有请求，验证是否登录，请求能否处理，就不用在每个模块中写一次token验证代码了</p><blockquote><p>注册（添加）拦截器（放行登陆和注册） + 具体统一的拦截器方法（从map里找令牌，找不到（异常）就拦截，找到了就放行）</p></blockquote><p>新建interceptors文件夹，包下新建LoginInterceptor类，写具体拦截器方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将当前拦截器对象注入容器</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//令牌验证</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Authorization&quot;</span>);</span><br><span class="line">        <span class="comment">// 解析 token</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Map&lt;String,Object&gt; claims = JwtUtil.parseToken(token);</span><br><span class="line">            <span class="comment">// map能找到令牌，放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            response.setStatus(<span class="number">401</span>);</span><br><span class="line">            <span class="comment">// 不放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建配置类文件夹config，新建WebConfig文件，注册拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置类</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginInterceptor loginInterceptor;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">// 注册拦截器.登入接口和注册接口不拦截</span></span><br><span class="line">        registry.addInterceptor(loginInterceptor).excludePathPatterns(<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;/user/register&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="登录优化（待补充）"><a href="#登录优化（待补充）" class="headerlink" title="登录优化（待补充）"></a>登录优化（待补充）</h3><blockquote><p>用户修改密码后应该重新登录，登录成功后应该废弃旧令牌。</p><p>登录成功后，给浏览器相应令牌的同时，把令牌存储到redis中。LoginInterceptor拦截器中，需要验证浏览器携带的令牌，并同时需要获取到redis中存储的相同的令牌。用户修改密码成功后，删除redis中存储的令牌</p></blockquote><p>在pom.xml中导入redis起步依赖，然后刷新maven</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在application.properties中配置redis</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.data.redis.host</span>=<span class="string">localhost</span></span><br><span class="line"><span class="attr">spring.data.redis.port</span>=<span class="string">6379</span></span><br></pre></td></tr></table></figure><h2 id="3-获取用户个人信息"><a href="#3-获取用户个人信息" class="headerlink" title="3.获取用户个人信息"></a>3.获取用户个人信息</h2><blockquote><p>因为在登录这一块做了token验证，所以现在postman中统一注册一下authorization，这样就不用没测试一个模块写一次authorization了。</p></blockquote><p><img src="https://cdn.staticaly.com/gh/orange-xue/PicgoImg@main/img/202505102254781.png" alt="image-20250510225400699"></p><h3 id="基础代码-1"><a href="#基础代码-1" class="headerlink" title="基础代码"></a>基础代码</h3><p>在UserController类中增加一个获取用户个人信息方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;User&gt; <span class="title function_">userInfo</span><span class="params">(<span class="meta">@RequestHeader(name = &quot;Authorization&quot;)</span> String token)</span>&#123;</span><br><span class="line">        <span class="comment">//根据用户id查询用户</span></span><br><span class="line">        Map&lt;String,Object&gt; map = JwtUtil.parseToken(token);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">userID</span> <span class="operator">=</span> (Integer) map.get(<span class="string">&quot;userID&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.findByUserId(userID);</span><br><span class="line">        <span class="keyword">return</span> Result.success(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>用这种方法实现后会发现会直接获得用户密码，不够安全。需要在user实体类上加上注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer userId;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="meta">@JsonIgnore</span> <span class="comment">//让springmvc把当前对象转换成json字符串的时候,忽略password,最终的json字符串中就没有password这个属性了</span></span><br><span class="line">    <span class="keyword">private</span> String userPsw;<span class="comment">//密码</span></span><br><span class="line">    <span class="keyword">private</span> Integer userAuth;</span><br><span class="line">    <span class="keyword">private</span> String userPic;</span><br></pre></td></tr></table></figure><h3 id="ThreadLocal优化"><a href="#ThreadLocal优化" class="headerlink" title="ThreadLocal优化"></a>ThreadLocal优化</h3><blockquote><p>ThreadLocal提供线程局部变量，用来存储数据（set、get方法），并且线程安全。用完调用remove方法释放，不然可能造成内存泄漏。</p></blockquote><p>获取用户个人信息这里需要先解析token获得userid，但是这个在拦截器LoginInterceptor中其实就已经有解析了，所以这里在拦截器中进行设置，将业务数据存储到ThreadLocal中，这样别的业务需要userid的时候就不用每次都解析了，直接在ThreadLocal中取出。</p><p>这里为了方便使用ThreadLocal的get、set、remove等方法，直接将这些重新封装在ThreadLocalUtil工具类中了。</p><p>先修改LoginInterceptor</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//preHandle:请求到达接口之前执行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//令牌验证</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Authorization&quot;</span>);</span><br><span class="line">        <span class="comment">// 解析 token</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Map&lt;String,Object&gt; claims = JwtUtil.parseToken(token);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将业务数据存储到ThreadLocal中</span></span><br><span class="line">            ThreadLocalUtil.set(claims);</span><br><span class="line">            <span class="comment">// 能找到令牌，放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            response.setStatus(<span class="number">401</span>);</span><br><span class="line">            <span class="comment">// 不放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//afterCompletion：处理完试图、模型数据，渲染视图完毕后执行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//清空ThreaLocal中的数据，防止内存泄漏</span></span><br><span class="line">        ThreadLocalUtil.remove();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后修改UserController类中的获取用户个人信息方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;User&gt; <span class="title function_">userInfo</span><span class="params">(<span class="comment">/*@RequestHeader(name = &quot;Authorization&quot;) String token*/</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//根据用户id查询用户</span></span><br><span class="line"><span class="comment">//        Map&lt;String,Object&gt; map = JwtUtil.parseToken(token);</span></span><br><span class="line"><span class="comment">//        Integer userID = (Integer) map.get(&quot;userID&quot;);</span></span><br><span class="line">        Map&lt;String,Object&gt; map = ThreadLocalUtil.get(); <span class="comment">//在拦截器中存的claims是一个map集合，所以这里接收到的也是map集合</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">userID</span> <span class="operator">=</span> (Integer) map.get(<span class="string">&quot;userID&quot;</span>); <span class="comment">//将接受到的数据强制转换为Integer类型</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.findByUserId(userID);</span><br><span class="line">        <span class="keyword">return</span> Result.success(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="4-更新用户个人信息"><a href="#4-更新用户个人信息" class="headerlink" title="4.更新用户个人信息"></a>4.更新用户个人信息</h2><blockquote><p>在usercontroller中添加更新用户信息方法<code>updataUserInfo</code>，这个方法是put请求，所以加上<code>PutMapping</code>注解。前端将更新的用户信息在<strong>请求体中用json格式</strong>发过来，后端使用<code>@RequestBody</code>注解，将前端传回来的json数据转换为实体类对象。在方法体内调用service层方法完成更新。</p></blockquote><h3 id="基础代码-2"><a href="#基础代码-2" class="headerlink" title="基础代码"></a>基础代码</h3><blockquote><table><thead><tr><th align="left">特性</th><th align="left">PATCH</th><th align="left">PUT</th></tr></thead><tbody><tr><td align="left">语义</td><td align="left">部分更新</td><td align="left">完整替换</td></tr><tr><td align="left">请求体要求</td><td align="left">只需包含要修改的字段</td><td align="left">必须包含完整资源表示</td></tr><tr><td align="left">典型用例</td><td align="left">修改用户的邮箱或头像</td><td align="left">替换整个用户资料</td></tr></tbody></table><p>RequestParam从HTTP请求中提取参数，处理简单参数（表单&#x2F;查询字符串）</p><p>RequestBody自动读取请求体中的参数，处理 复杂 JSON&#x2F;XML 数据（需 <code>Content-Type: application/json</code>）。</p><p>使用URL注解对输入的图像地址进行校验</p></blockquote><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新用户头像</span></span><br><span class="line">    <span class="meta">@PatchMapping(&quot;/updateAvatar&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">updateAvatar</span><span class="params">(<span class="meta">@RequestParam</span> <span class="meta">@URL</span> String avatarUrl)</span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = ThreadLocalUtil.get(); <span class="comment">//在拦截器中存的claims是一个map集合，所以这里接收到的也是map集合</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">userID</span> <span class="operator">=</span> (Integer) map.get(<span class="string">&quot;userID&quot;</span>); <span class="comment">//将接受到的数据强制转换为Integer类型</span></span><br><span class="line"></span><br><span class="line">        userService.updateAvatar(avatarUrl,userID);</span><br><span class="line">        <span class="keyword">return</span> Result.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新用户密码</span></span><br><span class="line">    <span class="meta">@PatchMapping(&quot;/updataPwd&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">updataPwd</span><span class="params">(<span class="meta">@RequestBody</span> Map&lt;String,String&gt; params)</span>&#123;</span><br><span class="line">        <span class="comment">//1.校验参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">oldPwd</span> <span class="operator">=</span> params.get(<span class="string">&quot;old_pwd&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newPwd</span> <span class="operator">=</span> params.get(<span class="string">&quot;new_pwd&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">rePwd</span> <span class="operator">=</span> params.get(<span class="string">&quot;re_pwd&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasLength(oldPwd) || !StringUtils.hasLength(newPwd) || !StringUtils.hasLength(rePwd))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;缺少必要参数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//1.1原密码是否正确</span></span><br><span class="line">        <span class="comment">//调用userService根据用户id拿到原密码，再和这里前端传的old_psw比较</span></span><br><span class="line">        Map&lt;String,Object&gt; map = ThreadLocalUtil.get();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">userID</span> <span class="operator">=</span> (Integer) map.get(<span class="string">&quot;userID&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.findByUserId(userID);</span><br><span class="line">        <span class="keyword">if</span>(!loginUser.getUserPsw().equals(Md5Util.getMD5String(oldPwd)))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;原密码填写错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//校验重复填写的新密码</span></span><br><span class="line">        <span class="keyword">if</span>(!rePwd.equals(newPwd))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;两次填写的新密码不一样&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.调用service完成密码更新</span></span><br><span class="line">        userService.updataPwd(newPwd);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Result.success();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>UserService(接口)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新头像</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updateAvatar</span><span class="params">(String avatarUrl, Integer userID)</span>;</span><br><span class="line"><span class="comment">//更新密码</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updataPwd</span><span class="params">(String newPwd)</span>;</span><br></pre></td></tr></table></figure><p>UserServiceimpl（实现类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新头像</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateAvatar</span><span class="params">(String avatarUrl)</span> &#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = ThreadLocalUtil.get(); <span class="comment">//在拦截器中存的claims是一个map集合，所以这里接收到的也是map集合</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">userID</span> <span class="operator">=</span> (Integer) map.get(<span class="string">&quot;userID&quot;</span>); <span class="comment">//将接受到的数据强制转换为Integer类型</span></span><br><span class="line">        userMapper.updateAvatar(avatarUrl,userID);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//更新密码</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updataPwd</span><span class="params">(String newPwd)</span> &#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = ThreadLocalUtil.get(); <span class="comment">//在拦截器中存的claims是一个map集合，所以这里接收到的也是map集合</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">userID</span> <span class="operator">=</span> (Integer) map.get(<span class="string">&quot;userID&quot;</span>); <span class="comment">//将接受到的数据强制转换为Integer类型</span></span><br><span class="line">        <span class="comment">//对密码加密</span></span><br><span class="line">        userMapper.updataPwd(Md5Util.getMD5String(newPwd),userID);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>UserMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新用户头像</span></span><br><span class="line">    <span class="meta">@Update(&quot;update usermsg set userPic=#&#123;avatarUrl&#125; where userID=#&#123;userID&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updateAvatar</span><span class="params">(String avatarUrl, Integer userID)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新密码</span></span><br><span class="line">    <span class="meta">@Update(&quot;update usermsg set userPsw=#&#123;md5String&#125; where userID=#&#123;userID&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updataPwd</span><span class="params">(String md5String,Integer userID)</span>;</span><br></pre></td></tr></table></figure><hr><blockquote><p>修改基本信息这块，本项目暂时用不到，姓名、院系这些修改应该是得申请或者管理员直接修改的。留个代码备注好了，说不定以后能用到。</p></blockquote><p>UserController中新增一个方法。注意这里是PutMapping注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新用户基本信息，比如姓名邮箱什么的</span></span><br><span class="line"><span class="comment">//Validated注解详见本文实体参数校验部分</span></span><br><span class="line">    <span class="meta">@PutMapping(&quot;/updataUserInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">updataUserInfo</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated</span> User user)</span>&#123;</span><br><span class="line">        userService.updateUserInfo(user);</span><br><span class="line">        <span class="keyword">return</span> Result.success();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>UserService类中新增一个方法（直接在UserController的updataUserInfo方法中用快捷键创建即可）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">updateUserInfo</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><p>UserServiceimpl中新增方法（UserService中点updateUserInfo，然后快捷键）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUserInfo</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        userMapper.updateUserInfo(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>UserMapper中写接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Update(&quot;update usermsg set userName=#&#123;userName&#125;,userDepartment=#&#123;userDepartment&#125; where userID=#&#123;userID&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updateUserInfo</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><h3 id="实体参数校验"><a href="#实体参数校验" class="headerlink" title="实体参数校验"></a>实体参数校验</h3><blockquote><p>注册部分实现了请求参数的校验，这里将所有参数封装到实体类对象中了，所以不能直接在传入的参数上用pattern注解了。</p></blockquote><p>s1.在User实体类中加上注解。s2.在使用这个实体类的地方加上validated注解。</p><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>NotNull</td><td>值不能为null</td></tr><tr><td>NotEmpty</td><td>值不能为null，且内容不为空</td></tr><tr><td>Email</td><td>满足邮箱格式</td></tr></tbody></table><p>s1.User实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> Integer userID;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotEmpty</span></span><br><span class="line">    <span class="meta">@Pattern(regexp = &quot;^\\S&#123;1,10&#125;$&quot;)</span> <span class="comment">//可以在这里加正则校验</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="meta">@JsonIgnore</span> <span class="comment">//让springmvc把当前对象转换成json字符串的时候,忽略userPsw,最终的json字符串中就没有userPsw这个属性了</span></span><br><span class="line">    <span class="meta">@NotEmpty</span></span><br><span class="line">    <span class="keyword">private</span> String userPsw;<span class="comment">//密码</span></span><br><span class="line">    <span class="keyword">private</span> Integer userAuth;</span><br><span class="line">    <span class="keyword">private</span> String userDepartment;</span><br><span class="line">    <span class="keyword">private</span> String userPic;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>s2.在usercontroller中的updataUserInfo方法中添加<code>Validated</code>注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/updataUserInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">updataUserInfo</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated</span> User user)</span>&#123;</span><br><span class="line">        userService.updateUserInfo(user);</span><br><span class="line">        <span class="keyword">return</span> Result.success();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="5-学生信息"><a href="#5-学生信息" class="headerlink" title="5.学生信息"></a>5.学生信息</h2><p>StuController–StuService(接口)–StuServiceimpl（实现类）–StuMapper</p><h3 id="增删改"><a href="#增删改" class="headerlink" title="增删改"></a>增删改</h3><blockquote><p>点击新增按钮，出现弹窗，填写姓名学号性别，专业院系，入学分数（可空），出生年月（可空）生源地，籍贯，简介（可空），上传照片。</p><p>这里在前端做个校验，如果用户权限是1，点击新增的时候院系那一栏出现所有院系，否则直接显示本院</p></blockquote><p>StuController类中写新增，修改学生信息方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/student&quot;)</span></span><br><span class="line"><span class="meta">@Validated</span><span class="comment">//正则参数校验注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StuController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StuService stuService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增学生。post创建数据</span></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">addStu</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated</span> Stu stu)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> stuService.addStu(stu);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改学生信息</span></span><br><span class="line">    <span class="meta">@PutMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">updateStu</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated</span> Stu stu)</span>&#123;</span><br><span class="line">        stuService.updateStu(stu);</span><br><span class="line">        <span class="keyword">return</span> Result.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除学生信息</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/deleteStu&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">deleteStu</span><span class="params">(<span class="meta">@RequestParam</span> String stuID)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> stuService.deleteStu(stuID);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>StuService(接口)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">StuService</span> &#123;</span><br><span class="line">    <span class="comment">//新增学生信息</span></span><br><span class="line">    Result <span class="title function_">addStu</span><span class="params">(Stu stu)</span>;</span><br><span class="line">    <span class="comment">//更新学生信息</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updateStu</span><span class="params">(Stu stu)</span>;</span><br><span class="line">    <span class="comment">//删除单个学生</span></span><br><span class="line">    Result <span class="title function_">deleteStu</span><span class="params">(String stuID)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>StuServiceimpl（实现类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StuServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">StuService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StuMapper stuMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">addStu</span><span class="params">(Stu stu)</span> &#123;</span><br><span class="line">        <span class="comment">// 检查学生ID是否已存在</span></span><br><span class="line">        <span class="keyword">if</span>(stuMapper.countByStuID(stu.getStuID()))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;学生ID已存在，不能重复添加&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        stuMapper.addStu(stu);</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateStu</span><span class="params">(Stu stu)</span> &#123;</span><br><span class="line">        stuMapper.updateStu(stu);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">deleteStu</span><span class="params">(String stuID)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!stuMapper.deleteStu(stuID))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;删除失败，学生ID不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>StuMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">StuMapper</span> &#123;</span><br><span class="line">    <span class="comment">//判断该id是否已经存在</span></span><br><span class="line">    <span class="meta">@Select(&quot;select count(*) from student where stu_id = #&#123;stuID&#125;&quot;)</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">countByStuID</span><span class="params">(String stuID)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增学生</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into student(stu_id, name, gender, origin_pro, native_pro, birth, major, department, grade, tel,img, profile) &quot; +</span></span><br><span class="line"><span class="meta">            &quot;values (#&#123;stuID&#125;,#&#123;name&#125;,#&#123;gender&#125;,#&#123;originPro&#125;,#&#123;nativePro&#125;,#&#123;birth&#125;,#&#123;major&#125;,#&#123;department&#125;,#&#123;grade&#125;,#&#123;tel&#125;,#&#123;img&#125;,#&#123;profile&#125;)&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">addStu</span><span class="params">(Stu stu)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改学生信息</span></span><br><span class="line">    <span class="meta">@Update(&quot;update student set name=#&#123;name&#125;, gender=#&#123;gender&#125;, origin_pro=#&#123;originPro&#125;, native_pro=#&#123;nativePro&#125;, &quot; +</span></span><br><span class="line"><span class="meta">            &quot;birth=#&#123;birth&#125;, major=#&#123;major&#125;, department=#&#123;department&#125;, grade=#&#123;grade&#125;, tel=#&#123;tel&#125;, &quot; +</span></span><br><span class="line"><span class="meta">            &quot;img=#&#123;img&#125;, profile=#&#123;profile&#125; where stu_id=#&#123;stuID&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updateStu</span><span class="params">(Stu stu)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//根据学生id删除学生信息（单个）</span></span><br><span class="line">    <span class="meta">@Delete(&quot;DELETE FROM student WHERE stu_id = #&#123;stuID&#125;&quot;)</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">deleteStu</span><span class="params">(String stuID)</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查询权限范围内所有学生信息"><a href="#查询权限范围内所有学生信息" class="headerlink" title="查询权限范围内所有学生信息"></a>查询权限范围内所有学生信息</h3><p>StuController类中写查询学生信息方法。</p><blockquote><p>这里注意，UserController中的login登录方法中需要将这里用到的userAuth和userDepartment两个变量push到claims中，并且在postman中测试时需要重新登陆，因为原本登录的时候令牌中是没有这两个参数变量的</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点击首页，显示权限范围内所有的学生信息。和新增学生的请求路径一样，通过请求方式来区分</span></span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;List&lt;Stu&gt;&gt; <span class="title function_">getAllStudents</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = ThreadLocalUtil.get(); <span class="comment">//在拦截器中存的claims是一个map集合，所以这里接收到的也是map集合</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">userAuth</span> <span class="operator">=</span> (Integer) map.get(<span class="string">&quot;userAuth&quot;</span>); <span class="comment">//获取当前的用户权限</span></span><br><span class="line">        <span class="keyword">if</span>(userAuth == <span class="number">1</span>)&#123;<span class="comment">//全校权限，所有人的都能查看</span></span><br><span class="line">            <span class="keyword">return</span> Result.success(stuService.getAllStudents());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//否则只能查看本学院的学生信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userDepartment</span> <span class="operator">=</span> (String) map.get(<span class="string">&quot;userDepartment&quot;</span>);</span><br><span class="line">        List&lt;Stu&gt; students = stuService.getDepartmentStudents(userDepartment);</span><br><span class="line">        <span class="keyword">return</span> Result.success(students);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>StuService(接口)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询所有学生信息</span></span><br><span class="line">List&lt;Stu&gt; <span class="title function_">getAllStudents</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询本院学生信息</span></span><br><span class="line">List&lt;Stu&gt; <span class="title function_">getDepartmentStudents</span><span class="params">(String userDepartment)</span>;</span><br></pre></td></tr></table></figure><p>StuServiceimpl（实现类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Stu&gt; <span class="title function_">getAllStudents</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> stuMapper.getAllStudents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Stu&gt; <span class="title function_">getDepartmentStudents</span><span class="params">(String userDepartment)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> stuMapper.getDepartmentStudents(userDepartment);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>StuMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找所有学生信息</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from student&quot;)</span></span><br><span class="line">    List&lt;Stu&gt; <span class="title function_">getAllStudents</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看本院学生信息</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from student where department=#&#123;userDepartment&#125;&quot;)</span></span><br><span class="line">    List&lt;Stu&gt; <span class="title function_">getDepartmentStudents</span><span class="params">(String userDepartment)</span>;</span><br></pre></td></tr></table></figure><h3 id="条件查询（带分页）"><a href="#条件查询（带分页）" class="headerlink" title="条件查询（带分页）"></a>条件查询（带分页）</h3><p>在pom.xml中引入pagehelper起步依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在pojo中建立分页PageBean这个实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageBean</span> &lt;T&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> total;<span class="comment">//总条数</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; items;<span class="comment">//当前页数据集合</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getTotal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotal</span><span class="params">(<span class="type">long</span> total)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.total = total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;T&gt; <span class="title function_">getItems</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> items;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setItems</span><span class="params">(List&lt;T&gt; items)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.items = items;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在pojo中创建StuQueryDTO这个实体类。因为前端传过来的查询条件和stu类不一样，更细一点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StuQueryDTO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String stuID;        <span class="comment">// 学号精确查询</span></span><br><span class="line">    <span class="keyword">private</span> String stuIDMin;     <span class="comment">// 学号范围查询-最小值</span></span><br><span class="line">    <span class="keyword">private</span> String stuIDMax;     <span class="comment">// 学号范围查询-最大值</span></span><br><span class="line">    <span class="keyword">private</span> String name;         <span class="comment">// 姓名模糊查询</span></span><br><span class="line">    <span class="keyword">private</span> String gender;       <span class="comment">// 性别精确查询</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; originPros; <span class="comment">// 生源地多选查询</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; nativePros; <span class="comment">// 籍贯多选查询</span></span><br><span class="line">    <span class="keyword">private</span> LocalDate birthMin;  <span class="comment">// 生日范围查询-最小值</span></span><br><span class="line">    <span class="keyword">private</span> LocalDate birthMax;  <span class="comment">// 生日范围查询-最大值</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; majors;    <span class="comment">// 专业多选查询</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; departments;<span class="comment">// 院系多选查询</span></span><br><span class="line">    <span class="keyword">private</span> Float gradeMin;      <span class="comment">// 分数范围查询-最小值</span></span><br><span class="line">    <span class="keyword">private</span> Float gradeMax;      <span class="comment">// 分数范围查询-最大值</span></span><br><span class="line">    <span class="keyword">private</span> String tel;         <span class="comment">// 电话模糊查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//getter setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>StuController类中写条件查询学生信息方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//条件查询带分页</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/conditionSearch&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;PageBean&lt;Stu&gt;&gt; <span class="title function_">stuList</span><span class="params">(//PageBean中的泛型用来描述当前页每一条数据的类型。</span></span><br><span class="line"><span class="params">            //<span class="meta">@RequestBody</span> Stu stu,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestBody(required = false)</span> StuQueryDTO queryDTO,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pageNum,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false, defaultValue = &quot;10&quot;)</span> Integer pageSize</span></span><br><span class="line"><span class="params">    )</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//PageBean&lt;Stu&gt; pb = stuService.stuList(stu, pageNum, pageSize);</span></span><br><span class="line">            PageBean&lt;Stu&gt; pb = stuService.stuList(queryDTO, pageNum, pageSize);</span><br><span class="line">            <span class="keyword">return</span> Result.success(pb);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalStateException e) &#123;</span><br><span class="line">            <span class="comment">// 捕获权限错误并返回前端</span></span><br><span class="line">            <span class="keyword">return</span> Result.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>StuService(接口)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//条件查询</span></span><br><span class="line"><span class="comment">//PageBean&lt;Stu&gt; stuList(Stu stu, Integer pageNum, Integer pageSize);</span></span><br><span class="line">PageBean&lt;Stu&gt; <span class="title function_">stuList</span><span class="params">(StuQueryDTO queryDTO, Integer pageNum, Integer pageSize)</span>;</span><br></pre></td></tr></table></figure><p>StuServiceimpl（实现类）</p><blockquote><p>分页方法说明：</p><ul><li><p><code>PageHelper.startPage()</code>会在当前线程设置分页参数，后续执行的<strong>第一个</strong>MyBatis查询会自动被拦截：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 原始SQL</span><br><span class="line">SELECT * FROM student</span><br><span class="line">-- 被改写为</span><br><span class="line">SELECT * FROM student LIMIT offset, pageSize</span><br></pre></td></tr></table></figure><p>同时自动执行<code>COUNT(*)</code>查询获取总记录数</p></li><li><pre><code class="java">// List转为Page对象后可以获取：studengPage.getTotal();  // 总记录数（非分页的COUNT值）studengPage.getResult(); // 当前页数据列表<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```java</span><br><span class="line">@Override</span><br><span class="line">   //public PageBean&lt;Stu&gt; stuList(Stu stu, Integer pageNum, Integer pageSize) &#123;</span><br><span class="line">   public PageBean&lt;Stu&gt; stuList(StuQueryDTO queryDTO, Integer pageNum, Integer pageSize) &#123;</span><br><span class="line">       //1.构建PageBean对象</span><br><span class="line">       PageBean&lt;Stu&gt; pageBean = new PageBean&lt;&gt;();</span><br><span class="line"></span><br><span class="line">       //2.开启分页查询,用mybatis中的pageHelper做分页</span><br><span class="line">       // pagehelp会自动将这两个参数拼接到sql语句的limit后面，所以mapper接口这里就不用再传这两个参数了</span><br><span class="line">       PageHelper.startPage(pageNum, pageSize);</span><br><span class="line">       </span><br><span class="line">       //3.调用Mapper完成查询</span><br><span class="line">       Map&lt;String,Object&gt; map = ThreadLocalUtil.get(); //获取拦截器中的claims</span><br><span class="line">       Integer userAuth = (Integer) map.get(&quot;userAuth&quot;); //获取当前的用户权限</span><br><span class="line">       String userDepartment = (String) map.get(&quot;userDepartment&quot;); //获取用户所属学院</span><br><span class="line"></span><br><span class="line">       //如果stu为null，那就是直接显示权限内所有学生信息，跳过if</span><br><span class="line">       //如果用户权限是2且尝试检索非本院学生，直接抛出异常</span><br><span class="line">       if(queryDTO != null &amp;&amp; userAuth == 2 &amp;&amp; queryDTO.getDepartments() != null</span><br><span class="line">               &amp;&amp; !queryDTO.getDepartments().equals(userDepartment))&#123;</span><br><span class="line">           throw new IllegalStateException(&quot;不能检索非本院学生&quot;);</span><br><span class="line">       &#125;</span><br><span class="line">       //否则正常检索</span><br><span class="line">       List&lt;Stu&gt; studengMsg= stuMapper.stuList(userAuth,userDepartment,queryDTO);</span><br><span class="line">       //强转，Page中提供了方法，可以获取PageHelper分页查询后得到的总记录条数和当前页数据</span><br><span class="line">       Page&lt;Stu&gt; studengPage = (Page&lt;Stu&gt;) studengMsg;</span><br><span class="line"></span><br><span class="line">       //将数据填充到PageBean对象中</span><br><span class="line">       pageBean.setTotal(studengPage.getTotal());</span><br><span class="line">       pageBean.setItems(studengPage.getResult());</span><br><span class="line"></span><br><span class="line">       return pageBean;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></blockquote><p>StuMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//条件查询</span></span><br><span class="line">    <span class="comment">//List&lt;Stu&gt; stuList(Integer userAuth, String userDepartment, Stu stu);</span></span><br><span class="line">List&lt;Stu&gt; <span class="title function_">stuList</span><span class="params">(Integer userAuth, String userDepartment, StuQueryDTO queryDTO)</span>;</span><br></pre></td></tr></table></figure><p>StuMapper.xml</p><blockquote><p>条件检索要用动态sql，使用映射文件。这里stu.stuID !&#x3D; ‘’不能删，如果删了，在测试的时候如果传了参数，又没有给参数赋值，那就会拿个空值去数据库匹配，即使有符合条件的数据，也会因为这个空值导致查找错误。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.stubackend.mapper.StuMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;stuList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.stubackend.pojo.Stu&quot;</span>&gt;</span></span><br><span class="line">        select * from student</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 学号范围查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.stuID != null and queryDTO.stuID != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                AND stu_id LIKE CONCAT(&#x27;%&#x27;, #&#123;queryDTO.stuID&#125;, &#x27;%&#x27;)</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.stuIDMin != null and queryDTO.stuIDMin != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                AND stu_id &gt;= #&#123;queryDTO.stuIDMin&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.stuIDMax != null and queryDTO.stuIDMax != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                AND stu_id <span class="symbol">&amp;lt;</span>= #&#123;queryDTO.stuIDMax&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 姓名模糊查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.name != null and queryDTO.name != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                AND name LIKE CONCAT(&#x27;%&#x27;, #&#123;queryDTO.name&#125;, &#x27;%&#x27;)</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 性别精确查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.gender != null and queryDTO.gender != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                AND gender = #&#123;queryDTO.gender&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 生源地多选查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.originPros != null and !queryDTO.originPros.isEmpty()&quot;</span>&gt;</span></span><br><span class="line">                AND origin_pro IN</span><br><span class="line">                <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;queryDTO.originPros&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">                    #&#123;item&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 籍贯多选查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.nativePros != null and !queryDTO.nativePros.isEmpty()&quot;</span>&gt;</span></span><br><span class="line">                AND native_pro IN</span><br><span class="line">                <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;queryDTO.nativePros&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">                    #&#123;item&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 生日范围查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.birthMin != null&quot;</span>&gt;</span></span><br><span class="line">                AND birth &gt;= #&#123;queryDTO.birthMin&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.birthMax != null&quot;</span>&gt;</span></span><br><span class="line">                AND birth <span class="symbol">&amp;lt;</span>= #&#123;queryDTO.birthMax&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 专业多选查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.majors != null and !queryDTO.majors.isEmpty()&quot;</span>&gt;</span></span><br><span class="line">                AND major IN</span><br><span class="line">                <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;queryDTO.majors&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">                    #&#123;item&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 院系多选查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.departments != null and !queryDTO.departments.isEmpty()&quot;</span>&gt;</span></span><br><span class="line">                AND department IN</span><br><span class="line">                <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;queryDTO.departments&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">                    #&#123;item&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 分数范围查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.gradeMin != null&quot;</span>&gt;</span></span><br><span class="line">                AND grade &gt;= #&#123;queryDTO.gradeMin&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.gradeMax != null&quot;</span>&gt;</span></span><br><span class="line">                AND grade <span class="symbol">&amp;lt;</span>= #&#123;queryDTO.gradeMax&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 电话模糊查询 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;queryDTO.tel != null and queryDTO.tel != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                AND tel LIKE CONCAT(&#x27;%&#x27;, #&#123;queryDTO.tel&#125;, &#x27;%&#x27;)</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 权限控制 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;userAuth == 1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 管理员可以查看所有学生 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;userAuth == 2&quot;</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 教师只能查看本院学生 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userDepartment != null and userDepartment != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                        AND department = #&#123;userDepartment&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="查询所有、本院学生信息-修改"><a href="#查询所有、本院学生信息-修改" class="headerlink" title="查询所有、本院学生信息-修改"></a>查询所有、本院学生信息-修改</h3><blockquote><p>这里可以直接用条件查询方法，这样还能修改分页</p><p>pageSize：每页显示的记录数<br>pageNum：当前页为第几页</p><p>目前默认每页显示10条记录，当前在第1页。</p></blockquote><p>将StuController中的方法改为一下代码，然后将StuService(接口)，StuServiceimpl（实现类），StuMapper这几个文件中原有的查询部分代码注释掉即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;PageBean&lt;Stu&gt;&gt; <span class="title function_">getAllStudents</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pageNum,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false, defaultValue = &quot;10&quot;)</span> Integer pageSize</span></span><br><span class="line"><span class="params">    )</span> &#123;</span><br><span class="line">        PageBean&lt;Stu&gt; pageBean = stuService.stuList(<span class="literal">null</span>, pageNum, pageSize);</span><br><span class="line">        <span class="keyword">return</span> Result.success(pageBean);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="查询权限内所有学生信息"><a href="#查询权限内所有学生信息" class="headerlink" title="查询权限内所有学生信息"></a>查询权限内所有学生信息</h3><blockquote><p>在有分页查询的基础上再去定义普通查询的时候，需要给分页关闭，否则sql只会强制返回初始时设定的每页数据的条数。</p></blockquote><p>StuServiceimpl（实现类）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Override</span></span><br><span class="line">    public <span class="title class_">List</span>&lt;<span class="title class_">Stu</span>&gt; <span class="title function_">getAllWithoutPage</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 关闭分页</span></span><br><span class="line">        <span class="title class_">PageHelper</span>.<span class="title function_">clearPage</span>();</span><br><span class="line">        <span class="keyword">return</span> stuMapper.<span class="title function_">getAllWithoutPage</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Override</span></span><br><span class="line">    public <span class="title class_">List</span>&lt;<span class="title class_">Stu</span>&gt; <span class="title function_">getDepartmentgetWithoutPage</span>(<span class="params"><span class="built_in">String</span> userDepartment</span>) &#123;</span><br><span class="line">        <span class="comment">// 关闭分页</span></span><br><span class="line">        <span class="title class_">PageHelper</span>.<span class="title function_">clearPage</span>();</span><br><span class="line">        <span class="keyword">return</span> stuMapper.<span class="title function_">getDepartmentgetWithoutPage</span>(userDepartment);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="自定义注解（待补充）"><a href="#自定义注解（待补充）" class="headerlink" title="自定义注解（待补充）"></a>自定义注解（待补充）</h3><blockquote><p>已有注解不能满足所有的校验需求，进行自定义注解</p></blockquote><h2 id="6-获取所有院系、专业"><a href="#6-获取所有院系、专业" class="headerlink" title="6.获取所有院系、专业"></a>6.获取所有院系、专业</h2><p>src&#x2F;main&#x2F;java&#x2F;stubackend&#x2F;controller&#x2F;DepartController</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">RestController</span></span><br><span class="line">@<span class="title class_">RequestMapping</span>(<span class="string">&quot;/departMajor&quot;</span>)</span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">DepartController</span> &#123;</span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">DepartService</span> departService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 查询权限范围内所有院系-专业组合</span></span><br><span class="line">    @<span class="title class_">GetMapping</span>(<span class="string">&quot;/DepartAndMajor&quot;</span>)</span><br><span class="line">    public <span class="title class_">Result</span>&lt;<span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt;&gt;&gt; <span class="title function_">getAllCombinations</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">Object</span>&gt; userInfo = <span class="title class_">ThreadLocalUtil</span>.<span class="title function_">get</span>();</span><br><span class="line">        <span class="title class_">Integer</span> userAuth = (<span class="title class_">Integer</span>) userInfo.<span class="title function_">get</span>(<span class="string">&quot;userAuth&quot;</span>);</span><br><span class="line">        <span class="title class_">String</span> userDepartment = (<span class="title class_">String</span>) userInfo.<span class="title function_">get</span>(<span class="string">&quot;userDepartment&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt;&gt; combinations = departService.<span class="title function_">getAllCombinations</span>(userAuth, userDepartment);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Result</span>.<span class="title function_">success</span>(combinations);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 查询权限范围内所有院系</span></span><br><span class="line">    @<span class="title class_">GetMapping</span>(<span class="string">&quot;/departments&quot;</span>)</span><br><span class="line">    public <span class="title class_">Result</span>&lt;<span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt;&gt; <span class="title function_">getAllDepartments</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">Object</span>&gt; userInfo = <span class="title class_">ThreadLocalUtil</span>.<span class="title function_">get</span>();</span><br><span class="line">        <span class="title class_">Integer</span> userAuth = (<span class="title class_">Integer</span>) userInfo.<span class="title function_">get</span>(<span class="string">&quot;userAuth&quot;</span>);</span><br><span class="line">        <span class="title class_">String</span> userDepartment = (<span class="title class_">String</span>) userInfo.<span class="title function_">get</span>(<span class="string">&quot;userDepartment&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; departments = departService.<span class="title function_">getAllDepartments</span>(userAuth, userDepartment);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Result</span>.<span class="title function_">success</span>(departments);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 查询权限范围内所有专业</span></span><br><span class="line">    @<span class="title class_">GetMapping</span>(<span class="string">&quot;/majors&quot;</span>)</span><br><span class="line">    public <span class="title class_">Result</span>&lt;<span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt;&gt; <span class="title function_">getAllMajors</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">Object</span>&gt; userInfo = <span class="title class_">ThreadLocalUtil</span>.<span class="title function_">get</span>();</span><br><span class="line">        <span class="title class_">Integer</span> userAuth = (<span class="title class_">Integer</span>) userInfo.<span class="title function_">get</span>(<span class="string">&quot;userAuth&quot;</span>);</span><br><span class="line">        <span class="title class_">String</span> userDepartment = (<span class="title class_">String</span>) userInfo.<span class="title function_">get</span>(<span class="string">&quot;userDepartment&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; majors = departService.<span class="title function_">getAllMajors</span>(userAuth, userDepartment);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Result</span>.<span class="title function_">success</span>(majors);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DepartService.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public interface <span class="title class_">DepartService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt;&gt; <span class="title function_">getAllCombinations</span>(<span class="title class_">Integer</span> userAuth, <span class="title class_">String</span> userDepartment);</span><br><span class="line"></span><br><span class="line">    <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">getAllDepartments</span>(<span class="title class_">Integer</span> userAuth, <span class="title class_">String</span> userDepartment);</span><br><span class="line"></span><br><span class="line">    <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">getAllMajors</span>(<span class="title class_">Integer</span> userAuth, <span class="title class_">String</span> userDepartment);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>DepartServiceImpl</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">DepartServiceImpl</span> implements <span class="title class_">DepartService</span> &#123;</span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">DepartMapper</span> departMapper;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Override</span></span><br><span class="line">    public <span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt;&gt; <span class="title function_">getAllCombinations</span>(<span class="params">Integer userAuth, <span class="built_in">String</span> userDepartment</span>) &#123;</span><br><span class="line">        <span class="title class_">List</span>&lt;<span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">String</span>&gt;&gt; combinations;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (userAuth == <span class="number">1</span>) &#123; <span class="comment">// 全校权限</span></span><br><span class="line">            combinations = departMapper.<span class="title function_">getAllCombinations</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 院系权限</span></span><br><span class="line">            combinations = departMapper.<span class="title function_">getAllCombinationsByD</span>(userDepartment);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转换为院系为key，专业列表为value的Map</span></span><br><span class="line">        <span class="keyword">return</span> combinations.<span class="title function_">stream</span>()</span><br><span class="line">                .<span class="title function_">collect</span>(<span class="title class_">Collectors</span>.<span class="title function_">groupingBy</span>(</span><br><span class="line">                        map -&gt; map.<span class="title function_">get</span>(<span class="string">&quot;department&quot;</span>),</span><br><span class="line">                        <span class="title class_">Collectors</span>.<span class="title function_">mapping</span>(</span><br><span class="line">                                map -&gt; map.<span class="title function_">get</span>(<span class="string">&quot;major&quot;</span>),</span><br><span class="line">                                <span class="title class_">Collectors</span>.<span class="title function_">toList</span>()</span><br><span class="line">                        )</span><br><span class="line">                ));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Override</span></span><br><span class="line">    public <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">getAllDepartments</span>(<span class="params">Integer userAuth, <span class="built_in">String</span> userDepartment</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (userAuth == <span class="number">1</span>) &#123; <span class="comment">// 全校权限</span></span><br><span class="line">            <span class="keyword">return</span> departMapper.<span class="title function_">getAllDepartments</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 院系权限</span></span><br><span class="line">            <span class="keyword">return</span> departMapper.<span class="title function_">getDepartmentsByD</span>(userDepartment);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Override</span></span><br><span class="line">    public <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">getAllMajors</span>(<span class="params">Integer userAuth, <span class="built_in">String</span> userDepartment</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (userAuth == <span class="number">1</span>) &#123; <span class="comment">// 全校权限</span></span><br><span class="line">            <span class="keyword">return</span> departMapper.<span class="title function_">getAllMajors</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 院系权限</span></span><br><span class="line">            <span class="keyword">return</span> departMapper.<span class="title function_">getMajorsByD</span>(userDepartment);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DepartMapper.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Mapper</span></span><br><span class="line">public interface <span class="title class_">DepartMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取所有院系-专业组合</span></span><br><span class="line">    @<span class="title class_">Select</span>(<span class="string">&quot;SELECT department, major FROM allmajor&quot;</span>)</span><br><span class="line">    <span class="title class_">List</span>&lt;<span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">String</span>&gt;&gt; <span class="title function_">getAllCombinations</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据院系获取院系-专业组合</span></span><br><span class="line">    @<span class="title class_">Select</span>(<span class="string">&quot;SELECT department, major FROM allmajor WHERE department = #&#123;userDepartment&#125;&quot;</span>)</span><br><span class="line">    <span class="title class_">List</span>&lt;<span class="title class_">Map</span>&lt;<span class="title class_">String</span>, <span class="title class_">String</span>&gt;&gt; <span class="title function_">getAllCombinationsByD</span>(<span class="title class_">String</span> userDepartment);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取所有院系(去重)</span></span><br><span class="line">    @<span class="title class_">Select</span>(<span class="string">&quot;SELECT DISTINCT department FROM allmajor&quot;</span>)</span><br><span class="line">    <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">getAllDepartments</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据院系获取院系(实际就是返回该院系)</span></span><br><span class="line">    @<span class="title class_">Select</span>(<span class="string">&quot;SELECT DISTINCT department FROM allmajor WHERE department = #&#123;userDepartment&#125;&quot;</span>)</span><br><span class="line">    <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">getDepartmentsByD</span>(<span class="title class_">String</span> userDepartment);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取所有专业(去重)</span></span><br><span class="line">    @<span class="title class_">Select</span>(<span class="string">&quot;SELECT DISTINCT major FROM allmajor&quot;</span>)</span><br><span class="line">    <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">getAllMajors</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据院系获取专业(去重)</span></span><br><span class="line">    @<span class="title class_">Select</span>(<span class="string">&quot;SELECT DISTINCT major FROM allmajor WHERE department = #&#123;userDepartment&#125; &quot;</span>)</span><br><span class="line">    <span class="title class_">List</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">getMajorsByD</span>(<span class="title class_">String</span> userDepartment);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="utils工具类代码合集"><a href="#utils工具类代码合集" class="headerlink" title="utils工具类代码合集"></a>utils工具类代码合集</h2><p>Md5Util</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.stubackend.utils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Md5Util</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认的密码字符串组合，用来将字节转换成 16 进制表示的字符,apache校验下载的文件的正确性用的就是默认的这个组合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="type">char</span> hexDigits[] = &#123;<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="type">MessageDigest</span> <span class="variable">messagedigest</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            messagedigest = MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException nsaex) &#123;</span><br><span class="line">            System.err.println(Md5Util.class.getName() + <span class="string">&quot;初始化失败，MessageDigest不支持MD5Util。&quot;</span>);</span><br><span class="line">            nsaex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成字符串的md5校验值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> s</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getMD5String</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getMD5String(s.getBytes());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断字符串的md5校验码是否与一个已知的md5码相匹配</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password  要校验的字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> md5PwdStr 已知的md5校验码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkPassword</span><span class="params">(String password, String md5PwdStr)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> getMD5String(password);</span><br><span class="line">        <span class="keyword">return</span> s.equals(md5PwdStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getMD5String</span><span class="params">(<span class="type">byte</span>[] bytes)</span> &#123;</span><br><span class="line">        messagedigest.update(bytes);</span><br><span class="line">        <span class="keyword">return</span> bufferToHex(messagedigest.digest());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">bufferToHex</span><span class="params">(<span class="type">byte</span> bytes[])</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bufferToHex(bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">bufferToHex</span><span class="params">(<span class="type">byte</span> bytes[], <span class="type">int</span> m, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">stringbuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="number">2</span> * n);</span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> m + n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> m; l &lt; k; l++) &#123;</span><br><span class="line">            appendHexPair(bytes[l], stringbuffer);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stringbuffer.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">appendHexPair</span><span class="params">(<span class="type">byte</span> bt, StringBuffer stringbuffer)</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c0</span> <span class="operator">=</span> hexDigits[(bt &amp; <span class="number">0xf0</span>) &gt;&gt; <span class="number">4</span>];<span class="comment">// 取字节中高 4 位的数字转换, &gt;&gt;&gt;</span></span><br><span class="line">        <span class="comment">// 为逻辑右移，将符号位一起右移,此处未发现两种符号有何不同</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> hexDigits[bt &amp; <span class="number">0xf</span>];<span class="comment">// 取字节中低 4 位的数字转换</span></span><br><span class="line">        stringbuffer.append(c0);</span><br><span class="line">        stringbuffer.append(c1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JwtUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.stubackend.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWT;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWTVerifier;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.algorithms.Algorithm;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.interfaces.Claim;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.interfaces.DecodedJWT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;professoruser&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//接受业务数据，生成token并返回</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">genToken</span><span class="params">(Map&lt;String, Object&gt; claims)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JWT.create()</span><br><span class="line">                .withClaim(<span class="string">&quot;claims&quot;</span>,claims)<span class="comment">//添加载荷</span></span><br><span class="line">                .withExpiresAt(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis()+<span class="number">1000</span>*<span class="number">60</span>))<span class="comment">//添加过期时间,1s=1000,这里过期时间为1min</span></span><br><span class="line">                .sign(Algorithm.HMAC256(key));<span class="comment">//指定算法，配置密钥</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//接收token，验证token，并返回业务数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title function_">parseToken</span><span class="params">(String token)</span> &#123;</span><br><span class="line">        <span class="comment">//定义字符串，模拟用户传递过来的token</span></span><br><span class="line">        <span class="keyword">return</span> JWT.require(Algorithm.HMAC256(key))</span><br><span class="line">                .build()</span><br><span class="line">                .verify(token)</span><br><span class="line">                .getClaim(<span class="string">&quot;claims&quot;</span>)</span><br><span class="line">                .asMap();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ThreadLocal</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadLocalUtil</span> &#123;</span><br><span class="line">    <span class="comment">//提供ThreadLocal对象,</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">ThreadLocal</span> <span class="variable">THREAD_LOCAL</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据键获取值,使用泛型T</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">get</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (T) THREAD_LOCAL.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存储键值对</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(Object value)</span>&#123;</span><br><span class="line">        THREAD_LOCAL.set(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//清除ThreadLocal 防止内存泄漏</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">()</span>&#123;</span><br><span class="line">        THREAD_LOCAL.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="各种零碎合集"><a href="#各种零碎合集" class="headerlink" title="各种零碎合集"></a>各种零碎合集</h1><h2 id="1-安装maven问题：mvn不是内部或外部命令，也不是可运行的程序。"><a href="#1-安装maven问题：mvn不是内部或外部命令，也不是可运行的程序。" class="headerlink" title="1.安装maven问题：mvn不是内部或外部命令，也不是可运行的程序。"></a>1.安装maven问题：mvn不是内部或外部命令，也不是可运行的程序。</h2><p>1.检查java_home路径，在cmd输入java -version，javac -version验证环境是否正确。</p><p>2.将 %SystemRoot%\system32; %SystemRoot%; %SystemRoot%\System32\Wbem 这几个移动到最前端即可，如果没有，请添加上。重新用管理员身份打开cmd，输入mvn -v。</p><h2 id="2-快捷方式"><a href="#2-快捷方式" class="headerlink" title="2.快捷方式"></a>2.快捷方式</h2><ul><li>要输出到控制台的内容后面加上 .sout 会自动生成system.out这部分代码。</li><li>要定义的变量后面加上 .var 会自动生成变量</li><li>鼠标点击未实现的方法，alt＋回车会自动在相应位置生成要实现的方法类框架。</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
